{"metaData": {"version": "1.0.0", "versionNumber": 65536}, "projectSettings": {"hideInRemoteControl": true, "containers": {"dashboardSettings": {"parameters": [{"value": "", "controlAddress": "/showDashboardOnStartup", "enabled": false}]}, "customDefinitions": {}, "rmpSettings": {}}}, "dashboardManager": {"hideInRemoteControl": true, "viewOffset": [0, 0], "viewZoom": 1.0}, "parrots": {"hideInRemoteControl": true, "viewOffset": [0, 0], "viewZoom": 1.0}, "layout": {"mainLayout": {"type": 1, "width": 2048, "height": 1189, "direction": 2, "shifters": [{"type": 1, "width": 2048, "height": 1189, "direction": 1, "shifters": [{"type": 1, "width": 1505, "height": 1189, "direction": 1, "shifters": [{"type": 1, "width": 270, "height": 1189, "direction": 2, "shifters": [{"type": 0, "width": 270, "height": 487, "currentContent": "Screens", "tabs": [{"name": "Screens"}, {"name": "Outliner"}]}, {"type": 0, "width": 270, "height": 696, "currentContent": "Medias", "tabs": [{"name": "Medias"}]}]}, {"type": 1, "width": 1228, "height": 1189, "direction": 2, "shifters": [{"type": 0, "width": 1228, "height": 541, "currentContent": "Screen Editor", "tabs": [{"name": "Screen Editor"}, {"name": "Online Explorer"}]}, {"type": 0, "width": 1228, "height": 642, "currentContent": "Sequence Editor", "tabs": [{"name": "Sequence Editor"}]}]}]}, {"type": 1, "width": 537, "height": 1189, "direction": 2, "shifters": [{"type": 0, "width": 537, "height": 813, "currentContent": "Inspector", "tabs": [{"name": "Inspector"}]}, {"type": 0, "width": 537, "height": 370, "currentContent": "Logger", "tabs": [{"name": "Logger"}]}]}]}]}, "windows": null}, "media": {"items": [{"parameters": [{"value": "Image/Golden Gang Ultreia_1920x1080.png", "controlAddress": "/filePath"}], "niceName": "Mire FullHD", "hideInRemoteControl": true, "containers": {"mediaParameters": {}}, "type": "Picture"}, {"parameters": [{"value": "Image/Golden Gang Ultreia_1024x768.png", "controlAddress": "/filePath"}], "niceName": "Mire XGA", "hideInRemoteControl": true, "containers": {"mediaParameters": {}}, "type": "Picture"}, {"parameters": [{"value": "Image/Golden Gang Ultreia_1080x1920.png", "controlAddress": "/filePath"}], "niceName": "Mire Full HD Portrait", "hideInRemoteControl": true, "containers": {"mediaParameters": {}}, "type": "Picture"}, {"parameters": [{"value": "Image/_650x186.png", "controlAddress": "/filePath"}], "niceName": "Mire 650x186", "hideInRemoteControl": true, "containers": {"mediaParameters": {}}, "type": "Picture"}, {"parameters": [{"value": 1350, "hexMode": false, "controlAddress": "/width"}, {"value": 954, "hexMode": false, "controlAddress": "/height"}, {"value": "ShaderToy File", "controlAddress": "/shaderType"}, {"value": "C:/Users/ULTREIA/Desktop/grid.shader", "controlAddress": "/fragmentShader"}, {"value": "Mfs3D2", "controlAddress": "/shaderToyID"}, {"value": "Bd8jRr", "controlAddress": "/shaderToyKey"}, {"value": false, "controlAddress": "/keepOfflineCache"}, {"value": [1.0, 1.0, 1.0, 1.0], "controlAddress": "/backgroundColor"}], "niceName": "Test Pattern Fond de sc\u00e8ne", "hideInRemoteControl": true, "containers": {"mediaParameters": {}, "sourceMedias": {}}, "type": "Shader", "shaderCache": "// \u00cd\u00f1igo Qu\u00edlez\r\n// https://iquilezles.org/articles/distfunctions2d/\r\n#define     TAU 6.28318530717958647 // pi * 2\r\n#define     PI  3.14159265358979323 // pi\r\n\r\n// hsv to rgb\r\nvec3 hsv2rgb(vec3 c) {\r\n  vec3 rgb = clamp(abs(mod(c.x*6.+vec3(0.,4.,2.),6.)-3.)-1.,0.,1.);\r\n  rgb = rgb * rgb * (3. - 2. * rgb);\r\n  return c.z * mix(vec3(1.), rgb, c.y);\r\n}\r\n\r\n// sd polygon\r\nconst int N = 8;\r\nfloat sdPolygon( in vec2 p, in vec2[N] v )\r\n{\r\n    int num = v.length();\r\n    float d = dot(p-v[0],p-v[0]);\r\n    float s = 1.0;\r\n    for( int i=0, j=num-1; i<num; j=i, i++ )\r\n    {\r\n        // distance\r\n        vec2 e = v[j] - v[i];\r\n        vec2 w =    p - v[i];\r\n        vec2 b = w - e*clamp( dot(w,e)/dot(e,e), 0.0, 1.0 );\r\n        d = min( d, dot(b,b) );\r\n\r\n        // winding number from http://geomalgorithms.com/a03-_inclusion.html\r\n        bvec3 cond = bvec3( p.y>=v[i].y, \r\n                            p.y <v[j].y, \r\n                            e.x*w.y>e.y*w.x );\r\n        if( all(cond) || all(not(cond)) ) s=-s;  \r\n    }\r\n    \r\n    return s*sqrt(d);\r\n}\r\n\r\n// sd segment\r\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\r\n{\r\n    vec2 pa = p-a, ba = b-a;\r\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\r\n    return length( pa - ba*h );\r\n}\r\n\r\n// sd box\r\nfloat sdBox( vec2 p, vec2 b, vec2 o)\r\n{\r\n    p -= o;\r\n    vec2 d = abs(p)-b;\r\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\r\n}\r\n\r\n// sd circle\r\nfloat sdCircle( vec2 p, float r )\r\n{\r\n    return length(p) - r;\r\n}\r\n\r\nfloat ndot(vec2 a, vec2 b ) { return a.x*b.x - a.y*b.y; }\r\n\r\n// sd rhombus\r\nfloat sdRhombus( in vec2 p, in vec2 b ) \r\n{\r\n    p = abs(p);\r\n\r\n    float h = clamp( ndot(b-2.0*p,b)/dot(b,b), -1.0, 1.0 );\r\n    float d = length( p-0.5*b*vec2(1.0-h,1.0+h) );\r\n\r\n\treturn d * sign( p.x*b.y + p.y*b.x - b.x*b.y );\r\n}\r\n\r\n// sd distorted pill\r\nfloat sdDistortedPill(vec2 p, vec2 start, vec2 end, float radius, float power, float depth)\r\n{\r\n    p = -p;\r\n    vec2 dir = normalize(end - start);\r\n\r\n    vec2 localP = p - start;\r\n    float proj = dot(localP, dir);\r\n    float perpProj = dot(localP, vec2(-dir.y, dir.x));\r\n\r\n    float alongLine = clamp(proj, 0.0, length(end - start));\r\n    vec2 closestPoint = start + dir * alongLine;\r\n\r\n    float d = length(p - closestPoint) - radius;\r\n\r\n    float frequency = PI / length(end - start);\r\n    float sind = sin(frequency * alongLine);\r\n    sind = pow(sind, power);\r\n    sind *= depth*radius;\r\n    \r\n    return d + sind;\r\n}\r\n\r\n\r\n// stroke edge\r\nvoid stroke(float d, vec4 c, inout vec4 fragColor, float w)\r\n{\r\n    float m = 1.0-step(.5*w, abs(d));\r\n    fragColor = mix(fragColor, c, m*c.a);\r\n}\r\n\r\n// stroke edge with anti-aliasing\r\nvoid strokeAA(float d, vec4 c, inout vec4 fragColor, float w, float aa)\r\n{\r\n    float m = smoothstep(0.5 * (w + aa), 0.5 * (w - aa), abs(d));\r\n    fragColor = mix(fragColor, c, m*c.a);\r\n}\r\n\r\n// background color\r\n#define bg_c vec4(0.0, 0.0, 0.0, 1.0)\r\n\r\n// grid color\r\n#define grid_c vec4(.5, .5, .5, 1.0)\r\n\r\n// grid line width\r\n#define grid_w 2.0\r\n\r\n// grid vertical divisions\r\n// grid cross\r\n#define grid_s vec2(9.0, 0.0)                     \r\n\r\n// circlegrid color\r\n#define circlegrid_c vec4(0.5)\r\n\r\n// circlegrid line width\r\n// circlegrid size\r\n// circlegrid offset x\r\n// circle grid offset y\r\n#define circlegrid_s vec4(1.0, .25, 0.0, 0.0)\r\n\r\n// circle color\r\n#define circle_c vec4(1.0)\r\n\r\n// circle line width\r\n#define circle_w 2.0\r\n\r\n// TL to BR diagonal color\r\n#define diag1_c vec4(.5, 1.0, .75, 1.0)\r\n\r\n// BL to TR diagonal color\r\n#define diag2_c vec4(1.0, .5, .666, 1.0)\r\n\r\n// diagonal line width\r\n#define diag_w 2.0\r\n\r\n// horizontal centerline color\r\n#define centerh_c vec4(1.0, 1.0, .5, 1.0)\r\n\r\n// vertical centerline color\r\n#define centerv_c vec4(1.0, 1.0, .5, 1.0)\r\n\r\n// center line width\r\n#define center_w 2.0\r\n\r\n// rainbow line width\r\n// rainbow alpha\r\n// rainbow period\r\n// rainbow offset\r\n#define rainbow_s vec4(3.0, 1.0, 2.0, .17)\r\n\r\n// border color\r\n#define border_c vec4(.5, 1.0, .5, 1.0)\r\n\r\n// border line width\r\n#define border_w 2.0\r\n\r\n// logo color 1\r\n#define logo_c1 vec4(0.0, 0.0, 0.0, 1.0)\r\n\r\n// logo color 2\r\n#define logo_c2 vec4(1.0, 1.0, 1.0, 1.0)\r\n\r\n// logo color 3\r\n#define logo_c3 vec4(.5, 0.5, 0.5, 1.0)\r\n\r\n// logo type\r\n// logo size\r\n#define logo_s vec2(0.0, .1)\r\n\r\n// grid\r\nvoid grid(vec2 p, float px_size, inout vec4 fragColor)\r\n{\r\n    float gc = (1.0 - grid_s.y)*.5;\r\n    vec2 grid = p - round(p*grid_s.x)/grid_s.x;\r\n    grid *= grid_s.x;\r\n    float d = min(abs(grid.x), abs(grid.y));\r\n    vec2 cross = vec2(step(gc, abs(grid.x)), step(gc, abs(grid.y)));\r\n    d += max(cross.x, cross.y);\r\n    stroke(d, grid_c, fragColor, grid_s.x*grid_w*px_size);\r\n}\r\n\r\n// circle grid\r\nvoid circleGrid(vec2 p, float px_size, inout vec4 fragColor)\r\n{\r\n    p -= circlegrid_s.zw/grid_s.x;\r\n    vec2 cell = mod(p * vec2(grid_s.x), 1.0);\r\n    vec2 center = mod(vec2(.5), 1.0);\r\n    float radius = circlegrid_s.y;\r\n    vec2 dist = cell - center;\r\n    float d = length(dist) - radius;\r\n    strokeAA(d, circlegrid_c, fragColor, circlegrid_s.x*grid_s.x * px_size, length(fwidth(p*grid_s.x)));\r\n}\r\n\r\n// circle\r\nvoid circle(vec2 p, vec2 center, float radius, vec4 c, float px_size, inout vec4 fragColor)\r\n{\r\n    center = center + round(p);\r\n    \r\n    float d = length(p - center) - radius;\r\n    strokeAA(d, c, fragColor, circle_w * px_size, length(fwidth(p)));\r\n}\r\n\r\n// rainbow circle\r\nvoid rainbowCircle(vec2 p, vec2 center, float radius, vec4 c, float px_size, inout vec4 fragColor)\r\n{\r\n\tvec2 pq = vec2(atan(p.x, p.y) / TAU*rainbow_s.z + rainbow_s.w, length(p));\r\n\tfloat d = length(p - center) - radius;\r\n\tc = vec4(hsv2rgb(vec3(pq.x, 1., 1.)), 1.0);\r\n\tstrokeAA(d, c, fragColor, rainbow_s.x * px_size, length(fwidth(p)));\r\n}\r\n\r\n// horizontal center line\r\nvoid centerH(vec2 p, float px_size, inout vec4 fragColor)\r\n{\r\n    stroke(abs(p.x), centerh_c, fragColor, center_w*px_size);\r\n    p = mod(p, 1.0)-.5;\r\n    stroke(abs(p.x), centerh_c, fragColor, center_w*px_size);\r\n}\r\n\r\n// vertical center line\r\nvoid centerV(vec2 p, float px_size, inout vec4 fragColor)\r\n{\r\n    stroke(abs(p.y), centerv_c, fragColor, center_w*px_size);\r\n    p = mod(p, 1.0)-.5;\r\n    stroke(abs(p.y), centerh_c, fragColor, center_w*px_size);\r\n}\r\n\r\n// diagonal lines\r\nvoid diagonals(vec2 p, float px_size, float aspect, inout vec4 fragColor)\r\n{\r\n\tp += .5;\r\n\tp = mod(p, 1.0);\r\n\t//p = p - floor(p);\r\n\r\n\tfloat dist = abs(p.x - p.y);\r\n\tstrokeAA(dist, diag1_c, fragColor, diag_w*px_size, length(fwidth(p)));\r\n\t\r\n\tdist = abs(p.x + p.y)-1.0;\r\n\tstrokeAA(dist, diag2_c, fragColor, diag_w*px_size, length(fwidth(p)));\r\n\t//fragColor = vec4(vec3(dist), 1.0);\r\n}\r\n\r\n// render border\r\nvoid border(vec2 p, vec2 res, inout vec4 fragColor)\r\n{\r\n\tfloat d = min(min(p.x, 1.0-p.x)*res.x, min(p.y, 1.0-p.y)*res.y);\r\n\tfragColor = mix(fragColor, border_c, 1.0-step(border_w, d));\r\n}\r\n\r\n\r\n// mw logo\r\nvoid mwLogo(vec2 p, vec2 offset, float scale, float aspect, float px_size, inout vec4 fragColor)\r\n{\r\n\tp -= offset;\r\n\tp.y *= .6;\r\n\tp /= scale;\r\n\t\r\n\t\r\n\tfloat w = 20.0 * px_size;\r\n\t\r\n\tvec2 ra =vec2(0.5,0.5);\r\n\tfloat d1 = sdRhombus( vec2(p.x + .5, p.y), ra );\r\n\tfloat d2 = sdRhombus( vec2(p.x - .5, p.y), ra );\r\n\tfragColor = mix(fragColor, vec4(vec3(pow(min(d1+.95, d2+.95), 8.0)), 1.0)*logo_c3, (1.0-step(0.0, min(d1, d2)))*logo_c3.a);\r\n\tstrokeAA(min(d1, d2), logo_c2, fragColor, w, length(fwidth(p)));\r\n\tstrokeAA(min(d1+.1, d2+.1), logo_c2 * vec4(0.8), fragColor, w, length(fwidth(p)));\r\n\tstrokeAA(min(d1+.2, d2+.2), logo_c2 * vec4(0.6), fragColor, w, length(fwidth(p)));\r\n\tstrokeAA(min(d1+.3, d2+.3), logo_c2 * vec4(0.4), fragColor, w, length(fwidth(p)));\r\n\t\r\n\tfloat d3 = sdSegment(p, vec2(1.0, 0.0), vec2(-1.0, 0.0));\r\n\tstrokeAA(d3, logo_c2, fragColor, w, length(fwidth(p)));\r\n}\r\n\r\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\r\n{\r\n    // normalized pixel coordinates\r\n    vec2 vUV = fragCoord/iResolution.xy;\r\n    \r\n    \r\n    // resolution\r\n    vec2 res = iResolution.xy;\r\n    \r\n    // aspect ratio\r\n    float aspect = res.x / res.y;\r\n\t\r\n\t// -.5 to .5 coordinate space\r\n\tvec2 p = vUV.st-.5;\r\n\t\r\n\tvec2 logo_offset = vec2(0.0, 0.0);\r\n\t\r\n\t// pixel size\r\n\tfloat px_size = 0.0;\r\n\t\r\n\t// alignment for different aspect ratios\r\n\tif (aspect > 1.0)\r\n\t{\r\n\t\tp.x *= aspect;\r\n\t\tlogo_offset.x = (aspect>1.0+logo_s.y*2.0)?.5 : .25;\r\n\t\tpx_size = 1.0/res.y;\r\n\t} else {\r\n\t\tp.y /= aspect;\r\n\t\tlogo_offset.y = (aspect<1.0-logo_s.y*2.0)?.5 : .25;\r\n\t\tpx_size = 1.0/res.x;\r\n\t} \r\n\t\r\n\r\n\t\r\n\t// background color\r\n\tfragColor = bg_c;\r\n\t\r\n\t// square grid\r\n\tgrid(p, px_size, fragColor);\r\n\t\r\n\t// circle grid\r\n\tcircleGrid(p, px_size, fragColor);\r\n\t\r\n\t// big circles\r\n    circle(p, vec2(0), 0.5, circle_c, px_size, fragColor);\r\n    \r\n    // diagonal lines\r\n    diagonals(p, px_size, aspect, fragColor);\r\n    \r\n    // vertical center lines\r\n\tcenterV(p, px_size, fragColor);\r\n\t\r\n\t// horizontal center lines\r\n\tcenterH(p, px_size, fragColor);\r\n\t\r\n\t// rainbow circle\r\n    rainbowCircle(p, vec2(0), .333, vec4(1.0), px_size, fragColor);\r\n\r\n\t// border lines\r\n    //vec2 b_pos = vec2(vUV.x * aspect, vUV.y);\r\n    //b_pos = vUV.xy * res;\r\n    border(vUV.st, res, fragColor);\r\n    \r\n\r\n    // mw logo\r\n\tmwLogo(p, logo_offset, logo_s.y, aspect, px_size, fragColor);\r\n\tmwLogo(p, -logo_offset, logo_s.y, aspect, px_size, fragColor);\r\n\r\n\t\r\n\t//pxGrid(p, px_size, fragColor);\r\n}", "sourceMedias": {}}, {"parameters": [{"value": 384, "hexMode": false, "controlAddress": "/width"}, {"value": 820, "hexMode": false, "controlAddress": "/height"}, {"value": "ShaderToy File", "controlAddress": "/shaderType"}, {"value": "C:/Users/ULTREIA/Desktop/grid.shader", "controlAddress": "/fragmentShader"}, {"value": "Mfs3D2", "controlAddress": "/shaderToyID"}, {"value": "Bd8jRr", "controlAddress": "/shaderToyKey"}, {"value": false, "controlAddress": "/keepOfflineCache"}, {"value": [1.0, 1.0, 1.0, 1.0], "controlAddress": "/backgroundColor"}], "niceName": "Test Pattern Fond de sc\u00e8ne jar", "hideInRemoteControl": true, "containers": {"mediaParameters": {}, "sourceMedias": {}}, "type": "Shader", "shaderCache": "// \u00cd\u00f1igo Qu\u00edlez\r\n// https://iquilezles.org/articles/distfunctions2d/\r\n#define     TAU 6.28318530717958647 // pi * 2\r\n#define     PI  3.14159265358979323 // pi\r\n\r\n// hsv to rgb\r\nvec3 hsv2rgb(vec3 c) {\r\n  vec3 rgb = clamp(abs(mod(c.x*6.+vec3(0.,4.,2.),6.)-3.)-1.,0.,1.);\r\n  rgb = rgb * rgb * (3. - 2. * rgb);\r\n  return c.z * mix(vec3(1.), rgb, c.y);\r\n}\r\n\r\n// sd polygon\r\nconst int N = 8;\r\nfloat sdPolygon( in vec2 p, in vec2[N] v )\r\n{\r\n    int num = v.length();\r\n    float d = dot(p-v[0],p-v[0]);\r\n    float s = 1.0;\r\n    for( int i=0, j=num-1; i<num; j=i, i++ )\r\n    {\r\n        // distance\r\n        vec2 e = v[j] - v[i];\r\n        vec2 w =    p - v[i];\r\n        vec2 b = w - e*clamp( dot(w,e)/dot(e,e), 0.0, 1.0 );\r\n        d = min( d, dot(b,b) );\r\n\r\n        // winding number from http://geomalgorithms.com/a03-_inclusion.html\r\n        bvec3 cond = bvec3( p.y>=v[i].y, \r\n                            p.y <v[j].y, \r\n                            e.x*w.y>e.y*w.x );\r\n        if( all(cond) || all(not(cond)) ) s=-s;  \r\n    }\r\n    \r\n    return s*sqrt(d);\r\n}\r\n\r\n// sd segment\r\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\r\n{\r\n    vec2 pa = p-a, ba = b-a;\r\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\r\n    return length( pa - ba*h );\r\n}\r\n\r\n// sd box\r\nfloat sdBox( vec2 p, vec2 b, vec2 o)\r\n{\r\n    p -= o;\r\n    vec2 d = abs(p)-b;\r\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\r\n}\r\n\r\n// sd circle\r\nfloat sdCircle( vec2 p, float r )\r\n{\r\n    return length(p) - r;\r\n}\r\n\r\nfloat ndot(vec2 a, vec2 b ) { return a.x*b.x - a.y*b.y; }\r\n\r\n// sd rhombus\r\nfloat sdRhombus( in vec2 p, in vec2 b ) \r\n{\r\n    p = abs(p);\r\n\r\n    float h = clamp( ndot(b-2.0*p,b)/dot(b,b), -1.0, 1.0 );\r\n    float d = length( p-0.5*b*vec2(1.0-h,1.0+h) );\r\n\r\n\treturn d * sign( p.x*b.y + p.y*b.x - b.x*b.y );\r\n}\r\n\r\n// sd distorted pill\r\nfloat sdDistortedPill(vec2 p, vec2 start, vec2 end, float radius, float power, float depth)\r\n{\r\n    p = -p;\r\n    vec2 dir = normalize(end - start);\r\n\r\n    vec2 localP = p - start;\r\n    float proj = dot(localP, dir);\r\n    float perpProj = dot(localP, vec2(-dir.y, dir.x));\r\n\r\n    float alongLine = clamp(proj, 0.0, length(end - start));\r\n    vec2 closestPoint = start + dir * alongLine;\r\n\r\n    float d = length(p - closestPoint) - radius;\r\n\r\n    float frequency = PI / length(end - start);\r\n    float sind = sin(frequency * alongLine);\r\n    sind = pow(sind, power);\r\n    sind *= depth*radius;\r\n    \r\n    return d + sind;\r\n}\r\n\r\n\r\n// stroke edge\r\nvoid stroke(float d, vec4 c, inout vec4 fragColor, float w)\r\n{\r\n    float m = 1.0-step(.5*w, abs(d));\r\n    fragColor = mix(fragColor, c, m*c.a);\r\n}\r\n\r\n// stroke edge with anti-aliasing\r\nvoid strokeAA(float d, vec4 c, inout vec4 fragColor, float w, float aa)\r\n{\r\n    float m = smoothstep(0.5 * (w + aa), 0.5 * (w - aa), abs(d));\r\n    fragColor = mix(fragColor, c, m*c.a);\r\n}\r\n\r\n// background color\r\n#define bg_c vec4(0.0, 0.0, 0.0, 1.0)\r\n\r\n// grid color\r\n#define grid_c vec4(.5, .5, .5, 1.0)\r\n\r\n// grid line width\r\n#define grid_w 2.0\r\n\r\n// grid vertical divisions\r\n// grid cross\r\n#define grid_s vec2(9.0, 0.0)                     \r\n\r\n// circlegrid color\r\n#define circlegrid_c vec4(0.5)\r\n\r\n// circlegrid line width\r\n// circlegrid size\r\n// circlegrid offset x\r\n// circle grid offset y\r\n#define circlegrid_s vec4(1.0, .25, 0.0, 0.0)\r\n\r\n// circle color\r\n#define circle_c vec4(1.0)\r\n\r\n// circle line width\r\n#define circle_w 2.0\r\n\r\n// TL to BR diagonal color\r\n#define diag1_c vec4(.5, 1.0, .75, 1.0)\r\n\r\n// BL to TR diagonal color\r\n#define diag2_c vec4(1.0, .5, .666, 1.0)\r\n\r\n// diagonal line width\r\n#define diag_w 2.0\r\n\r\n// horizontal centerline color\r\n#define centerh_c vec4(1.0, 1.0, .5, 1.0)\r\n\r\n// vertical centerline color\r\n#define centerv_c vec4(1.0, 1.0, .5, 1.0)\r\n\r\n// center line width\r\n#define center_w 2.0\r\n\r\n// rainbow line width\r\n// rainbow alpha\r\n// rainbow period\r\n// rainbow offset\r\n#define rainbow_s vec4(3.0, 1.0, 2.0, .17)\r\n\r\n// border color\r\n#define border_c vec4(.5, 1.0, .5, 1.0)\r\n\r\n// border line width\r\n#define border_w 2.0\r\n\r\n// logo color 1\r\n#define logo_c1 vec4(0.0, 0.0, 0.0, 1.0)\r\n\r\n// logo color 2\r\n#define logo_c2 vec4(1.0, 1.0, 1.0, 1.0)\r\n\r\n// logo color 3\r\n#define logo_c3 vec4(.5, 0.5, 0.5, 1.0)\r\n\r\n// logo type\r\n// logo size\r\n#define logo_s vec2(0.0, .1)\r\n\r\n// grid\r\nvoid grid(vec2 p, float px_size, inout vec4 fragColor)\r\n{\r\n    float gc = (1.0 - grid_s.y)*.5;\r\n    vec2 grid = p - round(p*grid_s.x)/grid_s.x;\r\n    grid *= grid_s.x;\r\n    float d = min(abs(grid.x), abs(grid.y));\r\n    vec2 cross = vec2(step(gc, abs(grid.x)), step(gc, abs(grid.y)));\r\n    d += max(cross.x, cross.y);\r\n    stroke(d, grid_c, fragColor, grid_s.x*grid_w*px_size);\r\n}\r\n\r\n// circle grid\r\nvoid circleGrid(vec2 p, float px_size, inout vec4 fragColor)\r\n{\r\n    p -= circlegrid_s.zw/grid_s.x;\r\n    vec2 cell = mod(p * vec2(grid_s.x), 1.0);\r\n    vec2 center = mod(vec2(.5), 1.0);\r\n    float radius = circlegrid_s.y;\r\n    vec2 dist = cell - center;\r\n    float d = length(dist) - radius;\r\n    strokeAA(d, circlegrid_c, fragColor, circlegrid_s.x*grid_s.x * px_size, length(fwidth(p*grid_s.x)));\r\n}\r\n\r\n// circle\r\nvoid circle(vec2 p, vec2 center, float radius, vec4 c, float px_size, inout vec4 fragColor)\r\n{\r\n    center = center + round(p);\r\n    \r\n    float d = length(p - center) - radius;\r\n    strokeAA(d, c, fragColor, circle_w * px_size, length(fwidth(p)));\r\n}\r\n\r\n// rainbow circle\r\nvoid rainbowCircle(vec2 p, vec2 center, float radius, vec4 c, float px_size, inout vec4 fragColor)\r\n{\r\n\tvec2 pq = vec2(atan(p.x, p.y) / TAU*rainbow_s.z + rainbow_s.w, length(p));\r\n\tfloat d = length(p - center) - radius;\r\n\tc = vec4(hsv2rgb(vec3(pq.x, 1., 1.)), 1.0);\r\n\tstrokeAA(d, c, fragColor, rainbow_s.x * px_size, length(fwidth(p)));\r\n}\r\n\r\n// horizontal center line\r\nvoid centerH(vec2 p, float px_size, inout vec4 fragColor)\r\n{\r\n    stroke(abs(p.x), centerh_c, fragColor, center_w*px_size);\r\n    p = mod(p, 1.0)-.5;\r\n    stroke(abs(p.x), centerh_c, fragColor, center_w*px_size);\r\n}\r\n\r\n// vertical center line\r\nvoid centerV(vec2 p, float px_size, inout vec4 fragColor)\r\n{\r\n    stroke(abs(p.y), centerv_c, fragColor, center_w*px_size);\r\n    p = mod(p, 1.0)-.5;\r\n    stroke(abs(p.y), centerh_c, fragColor, center_w*px_size);\r\n}\r\n\r\n// diagonal lines\r\nvoid diagonals(vec2 p, float px_size, float aspect, inout vec4 fragColor)\r\n{\r\n\tp += .5;\r\n\tp = mod(p, 1.0);\r\n\t//p = p - floor(p);\r\n\r\n\tfloat dist = abs(p.x - p.y);\r\n\tstrokeAA(dist, diag1_c, fragColor, diag_w*px_size, length(fwidth(p)));\r\n\t\r\n\tdist = abs(p.x + p.y)-1.0;\r\n\tstrokeAA(dist, diag2_c, fragColor, diag_w*px_size, length(fwidth(p)));\r\n\t//fragColor = vec4(vec3(dist), 1.0);\r\n}\r\n\r\n// render border\r\nvoid border(vec2 p, vec2 res, inout vec4 fragColor)\r\n{\r\n\tfloat d = min(min(p.x, 1.0-p.x)*res.x, min(p.y, 1.0-p.y)*res.y);\r\n\tfragColor = mix(fragColor, border_c, 1.0-step(border_w, d));\r\n}\r\n\r\n\r\n// mw logo\r\nvoid mwLogo(vec2 p, vec2 offset, float scale, float aspect, float px_size, inout vec4 fragColor)\r\n{\r\n\tp -= offset;\r\n\tp.y *= .6;\r\n\tp /= scale;\r\n\t\r\n\t\r\n\tfloat w = 20.0 * px_size;\r\n\t\r\n\tvec2 ra =vec2(0.5,0.5);\r\n\tfloat d1 = sdRhombus( vec2(p.x + .5, p.y), ra );\r\n\tfloat d2 = sdRhombus( vec2(p.x - .5, p.y), ra );\r\n\tfragColor = mix(fragColor, vec4(vec3(pow(min(d1+.95, d2+.95), 8.0)), 1.0)*logo_c3, (1.0-step(0.0, min(d1, d2)))*logo_c3.a);\r\n\tstrokeAA(min(d1, d2), logo_c2, fragColor, w, length(fwidth(p)));\r\n\tstrokeAA(min(d1+.1, d2+.1), logo_c2 * vec4(0.8), fragColor, w, length(fwidth(p)));\r\n\tstrokeAA(min(d1+.2, d2+.2), logo_c2 * vec4(0.6), fragColor, w, length(fwidth(p)));\r\n\tstrokeAA(min(d1+.3, d2+.3), logo_c2 * vec4(0.4), fragColor, w, length(fwidth(p)));\r\n\t\r\n\tfloat d3 = sdSegment(p, vec2(1.0, 0.0), vec2(-1.0, 0.0));\r\n\tstrokeAA(d3, logo_c2, fragColor, w, length(fwidth(p)));\r\n}\r\n\r\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\r\n{\r\n    // normalized pixel coordinates\r\n    vec2 vUV = fragCoord/iResolution.xy;\r\n    \r\n    \r\n    // resolution\r\n    vec2 res = iResolution.xy;\r\n    \r\n    // aspect ratio\r\n    float aspect = res.x / res.y;\r\n\t\r\n\t// -.5 to .5 coordinate space\r\n\tvec2 p = vUV.st-.5;\r\n\t\r\n\tvec2 logo_offset = vec2(0.0, 0.0);\r\n\t\r\n\t// pixel size\r\n\tfloat px_size = 0.0;\r\n\t\r\n\t// alignment for different aspect ratios\r\n\tif (aspect > 1.0)\r\n\t{\r\n\t\tp.x *= aspect;\r\n\t\tlogo_offset.x = (aspect>1.0+logo_s.y*2.0)?.5 : .25;\r\n\t\tpx_size = 1.0/res.y;\r\n\t} else {\r\n\t\tp.y /= aspect;\r\n\t\tlogo_offset.y = (aspect<1.0-logo_s.y*2.0)?.5 : .25;\r\n\t\tpx_size = 1.0/res.x;\r\n\t} \r\n\t\r\n\r\n\t\r\n\t// background color\r\n\tfragColor = bg_c;\r\n\t\r\n\t// square grid\r\n\tgrid(p, px_size, fragColor);\r\n\t\r\n\t// circle grid\r\n\tcircleGrid(p, px_size, fragColor);\r\n\t\r\n\t// big circles\r\n    circle(p, vec2(0), 0.5, circle_c, px_size, fragColor);\r\n    \r\n    // diagonal lines\r\n    diagonals(p, px_size, aspect, fragColor);\r\n    \r\n    // vertical center lines\r\n\tcenterV(p, px_size, fragColor);\r\n\t\r\n\t// horizontal center lines\r\n\tcenterH(p, px_size, fragColor);\r\n\t\r\n\t// rainbow circle\r\n    rainbowCircle(p, vec2(0), .333, vec4(1.0), px_size, fragColor);\r\n\r\n\t// border lines\r\n    //vec2 b_pos = vec2(vUV.x * aspect, vUV.y);\r\n    //b_pos = vUV.xy * res;\r\n    border(vUV.st, res, fragColor);\r\n    \r\n\r\n    // mw logo\r\n\tmwLogo(p, logo_offset, logo_s.y, aspect, px_size, fragColor);\r\n\tmwLogo(p, -logo_offset, logo_s.y, aspect, px_size, fragColor);\r\n\r\n\t\r\n\t//pxGrid(p, px_size, fragColor);\r\n}", "sourceMedias": {}}, {"parameters": [{"value": 1986, "hexMode": false, "controlAddress": "/width"}, {"value": "ShaderToy File", "controlAddress": "/shaderType"}, {"value": "C:/Users/ULTREIA/Desktop/grid.shader", "controlAddress": "/fragmentShader"}, {"value": "Mfs3D2", "controlAddress": "/shaderToyID"}, {"value": "Bd8jRr", "controlAddress": "/shaderToyKey"}, {"value": false, "controlAddress": "/keepOfflineCache"}, {"value": [1.0, 1.0, 1.0, 1.0], "controlAddress": "/backgroundColor"}], "niceName": "Test Pattern Cour", "hideInRemoteControl": true, "containers": {"mediaParameters": {}, "sourceMedias": {}}, "type": "Shader", "shaderCache": "// \u00cd\u00f1igo Qu\u00edlez\r\n// https://iquilezles.org/articles/distfunctions2d/\r\n#define     TAU 6.28318530717958647 // pi * 2\r\n#define     PI  3.14159265358979323 // pi\r\n\r\n// hsv to rgb\r\nvec3 hsv2rgb(vec3 c) {\r\n  vec3 rgb = clamp(abs(mod(c.x*6.+vec3(0.,4.,2.),6.)-3.)-1.,0.,1.);\r\n  rgb = rgb * rgb * (3. - 2. * rgb);\r\n  return c.z * mix(vec3(1.), rgb, c.y);\r\n}\r\n\r\n// sd polygon\r\nconst int N = 8;\r\nfloat sdPolygon( in vec2 p, in vec2[N] v )\r\n{\r\n    int num = v.length();\r\n    float d = dot(p-v[0],p-v[0]);\r\n    float s = 1.0;\r\n    for( int i=0, j=num-1; i<num; j=i, i++ )\r\n    {\r\n        // distance\r\n        vec2 e = v[j] - v[i];\r\n        vec2 w =    p - v[i];\r\n        vec2 b = w - e*clamp( dot(w,e)/dot(e,e), 0.0, 1.0 );\r\n        d = min( d, dot(b,b) );\r\n\r\n        // winding number from http://geomalgorithms.com/a03-_inclusion.html\r\n        bvec3 cond = bvec3( p.y>=v[i].y, \r\n                            p.y <v[j].y, \r\n                            e.x*w.y>e.y*w.x );\r\n        if( all(cond) || all(not(cond)) ) s=-s;  \r\n    }\r\n    \r\n    return s*sqrt(d);\r\n}\r\n\r\n// sd segment\r\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\r\n{\r\n    vec2 pa = p-a, ba = b-a;\r\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\r\n    return length( pa - ba*h );\r\n}\r\n\r\n// sd box\r\nfloat sdBox( vec2 p, vec2 b, vec2 o)\r\n{\r\n    p -= o;\r\n    vec2 d = abs(p)-b;\r\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\r\n}\r\n\r\n// sd circle\r\nfloat sdCircle( vec2 p, float r )\r\n{\r\n    return length(p) - r;\r\n}\r\n\r\nfloat ndot(vec2 a, vec2 b ) { return a.x*b.x - a.y*b.y; }\r\n\r\n// sd rhombus\r\nfloat sdRhombus( in vec2 p, in vec2 b ) \r\n{\r\n    p = abs(p);\r\n\r\n    float h = clamp( ndot(b-2.0*p,b)/dot(b,b), -1.0, 1.0 );\r\n    float d = length( p-0.5*b*vec2(1.0-h,1.0+h) );\r\n\r\n\treturn d * sign( p.x*b.y + p.y*b.x - b.x*b.y );\r\n}\r\n\r\n// sd distorted pill\r\nfloat sdDistortedPill(vec2 p, vec2 start, vec2 end, float radius, float power, float depth)\r\n{\r\n    p = -p;\r\n    vec2 dir = normalize(end - start);\r\n\r\n    vec2 localP = p - start;\r\n    float proj = dot(localP, dir);\r\n    float perpProj = dot(localP, vec2(-dir.y, dir.x));\r\n\r\n    float alongLine = clamp(proj, 0.0, length(end - start));\r\n    vec2 closestPoint = start + dir * alongLine;\r\n\r\n    float d = length(p - closestPoint) - radius;\r\n\r\n    float frequency = PI / length(end - start);\r\n    float sind = sin(frequency * alongLine);\r\n    sind = pow(sind, power);\r\n    sind *= depth*radius;\r\n    \r\n    return d + sind;\r\n}\r\n\r\n\r\n// stroke edge\r\nvoid stroke(float d, vec4 c, inout vec4 fragColor, float w)\r\n{\r\n    float m = 1.0-step(.5*w, abs(d));\r\n    fragColor = mix(fragColor, c, m*c.a);\r\n}\r\n\r\n// stroke edge with anti-aliasing\r\nvoid strokeAA(float d, vec4 c, inout vec4 fragColor, float w, float aa)\r\n{\r\n    float m = smoothstep(0.5 * (w + aa), 0.5 * (w - aa), abs(d));\r\n    fragColor = mix(fragColor, c, m*c.a);\r\n}\r\n\r\n// background color\r\n#define bg_c vec4(0.0, 0.0, 0.0, 1.0)\r\n\r\n// grid color\r\n#define grid_c vec4(.5, .5, .5, 1.0)\r\n\r\n// grid line width\r\n#define grid_w 2.0\r\n\r\n// grid vertical divisions\r\n// grid cross\r\n#define grid_s vec2(9.0, 0.0)                     \r\n\r\n// circlegrid color\r\n#define circlegrid_c vec4(0.5)\r\n\r\n// circlegrid line width\r\n// circlegrid size\r\n// circlegrid offset x\r\n// circle grid offset y\r\n#define circlegrid_s vec4(1.0, .25, 0.0, 0.0)\r\n\r\n// circle color\r\n#define circle_c vec4(1.0)\r\n\r\n// circle line width\r\n#define circle_w 2.0\r\n\r\n// TL to BR diagonal color\r\n#define diag1_c vec4(.5, 1.0, .75, 1.0)\r\n\r\n// BL to TR diagonal color\r\n#define diag2_c vec4(1.0, .5, .666, 1.0)\r\n\r\n// diagonal line width\r\n#define diag_w 2.0\r\n\r\n// horizontal centerline color\r\n#define centerh_c vec4(1.0, 1.0, .5, 1.0)\r\n\r\n// vertical centerline color\r\n#define centerv_c vec4(1.0, 1.0, .5, 1.0)\r\n\r\n// center line width\r\n#define center_w 2.0\r\n\r\n// rainbow line width\r\n// rainbow alpha\r\n// rainbow period\r\n// rainbow offset\r\n#define rainbow_s vec4(3.0, 1.0, 2.0, .17)\r\n\r\n// border color\r\n#define border_c vec4(.5, 1.0, .5, 1.0)\r\n\r\n// border line width\r\n#define border_w 2.0\r\n\r\n// logo color 1\r\n#define logo_c1 vec4(0.0, 0.0, 0.0, 1.0)\r\n\r\n// logo color 2\r\n#define logo_c2 vec4(1.0, 1.0, 1.0, 1.0)\r\n\r\n// logo color 3\r\n#define logo_c3 vec4(.5, 0.5, 0.5, 1.0)\r\n\r\n// logo type\r\n// logo size\r\n#define logo_s vec2(0.0, .1)\r\n\r\n// grid\r\nvoid grid(vec2 p, float px_size, inout vec4 fragColor)\r\n{\r\n    float gc = (1.0 - grid_s.y)*.5;\r\n    vec2 grid = p - round(p*grid_s.x)/grid_s.x;\r\n    grid *= grid_s.x;\r\n    float d = min(abs(grid.x), abs(grid.y));\r\n    vec2 cross = vec2(step(gc, abs(grid.x)), step(gc, abs(grid.y)));\r\n    d += max(cross.x, cross.y);\r\n    stroke(d, grid_c, fragColor, grid_s.x*grid_w*px_size);\r\n}\r\n\r\n// circle grid\r\nvoid circleGrid(vec2 p, float px_size, inout vec4 fragColor)\r\n{\r\n    p -= circlegrid_s.zw/grid_s.x;\r\n    vec2 cell = mod(p * vec2(grid_s.x), 1.0);\r\n    vec2 center = mod(vec2(.5), 1.0);\r\n    float radius = circlegrid_s.y;\r\n    vec2 dist = cell - center;\r\n    float d = length(dist) - radius;\r\n    strokeAA(d, circlegrid_c, fragColor, circlegrid_s.x*grid_s.x * px_size, length(fwidth(p*grid_s.x)));\r\n}\r\n\r\n// circle\r\nvoid circle(vec2 p, vec2 center, float radius, vec4 c, float px_size, inout vec4 fragColor)\r\n{\r\n    center = center + round(p);\r\n    \r\n    float d = length(p - center) - radius;\r\n    strokeAA(d, c, fragColor, circle_w * px_size, length(fwidth(p)));\r\n}\r\n\r\n// rainbow circle\r\nvoid rainbowCircle(vec2 p, vec2 center, float radius, vec4 c, float px_size, inout vec4 fragColor)\r\n{\r\n\tvec2 pq = vec2(atan(p.x, p.y) / TAU*rainbow_s.z + rainbow_s.w, length(p));\r\n\tfloat d = length(p - center) - radius;\r\n\tc = vec4(hsv2rgb(vec3(pq.x, 1., 1.)), 1.0);\r\n\tstrokeAA(d, c, fragColor, rainbow_s.x * px_size, length(fwidth(p)));\r\n}\r\n\r\n// horizontal center line\r\nvoid centerH(vec2 p, float px_size, inout vec4 fragColor)\r\n{\r\n    stroke(abs(p.x), centerh_c, fragColor, center_w*px_size);\r\n    p = mod(p, 1.0)-.5;\r\n    stroke(abs(p.x), centerh_c, fragColor, center_w*px_size);\r\n}\r\n\r\n// vertical center line\r\nvoid centerV(vec2 p, float px_size, inout vec4 fragColor)\r\n{\r\n    stroke(abs(p.y), centerv_c, fragColor, center_w*px_size);\r\n    p = mod(p, 1.0)-.5;\r\n    stroke(abs(p.y), centerh_c, fragColor, center_w*px_size);\r\n}\r\n\r\n// diagonal lines\r\nvoid diagonals(vec2 p, float px_size, float aspect, inout vec4 fragColor)\r\n{\r\n\tp += .5;\r\n\tp = mod(p, 1.0);\r\n\t//p = p - floor(p);\r\n\r\n\tfloat dist = abs(p.x - p.y);\r\n\tstrokeAA(dist, diag1_c, fragColor, diag_w*px_size, length(fwidth(p)));\r\n\t\r\n\tdist = abs(p.x + p.y)-1.0;\r\n\tstrokeAA(dist, diag2_c, fragColor, diag_w*px_size, length(fwidth(p)));\r\n\t//fragColor = vec4(vec3(dist), 1.0);\r\n}\r\n\r\n// render border\r\nvoid border(vec2 p, vec2 res, inout vec4 fragColor)\r\n{\r\n\tfloat d = min(min(p.x, 1.0-p.x)*res.x, min(p.y, 1.0-p.y)*res.y);\r\n\tfragColor = mix(fragColor, border_c, 1.0-step(border_w, d));\r\n}\r\n\r\n\r\n// mw logo\r\nvoid mwLogo(vec2 p, vec2 offset, float scale, float aspect, float px_size, inout vec4 fragColor)\r\n{\r\n\tp -= offset;\r\n\tp.y *= .6;\r\n\tp /= scale;\r\n\t\r\n\t\r\n\tfloat w = 20.0 * px_size;\r\n\t\r\n\tvec2 ra =vec2(0.5,0.5);\r\n\tfloat d1 = sdRhombus( vec2(p.x + .5, p.y), ra );\r\n\tfloat d2 = sdRhombus( vec2(p.x - .5, p.y), ra );\r\n\tfragColor = mix(fragColor, vec4(vec3(pow(min(d1+.95, d2+.95), 8.0)), 1.0)*logo_c3, (1.0-step(0.0, min(d1, d2)))*logo_c3.a);\r\n\tstrokeAA(min(d1, d2), logo_c2, fragColor, w, length(fwidth(p)));\r\n\tstrokeAA(min(d1+.1, d2+.1), logo_c2 * vec4(0.8), fragColor, w, length(fwidth(p)));\r\n\tstrokeAA(min(d1+.2, d2+.2), logo_c2 * vec4(0.6), fragColor, w, length(fwidth(p)));\r\n\tstrokeAA(min(d1+.3, d2+.3), logo_c2 * vec4(0.4), fragColor, w, length(fwidth(p)));\r\n\t\r\n\tfloat d3 = sdSegment(p, vec2(1.0, 0.0), vec2(-1.0, 0.0));\r\n\tstrokeAA(d3, logo_c2, fragColor, w, length(fwidth(p)));\r\n}\r\n\r\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\r\n{\r\n    // normalized pixel coordinates\r\n    vec2 vUV = fragCoord/iResolution.xy;\r\n    \r\n    \r\n    // resolution\r\n    vec2 res = iResolution.xy;\r\n    \r\n    // aspect ratio\r\n    float aspect = res.x / res.y;\r\n\t\r\n\t// -.5 to .5 coordinate space\r\n\tvec2 p = vUV.st-.5;\r\n\t\r\n\tvec2 logo_offset = vec2(0.0, 0.0);\r\n\t\r\n\t// pixel size\r\n\tfloat px_size = 0.0;\r\n\t\r\n\t// alignment for different aspect ratios\r\n\tif (aspect > 1.0)\r\n\t{\r\n\t\tp.x *= aspect;\r\n\t\tlogo_offset.x = (aspect>1.0+logo_s.y*2.0)?.5 : .25;\r\n\t\tpx_size = 1.0/res.y;\r\n\t} else {\r\n\t\tp.y /= aspect;\r\n\t\tlogo_offset.y = (aspect<1.0-logo_s.y*2.0)?.5 : .25;\r\n\t\tpx_size = 1.0/res.x;\r\n\t} \r\n\t\r\n\r\n\t\r\n\t// background color\r\n\tfragColor = bg_c;\r\n\t\r\n\t// square grid\r\n\tgrid(p, px_size, fragColor);\r\n\t\r\n\t// circle grid\r\n\tcircleGrid(p, px_size, fragColor);\r\n\t\r\n\t// big circles\r\n    circle(p, vec2(0), 0.5, circle_c, px_size, fragColor);\r\n    \r\n    // diagonal lines\r\n    diagonals(p, px_size, aspect, fragColor);\r\n    \r\n    // vertical center lines\r\n\tcenterV(p, px_size, fragColor);\r\n\t\r\n\t// horizontal center lines\r\n\tcenterH(p, px_size, fragColor);\r\n\t\r\n\t// rainbow circle\r\n    rainbowCircle(p, vec2(0), .333, vec4(1.0), px_size, fragColor);\r\n\r\n\t// border lines\r\n    //vec2 b_pos = vec2(vUV.x * aspect, vUV.y);\r\n    //b_pos = vUV.xy * res;\r\n    border(vUV.st, res, fragColor);\r\n    \r\n\r\n    // mw logo\r\n\tmwLogo(p, logo_offset, logo_s.y, aspect, px_size, fragColor);\r\n\tmwLogo(p, -logo_offset, logo_s.y, aspect, px_size, fragColor);\r\n\r\n\t\r\n\t//pxGrid(p, px_size, fragColor);\r\n}", "sourceMedias": {}}, {"parameters": [{"value": 1400, "hexMode": false, "controlAddress": "/width"}, {"value": 924, "hexMode": false, "controlAddress": "/height"}, {"value": "ShaderToy File", "controlAddress": "/shaderType"}, {"value": "C:/Users/ULTREIA/Desktop/grid.shader", "controlAddress": "/fragmentShader"}, {"value": "Mfs3D2", "controlAddress": "/shaderToyID"}, {"value": "Bd8jRr", "controlAddress": "/shaderToyKey"}, {"value": false, "controlAddress": "/keepOfflineCache"}, {"value": [1.0, 1.0, 1.0, 1.0], "controlAddress": "/backgroundColor"}], "niceName": "Test Pattern Jar Front", "hideInRemoteControl": true, "containers": {"mediaParameters": {}, "sourceMedias": {}}, "type": "Shader", "shaderCache": "// \u00cd\u00f1igo Qu\u00edlez\r\n// https://iquilezles.org/articles/distfunctions2d/\r\n#define     TAU 6.28318530717958647 // pi * 2\r\n#define     PI  3.14159265358979323 // pi\r\n\r\n// hsv to rgb\r\nvec3 hsv2rgb(vec3 c) {\r\n  vec3 rgb = clamp(abs(mod(c.x*6.+vec3(0.,4.,2.),6.)-3.)-1.,0.,1.);\r\n  rgb = rgb * rgb * (3. - 2. * rgb);\r\n  return c.z * mix(vec3(1.), rgb, c.y);\r\n}\r\n\r\n// sd polygon\r\nconst int N = 8;\r\nfloat sdPolygon( in vec2 p, in vec2[N] v )\r\n{\r\n    int num = v.length();\r\n    float d = dot(p-v[0],p-v[0]);\r\n    float s = 1.0;\r\n    for( int i=0, j=num-1; i<num; j=i, i++ )\r\n    {\r\n        // distance\r\n        vec2 e = v[j] - v[i];\r\n        vec2 w =    p - v[i];\r\n        vec2 b = w - e*clamp( dot(w,e)/dot(e,e), 0.0, 1.0 );\r\n        d = min( d, dot(b,b) );\r\n\r\n        // winding number from http://geomalgorithms.com/a03-_inclusion.html\r\n        bvec3 cond = bvec3( p.y>=v[i].y, \r\n                            p.y <v[j].y, \r\n                            e.x*w.y>e.y*w.x );\r\n        if( all(cond) || all(not(cond)) ) s=-s;  \r\n    }\r\n    \r\n    return s*sqrt(d);\r\n}\r\n\r\n// sd segment\r\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\r\n{\r\n    vec2 pa = p-a, ba = b-a;\r\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\r\n    return length( pa - ba*h );\r\n}\r\n\r\n// sd box\r\nfloat sdBox( vec2 p, vec2 b, vec2 o)\r\n{\r\n    p -= o;\r\n    vec2 d = abs(p)-b;\r\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\r\n}\r\n\r\n// sd circle\r\nfloat sdCircle( vec2 p, float r )\r\n{\r\n    return length(p) - r;\r\n}\r\n\r\nfloat ndot(vec2 a, vec2 b ) { return a.x*b.x - a.y*b.y; }\r\n\r\n// sd rhombus\r\nfloat sdRhombus( in vec2 p, in vec2 b ) \r\n{\r\n    p = abs(p);\r\n\r\n    float h = clamp( ndot(b-2.0*p,b)/dot(b,b), -1.0, 1.0 );\r\n    float d = length( p-0.5*b*vec2(1.0-h,1.0+h) );\r\n\r\n\treturn d * sign( p.x*b.y + p.y*b.x - b.x*b.y );\r\n}\r\n\r\n// sd distorted pill\r\nfloat sdDistortedPill(vec2 p, vec2 start, vec2 end, float radius, float power, float depth)\r\n{\r\n    p = -p;\r\n    vec2 dir = normalize(end - start);\r\n\r\n    vec2 localP = p - start;\r\n    float proj = dot(localP, dir);\r\n    float perpProj = dot(localP, vec2(-dir.y, dir.x));\r\n\r\n    float alongLine = clamp(proj, 0.0, length(end - start));\r\n    vec2 closestPoint = start + dir * alongLine;\r\n\r\n    float d = length(p - closestPoint) - radius;\r\n\r\n    float frequency = PI / length(end - start);\r\n    float sind = sin(frequency * alongLine);\r\n    sind = pow(sind, power);\r\n    sind *= depth*radius;\r\n    \r\n    return d + sind;\r\n}\r\n\r\n\r\n// stroke edge\r\nvoid stroke(float d, vec4 c, inout vec4 fragColor, float w)\r\n{\r\n    float m = 1.0-step(.5*w, abs(d));\r\n    fragColor = mix(fragColor, c, m*c.a);\r\n}\r\n\r\n// stroke edge with anti-aliasing\r\nvoid strokeAA(float d, vec4 c, inout vec4 fragColor, float w, float aa)\r\n{\r\n    float m = smoothstep(0.5 * (w + aa), 0.5 * (w - aa), abs(d));\r\n    fragColor = mix(fragColor, c, m*c.a);\r\n}\r\n\r\n// background color\r\n#define bg_c vec4(0.0, 0.0, 0.0, 1.0)\r\n\r\n// grid color\r\n#define grid_c vec4(.5, .5, .5, 1.0)\r\n\r\n// grid line width\r\n#define grid_w 2.0\r\n\r\n// grid vertical divisions\r\n// grid cross\r\n#define grid_s vec2(9.0, 0.0)                     \r\n\r\n// circlegrid color\r\n#define circlegrid_c vec4(0.5)\r\n\r\n// circlegrid line width\r\n// circlegrid size\r\n// circlegrid offset x\r\n// circle grid offset y\r\n#define circlegrid_s vec4(1.0, .25, 0.0, 0.0)\r\n\r\n// circle color\r\n#define circle_c vec4(1.0)\r\n\r\n// circle line width\r\n#define circle_w 2.0\r\n\r\n// TL to BR diagonal color\r\n#define diag1_c vec4(.5, 1.0, .75, 1.0)\r\n\r\n// BL to TR diagonal color\r\n#define diag2_c vec4(1.0, .5, .666, 1.0)\r\n\r\n// diagonal line width\r\n#define diag_w 2.0\r\n\r\n// horizontal centerline color\r\n#define centerh_c vec4(1.0, 1.0, .5, 1.0)\r\n\r\n// vertical centerline color\r\n#define centerv_c vec4(1.0, 1.0, .5, 1.0)\r\n\r\n// center line width\r\n#define center_w 2.0\r\n\r\n// rainbow line width\r\n// rainbow alpha\r\n// rainbow period\r\n// rainbow offset\r\n#define rainbow_s vec4(3.0, 1.0, 2.0, .17)\r\n\r\n// border color\r\n#define border_c vec4(.5, 1.0, .5, 1.0)\r\n\r\n// border line width\r\n#define border_w 2.0\r\n\r\n// logo color 1\r\n#define logo_c1 vec4(0.0, 0.0, 0.0, 1.0)\r\n\r\n// logo color 2\r\n#define logo_c2 vec4(1.0, 1.0, 1.0, 1.0)\r\n\r\n// logo color 3\r\n#define logo_c3 vec4(.5, 0.5, 0.5, 1.0)\r\n\r\n// logo type\r\n// logo size\r\n#define logo_s vec2(0.0, .1)\r\n\r\n// grid\r\nvoid grid(vec2 p, float px_size, inout vec4 fragColor)\r\n{\r\n    float gc = (1.0 - grid_s.y)*.5;\r\n    vec2 grid = p - round(p*grid_s.x)/grid_s.x;\r\n    grid *= grid_s.x;\r\n    float d = min(abs(grid.x), abs(grid.y));\r\n    vec2 cross = vec2(step(gc, abs(grid.x)), step(gc, abs(grid.y)));\r\n    d += max(cross.x, cross.y);\r\n    stroke(d, grid_c, fragColor, grid_s.x*grid_w*px_size);\r\n}\r\n\r\n// circle grid\r\nvoid circleGrid(vec2 p, float px_size, inout vec4 fragColor)\r\n{\r\n    p -= circlegrid_s.zw/grid_s.x;\r\n    vec2 cell = mod(p * vec2(grid_s.x), 1.0);\r\n    vec2 center = mod(vec2(.5), 1.0);\r\n    float radius = circlegrid_s.y;\r\n    vec2 dist = cell - center;\r\n    float d = length(dist) - radius;\r\n    strokeAA(d, circlegrid_c, fragColor, circlegrid_s.x*grid_s.x * px_size, length(fwidth(p*grid_s.x)));\r\n}\r\n\r\n// circle\r\nvoid circle(vec2 p, vec2 center, float radius, vec4 c, float px_size, inout vec4 fragColor)\r\n{\r\n    center = center + round(p);\r\n    \r\n    float d = length(p - center) - radius;\r\n    strokeAA(d, c, fragColor, circle_w * px_size, length(fwidth(p)));\r\n}\r\n\r\n// rainbow circle\r\nvoid rainbowCircle(vec2 p, vec2 center, float radius, vec4 c, float px_size, inout vec4 fragColor)\r\n{\r\n\tvec2 pq = vec2(atan(p.x, p.y) / TAU*rainbow_s.z + rainbow_s.w, length(p));\r\n\tfloat d = length(p - center) - radius;\r\n\tc = vec4(hsv2rgb(vec3(pq.x, 1., 1.)), 1.0);\r\n\tstrokeAA(d, c, fragColor, rainbow_s.x * px_size, length(fwidth(p)));\r\n}\r\n\r\n// horizontal center line\r\nvoid centerH(vec2 p, float px_size, inout vec4 fragColor)\r\n{\r\n    stroke(abs(p.x), centerh_c, fragColor, center_w*px_size);\r\n    p = mod(p, 1.0)-.5;\r\n    stroke(abs(p.x), centerh_c, fragColor, center_w*px_size);\r\n}\r\n\r\n// vertical center line\r\nvoid centerV(vec2 p, float px_size, inout vec4 fragColor)\r\n{\r\n    stroke(abs(p.y), centerv_c, fragColor, center_w*px_size);\r\n    p = mod(p, 1.0)-.5;\r\n    stroke(abs(p.y), centerh_c, fragColor, center_w*px_size);\r\n}\r\n\r\n// diagonal lines\r\nvoid diagonals(vec2 p, float px_size, float aspect, inout vec4 fragColor)\r\n{\r\n\tp += .5;\r\n\tp = mod(p, 1.0);\r\n\t//p = p - floor(p);\r\n\r\n\tfloat dist = abs(p.x - p.y);\r\n\tstrokeAA(dist, diag1_c, fragColor, diag_w*px_size, length(fwidth(p)));\r\n\t\r\n\tdist = abs(p.x + p.y)-1.0;\r\n\tstrokeAA(dist, diag2_c, fragColor, diag_w*px_size, length(fwidth(p)));\r\n\t//fragColor = vec4(vec3(dist), 1.0);\r\n}\r\n\r\n// render border\r\nvoid border(vec2 p, vec2 res, inout vec4 fragColor)\r\n{\r\n\tfloat d = min(min(p.x, 1.0-p.x)*res.x, min(p.y, 1.0-p.y)*res.y);\r\n\tfragColor = mix(fragColor, border_c, 1.0-step(border_w, d));\r\n}\r\n\r\n\r\n// mw logo\r\nvoid mwLogo(vec2 p, vec2 offset, float scale, float aspect, float px_size, inout vec4 fragColor)\r\n{\r\n\tp -= offset;\r\n\tp.y *= .6;\r\n\tp /= scale;\r\n\t\r\n\t\r\n\tfloat w = 20.0 * px_size;\r\n\t\r\n\tvec2 ra =vec2(0.5,0.5);\r\n\tfloat d1 = sdRhombus( vec2(p.x + .5, p.y), ra );\r\n\tfloat d2 = sdRhombus( vec2(p.x - .5, p.y), ra );\r\n\tfragColor = mix(fragColor, vec4(vec3(pow(min(d1+.95, d2+.95), 8.0)), 1.0)*logo_c3, (1.0-step(0.0, min(d1, d2)))*logo_c3.a);\r\n\tstrokeAA(min(d1, d2), logo_c2, fragColor, w, length(fwidth(p)));\r\n\tstrokeAA(min(d1+.1, d2+.1), logo_c2 * vec4(0.8), fragColor, w, length(fwidth(p)));\r\n\tstrokeAA(min(d1+.2, d2+.2), logo_c2 * vec4(0.6), fragColor, w, length(fwidth(p)));\r\n\tstrokeAA(min(d1+.3, d2+.3), logo_c2 * vec4(0.4), fragColor, w, length(fwidth(p)));\r\n\t\r\n\tfloat d3 = sdSegment(p, vec2(1.0, 0.0), vec2(-1.0, 0.0));\r\n\tstrokeAA(d3, logo_c2, fragColor, w, length(fwidth(p)));\r\n}\r\n\r\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\r\n{\r\n    // normalized pixel coordinates\r\n    vec2 vUV = fragCoord/iResolution.xy;\r\n    \r\n    \r\n    // resolution\r\n    vec2 res = iResolution.xy;\r\n    \r\n    // aspect ratio\r\n    float aspect = res.x / res.y;\r\n\t\r\n\t// -.5 to .5 coordinate space\r\n\tvec2 p = vUV.st-.5;\r\n\t\r\n\tvec2 logo_offset = vec2(0.0, 0.0);\r\n\t\r\n\t// pixel size\r\n\tfloat px_size = 0.0;\r\n\t\r\n\t// alignment for different aspect ratios\r\n\tif (aspect > 1.0)\r\n\t{\r\n\t\tp.x *= aspect;\r\n\t\tlogo_offset.x = (aspect>1.0+logo_s.y*2.0)?.5 : .25;\r\n\t\tpx_size = 1.0/res.y;\r\n\t} else {\r\n\t\tp.y /= aspect;\r\n\t\tlogo_offset.y = (aspect<1.0-logo_s.y*2.0)?.5 : .25;\r\n\t\tpx_size = 1.0/res.x;\r\n\t} \r\n\t\r\n\r\n\t\r\n\t// background color\r\n\tfragColor = bg_c;\r\n\t\r\n\t// square grid\r\n\tgrid(p, px_size, fragColor);\r\n\t\r\n\t// circle grid\r\n\tcircleGrid(p, px_size, fragColor);\r\n\t\r\n\t// big circles\r\n    circle(p, vec2(0), 0.5, circle_c, px_size, fragColor);\r\n    \r\n    // diagonal lines\r\n    diagonals(p, px_size, aspect, fragColor);\r\n    \r\n    // vertical center lines\r\n\tcenterV(p, px_size, fragColor);\r\n\t\r\n\t// horizontal center lines\r\n\tcenterH(p, px_size, fragColor);\r\n\t\r\n\t// rainbow circle\r\n    rainbowCircle(p, vec2(0), .333, vec4(1.0), px_size, fragColor);\r\n\r\n\t// border lines\r\n    //vec2 b_pos = vec2(vUV.x * aspect, vUV.y);\r\n    //b_pos = vUV.xy * res;\r\n    border(vUV.st, res, fragColor);\r\n    \r\n\r\n    // mw logo\r\n\tmwLogo(p, logo_offset, logo_s.y, aspect, px_size, fragColor);\r\n\tmwLogo(p, -logo_offset, logo_s.y, aspect, px_size, fragColor);\r\n\r\n\t\r\n\t//pxGrid(p, px_size, fragColor);\r\n}", "sourceMedias": {}}, {"parameters": [{"value": 580, "hexMode": false, "controlAddress": "/width"}, {"value": 820, "hexMode": false, "controlAddress": "/height"}, {"value": "ShaderToy File", "controlAddress": "/shaderType"}, {"value": "C:/Users/ULTREIA/Desktop/grid.shader", "controlAddress": "/fragmentShader"}, {"value": "Mfs3D2", "controlAddress": "/shaderToyID"}, {"value": "Bd8jRr", "controlAddress": "/shaderToyKey"}, {"value": false, "controlAddress": "/keepOfflineCache"}, {"value": [1.0, 1.0, 1.0, 1.0], "controlAddress": "/backgroundColor"}], "niceName": "Test Pattern Jar Back", "hideInRemoteControl": true, "containers": {"mediaParameters": {}, "sourceMedias": {}}, "type": "Shader", "shaderCache": "// \u00cd\u00f1igo Qu\u00edlez\r\n// https://iquilezles.org/articles/distfunctions2d/\r\n#define     TAU 6.28318530717958647 // pi * 2\r\n#define     PI  3.14159265358979323 // pi\r\n\r\n// hsv to rgb\r\nvec3 hsv2rgb(vec3 c) {\r\n  vec3 rgb = clamp(abs(mod(c.x*6.+vec3(0.,4.,2.),6.)-3.)-1.,0.,1.);\r\n  rgb = rgb * rgb * (3. - 2. * rgb);\r\n  return c.z * mix(vec3(1.), rgb, c.y);\r\n}\r\n\r\n// sd polygon\r\nconst int N = 8;\r\nfloat sdPolygon( in vec2 p, in vec2[N] v )\r\n{\r\n    int num = v.length();\r\n    float d = dot(p-v[0],p-v[0]);\r\n    float s = 1.0;\r\n    for( int i=0, j=num-1; i<num; j=i, i++ )\r\n    {\r\n        // distance\r\n        vec2 e = v[j] - v[i];\r\n        vec2 w =    p - v[i];\r\n        vec2 b = w - e*clamp( dot(w,e)/dot(e,e), 0.0, 1.0 );\r\n        d = min( d, dot(b,b) );\r\n\r\n        // winding number from http://geomalgorithms.com/a03-_inclusion.html\r\n        bvec3 cond = bvec3( p.y>=v[i].y, \r\n                            p.y <v[j].y, \r\n                            e.x*w.y>e.y*w.x );\r\n        if( all(cond) || all(not(cond)) ) s=-s;  \r\n    }\r\n    \r\n    return s*sqrt(d);\r\n}\r\n\r\n// sd segment\r\nfloat sdSegment( in vec2 p, in vec2 a, in vec2 b )\r\n{\r\n    vec2 pa = p-a, ba = b-a;\r\n    float h = clamp( dot(pa,ba)/dot(ba,ba), 0.0, 1.0 );\r\n    return length( pa - ba*h );\r\n}\r\n\r\n// sd box\r\nfloat sdBox( vec2 p, vec2 b, vec2 o)\r\n{\r\n    p -= o;\r\n    vec2 d = abs(p)-b;\r\n    return length(max(d,0.0)) + min(max(d.x,d.y),0.0);\r\n}\r\n\r\n// sd circle\r\nfloat sdCircle( vec2 p, float r )\r\n{\r\n    return length(p) - r;\r\n}\r\n\r\nfloat ndot(vec2 a, vec2 b ) { return a.x*b.x - a.y*b.y; }\r\n\r\n// sd rhombus\r\nfloat sdRhombus( in vec2 p, in vec2 b ) \r\n{\r\n    p = abs(p);\r\n\r\n    float h = clamp( ndot(b-2.0*p,b)/dot(b,b), -1.0, 1.0 );\r\n    float d = length( p-0.5*b*vec2(1.0-h,1.0+h) );\r\n\r\n\treturn d * sign( p.x*b.y + p.y*b.x - b.x*b.y );\r\n}\r\n\r\n// sd distorted pill\r\nfloat sdDistortedPill(vec2 p, vec2 start, vec2 end, float radius, float power, float depth)\r\n{\r\n    p = -p;\r\n    vec2 dir = normalize(end - start);\r\n\r\n    vec2 localP = p - start;\r\n    float proj = dot(localP, dir);\r\n    float perpProj = dot(localP, vec2(-dir.y, dir.x));\r\n\r\n    float alongLine = clamp(proj, 0.0, length(end - start));\r\n    vec2 closestPoint = start + dir * alongLine;\r\n\r\n    float d = length(p - closestPoint) - radius;\r\n\r\n    float frequency = PI / length(end - start);\r\n    float sind = sin(frequency * alongLine);\r\n    sind = pow(sind, power);\r\n    sind *= depth*radius;\r\n    \r\n    return d + sind;\r\n}\r\n\r\n\r\n// stroke edge\r\nvoid stroke(float d, vec4 c, inout vec4 fragColor, float w)\r\n{\r\n    float m = 1.0-step(.5*w, abs(d));\r\n    fragColor = mix(fragColor, c, m*c.a);\r\n}\r\n\r\n// stroke edge with anti-aliasing\r\nvoid strokeAA(float d, vec4 c, inout vec4 fragColor, float w, float aa)\r\n{\r\n    float m = smoothstep(0.5 * (w + aa), 0.5 * (w - aa), abs(d));\r\n    fragColor = mix(fragColor, c, m*c.a);\r\n}\r\n\r\n// background color\r\n#define bg_c vec4(0.0, 0.0, 0.0, 1.0)\r\n\r\n// grid color\r\n#define grid_c vec4(.5, .5, .5, 1.0)\r\n\r\n// grid line width\r\n#define grid_w 2.0\r\n\r\n// grid vertical divisions\r\n// grid cross\r\n#define grid_s vec2(9.0, 0.0)                     \r\n\r\n// circlegrid color\r\n#define circlegrid_c vec4(0.5)\r\n\r\n// circlegrid line width\r\n// circlegrid size\r\n// circlegrid offset x\r\n// circle grid offset y\r\n#define circlegrid_s vec4(1.0, .25, 0.0, 0.0)\r\n\r\n// circle color\r\n#define circle_c vec4(1.0)\r\n\r\n// circle line width\r\n#define circle_w 2.0\r\n\r\n// TL to BR diagonal color\r\n#define diag1_c vec4(.5, 1.0, .75, 1.0)\r\n\r\n// BL to TR diagonal color\r\n#define diag2_c vec4(1.0, .5, .666, 1.0)\r\n\r\n// diagonal line width\r\n#define diag_w 2.0\r\n\r\n// horizontal centerline color\r\n#define centerh_c vec4(1.0, 1.0, .5, 1.0)\r\n\r\n// vertical centerline color\r\n#define centerv_c vec4(1.0, 1.0, .5, 1.0)\r\n\r\n// center line width\r\n#define center_w 2.0\r\n\r\n// rainbow line width\r\n// rainbow alpha\r\n// rainbow period\r\n// rainbow offset\r\n#define rainbow_s vec4(3.0, 1.0, 2.0, .17)\r\n\r\n// border color\r\n#define border_c vec4(.5, 1.0, .5, 1.0)\r\n\r\n// border line width\r\n#define border_w 2.0\r\n\r\n// logo color 1\r\n#define logo_c1 vec4(0.0, 0.0, 0.0, 1.0)\r\n\r\n// logo color 2\r\n#define logo_c2 vec4(1.0, 1.0, 1.0, 1.0)\r\n\r\n// logo color 3\r\n#define logo_c3 vec4(.5, 0.5, 0.5, 1.0)\r\n\r\n// logo type\r\n// logo size\r\n#define logo_s vec2(0.0, .1)\r\n\r\n// grid\r\nvoid grid(vec2 p, float px_size, inout vec4 fragColor)\r\n{\r\n    float gc = (1.0 - grid_s.y)*.5;\r\n    vec2 grid = p - round(p*grid_s.x)/grid_s.x;\r\n    grid *= grid_s.x;\r\n    float d = min(abs(grid.x), abs(grid.y));\r\n    vec2 cross = vec2(step(gc, abs(grid.x)), step(gc, abs(grid.y)));\r\n    d += max(cross.x, cross.y);\r\n    stroke(d, grid_c, fragColor, grid_s.x*grid_w*px_size);\r\n}\r\n\r\n// circle grid\r\nvoid circleGrid(vec2 p, float px_size, inout vec4 fragColor)\r\n{\r\n    p -= circlegrid_s.zw/grid_s.x;\r\n    vec2 cell = mod(p * vec2(grid_s.x), 1.0);\r\n    vec2 center = mod(vec2(.5), 1.0);\r\n    float radius = circlegrid_s.y;\r\n    vec2 dist = cell - center;\r\n    float d = length(dist) - radius;\r\n    strokeAA(d, circlegrid_c, fragColor, circlegrid_s.x*grid_s.x * px_size, length(fwidth(p*grid_s.x)));\r\n}\r\n\r\n// circle\r\nvoid circle(vec2 p, vec2 center, float radius, vec4 c, float px_size, inout vec4 fragColor)\r\n{\r\n    center = center + round(p);\r\n    \r\n    float d = length(p - center) - radius;\r\n    strokeAA(d, c, fragColor, circle_w * px_size, length(fwidth(p)));\r\n}\r\n\r\n// rainbow circle\r\nvoid rainbowCircle(vec2 p, vec2 center, float radius, vec4 c, float px_size, inout vec4 fragColor)\r\n{\r\n\tvec2 pq = vec2(atan(p.x, p.y) / TAU*rainbow_s.z + rainbow_s.w, length(p));\r\n\tfloat d = length(p - center) - radius;\r\n\tc = vec4(hsv2rgb(vec3(pq.x, 1., 1.)), 1.0);\r\n\tstrokeAA(d, c, fragColor, rainbow_s.x * px_size, length(fwidth(p)));\r\n}\r\n\r\n// horizontal center line\r\nvoid centerH(vec2 p, float px_size, inout vec4 fragColor)\r\n{\r\n    stroke(abs(p.x), centerh_c, fragColor, center_w*px_size);\r\n    p = mod(p, 1.0)-.5;\r\n    stroke(abs(p.x), centerh_c, fragColor, center_w*px_size);\r\n}\r\n\r\n// vertical center line\r\nvoid centerV(vec2 p, float px_size, inout vec4 fragColor)\r\n{\r\n    stroke(abs(p.y), centerv_c, fragColor, center_w*px_size);\r\n    p = mod(p, 1.0)-.5;\r\n    stroke(abs(p.y), centerh_c, fragColor, center_w*px_size);\r\n}\r\n\r\n// diagonal lines\r\nvoid diagonals(vec2 p, float px_size, float aspect, inout vec4 fragColor)\r\n{\r\n\tp += .5;\r\n\tp = mod(p, 1.0);\r\n\t//p = p - floor(p);\r\n\r\n\tfloat dist = abs(p.x - p.y);\r\n\tstrokeAA(dist, diag1_c, fragColor, diag_w*px_size, length(fwidth(p)));\r\n\t\r\n\tdist = abs(p.x + p.y)-1.0;\r\n\tstrokeAA(dist, diag2_c, fragColor, diag_w*px_size, length(fwidth(p)));\r\n\t//fragColor = vec4(vec3(dist), 1.0);\r\n}\r\n\r\n// render border\r\nvoid border(vec2 p, vec2 res, inout vec4 fragColor)\r\n{\r\n\tfloat d = min(min(p.x, 1.0-p.x)*res.x, min(p.y, 1.0-p.y)*res.y);\r\n\tfragColor = mix(fragColor, border_c, 1.0-step(border_w, d));\r\n}\r\n\r\n\r\n// mw logo\r\nvoid mwLogo(vec2 p, vec2 offset, float scale, float aspect, float px_size, inout vec4 fragColor)\r\n{\r\n\tp -= offset;\r\n\tp.y *= .6;\r\n\tp /= scale;\r\n\t\r\n\t\r\n\tfloat w = 20.0 * px_size;\r\n\t\r\n\tvec2 ra =vec2(0.5,0.5);\r\n\tfloat d1 = sdRhombus( vec2(p.x + .5, p.y), ra );\r\n\tfloat d2 = sdRhombus( vec2(p.x - .5, p.y), ra );\r\n\tfragColor = mix(fragColor, vec4(vec3(pow(min(d1+.95, d2+.95), 8.0)), 1.0)*logo_c3, (1.0-step(0.0, min(d1, d2)))*logo_c3.a);\r\n\tstrokeAA(min(d1, d2), logo_c2, fragColor, w, length(fwidth(p)));\r\n\tstrokeAA(min(d1+.1, d2+.1), logo_c2 * vec4(0.8), fragColor, w, length(fwidth(p)));\r\n\tstrokeAA(min(d1+.2, d2+.2), logo_c2 * vec4(0.6), fragColor, w, length(fwidth(p)));\r\n\tstrokeAA(min(d1+.3, d2+.3), logo_c2 * vec4(0.4), fragColor, w, length(fwidth(p)));\r\n\t\r\n\tfloat d3 = sdSegment(p, vec2(1.0, 0.0), vec2(-1.0, 0.0));\r\n\tstrokeAA(d3, logo_c2, fragColor, w, length(fwidth(p)));\r\n}\r\n\r\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\r\n{\r\n    // normalized pixel coordinates\r\n    vec2 vUV = fragCoord/iResolution.xy;\r\n    \r\n    \r\n    // resolution\r\n    vec2 res = iResolution.xy;\r\n    \r\n    // aspect ratio\r\n    float aspect = res.x / res.y;\r\n\t\r\n\t// -.5 to .5 coordinate space\r\n\tvec2 p = vUV.st-.5;\r\n\t\r\n\tvec2 logo_offset = vec2(0.0, 0.0);\r\n\t\r\n\t// pixel size\r\n\tfloat px_size = 0.0;\r\n\t\r\n\t// alignment for different aspect ratios\r\n\tif (aspect > 1.0)\r\n\t{\r\n\t\tp.x *= aspect;\r\n\t\tlogo_offset.x = (aspect>1.0+logo_s.y*2.0)?.5 : .25;\r\n\t\tpx_size = 1.0/res.y;\r\n\t} else {\r\n\t\tp.y /= aspect;\r\n\t\tlogo_offset.y = (aspect<1.0-logo_s.y*2.0)?.5 : .25;\r\n\t\tpx_size = 1.0/res.x;\r\n\t} \r\n\t\r\n\r\n\t\r\n\t// background color\r\n\tfragColor = bg_c;\r\n\t\r\n\t// square grid\r\n\tgrid(p, px_size, fragColor);\r\n\t\r\n\t// circle grid\r\n\tcircleGrid(p, px_size, fragColor);\r\n\t\r\n\t// big circles\r\n    circle(p, vec2(0), 0.5, circle_c, px_size, fragColor);\r\n    \r\n    // diagonal lines\r\n    diagonals(p, px_size, aspect, fragColor);\r\n    \r\n    // vertical center lines\r\n\tcenterV(p, px_size, fragColor);\r\n\t\r\n\t// horizontal center lines\r\n\tcenterH(p, px_size, fragColor);\r\n\t\r\n\t// rainbow circle\r\n    rainbowCircle(p, vec2(0), .333, vec4(1.0), px_size, fragColor);\r\n\r\n\t// border lines\r\n    //vec2 b_pos = vec2(vUV.x * aspect, vUV.y);\r\n    //b_pos = vUV.xy * res;\r\n    border(vUV.st, res, fragColor);\r\n    \r\n\r\n    // mw logo\r\n\tmwLogo(p, logo_offset, logo_s.y, aspect, px_size, fragColor);\r\n\tmwLogo(p, -logo_offset, logo_s.y, aspect, px_size, fragColor);\r\n\r\n\t\r\n\t//pxGrid(p, px_size, fragColor);\r\n}", "sourceMedias": {}}, {"niceName": "Black", "hideInRemoteControl": true, "containers": {"mediaParameters": {"parameters": [{"value": [0.0, 0.0, 0.0, 1.0], "controlAddress": "/color"}]}}, "type": "Solid Color"}, {"parameters": [{"value": 2364, "hexMode": false, "controlAddress": "/width"}, {"value": 924, "hexMode": false, "controlAddress": "/height"}], "niceName": "Perf Jar", "containers": {"mediaParameters": {}, "sequence": {"parameters": [{"value": 1800.0, "controlAddress": "/totalTime"}, {"value": 338.068359375, "controlAddress": "/viewStartTime"}, {"value": 667.308349609375, "controlAddress": "/viewEndTime"}], "niceName": "Sequence", "type": "Sequence", "layers": {"hideInEditor": true, "items": [{"parameters": [{"value": false, "controlAddress": "/enabled"}, {"value": 59.0, "controlAddress": "/listSize"}, {"value": 59, "hexMode": false, "controlAddress": "/uiHeight"}], "niceName": "Jar Debug", "containers": {"positionning": {"parameters": [{"value": false, "controlAddress": "/enabled"}]}, "blocks": {"hideInEditor": true, "hideInRemoteControl": true, "items": [{"parameters": [{"value": 742.2799682617188, "controlAddress": "/length"}], "niceName": "Picture", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "picture": {"parameters": [{"value": "Image/Mire_Jar.png", "controlAddress": "/filePath"}], "niceName": "Picture", "containers": {"mediaParameters": {}}, "type": "Picture"}}, "type": "Picture"}], "viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Media"}, {"parameters": [{"value": 59.0, "controlAddress": "/listSize"}, {"value": 59, "hexMode": false, "controlAddress": "/uiHeight"}], "niceName": "Jar Spout", "containers": {"positionning": {"parameters": [{"value": false, "controlAddress": "/enabled"}, {"value": 2364, "hexMode": false, "controlAddress": "/width"}]}, "blocks": {"hideInEditor": true, "hideInRemoteControl": true, "items": [{"parameters": [{"value": 117.7799987792969, "controlAddress": "/startTime"}, {"value": "/sharedTexture", "controlAddress": "/media"}], "niceName": "Reference 2", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Reference"}], "viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Media"}, {"parameters": [{"value": 60.0, "controlAddress": "/listSize"}, {"value": "Addition", "controlAddress": "/blendFunction"}], "niceName": "Full Surface", "containers": {"positionning": {"parameters": [{"value": true, "controlAddress": "/enabled"}, {"value": 2364, "hexMode": false, "controlAddress": "/width"}]}, "blocks": {"hideInEditor": true, "hideInRemoteControl": true, "items": [{"parameters": [{"value": 268.1600036621094, "controlAddress": "/startTime"}, {"value": 19.90000152587891, "controlAddress": "/length"}, {"value": 1.500000238418579, "controlAddress": "/fadeIn", "enabled": true}, {"value": 1.200000166893005, "controlAddress": "/fadeOut", "enabled": true}], "niceName": "Frame Last Sequence", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "video": {"parameters": [{"value": "Videos/Frame Last Sequence_v3.mp4", "controlAddress": "/filePath"}], "niceName": "Video", "containers": {"mediaParameters": {}}, "type": "Video"}}, "type": "Video"}, {"parameters": [{"value": 344.0, "controlAddress": "/startTime"}, {"value": 71.66001129150391, "controlAddress": "/length"}, {"value": 6.099997997283936, "controlAddress": "/fadeIn", "enabled": true}, {"value": 10.0, "controlAddress": "/fadeOut", "enabled": true}], "niceName": "Bal", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "video": {"parameters": [{"value": "Videos/Bal/Bal_Jar_04r.mp4", "controlAddress": "/filePath"}], "niceName": "Video", "containers": {"mediaParameters": {}}, "type": "Video"}}, "type": "Video"}, {"parameters": [{"value": 458.0, "controlAddress": "/startTime"}, {"value": 62.02000427246094, "controlAddress": "/length"}, {"value": 4.770769596099854, "controlAddress": "/fadeIn", "enabled": true}, {"value": 4.899999618530273, "controlAddress": "/fadeOut", "enabled": true}], "niceName": "Paysage Particules", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "video": {"parameters": [{"value": "Videos/Paysages Particules/Paysage Jar.mp4", "controlAddress": "/filePath"}], "niceName": "Video", "containers": {"mediaParameters": {}}, "type": "Video"}}, "type": "Video"}], "viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Media"}, {"parameters": [{"value": 60.0, "controlAddress": "/listSize"}, {"value": [0.062745101749897, 0.2745098173618317, 0.02745098061859608, 1.0], "controlAddress": "/color"}, {"value": [0.0, 0.0, 0.0, 1.0], "controlAddress": "/backgroundColor"}, {"value": "Lighten", "controlAddress": "/blendFunction"}], "niceName": "Man Walking", "containers": {"positionning": {"parameters": [{"value": true, "controlAddress": "/enabled"}, {"value": 1052, "hexMode": false, "controlAddress": "/x"}, {"value": 411, "hexMode": false, "controlAddress": "/y"}, {"value": 127, "hexMode": false, "controlAddress": "/width"}, {"value": 91, "hexMode": false, "controlAddress": "/height"}]}, "blocks": {"hideInEditor": true, "hideInRemoteControl": true, "items": [{"parameters": [{"value": 156.6600036621094, "controlAddress": "/startTime"}, {"value": 10.20003223419189, "controlAddress": "/length"}, {"value": 2.0, "controlAddress": "/fadeIn", "enabled": true}, {"value": 0.520050048828125, "controlAddress": "/fadeOut", "enabled": false}], "niceName": "Picture", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Linear", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Linear", "controlAddress": "/easingType"}], "niceName": "Key 2", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "picture": {"parameters": [{"value": "D:/Projects/Ultreia/Traces/RuleMapoule/Image/frame still (4).png", "controlAddress": "/filePath"}], "niceName": "Picture", "containers": {"mediaParameters": {}}, "type": "Picture"}}, "type": "Picture"}, {"parameters": [{"value": 166.3399810791016, "controlAddress": "/startTime"}, {"value": 7.700004577636719, "controlAddress": "/length"}, {"value": 0.520050048828125, "controlAddress": "/fadeIn", "enabled": false}, {"value": 1.499999284744263, "controlAddress": "/fadeOut", "enabled": true}], "niceName": "Video", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Linear", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "video": {"parameters": [{"value": "Videos/Frames/Album de famille_02_V2.mp4", "controlAddress": "/filePath"}], "niceName": "Video", "containers": {"mediaParameters": {}}, "type": "Video"}}, "type": "Video"}, {"parameters": [{"value": 233.6199951171875, "controlAddress": "/startTime"}, {"value": 6.360000610351562, "controlAddress": "/length"}, {"value": 0.0, "controlAddress": "/fadeOut", "enabled": false}], "niceName": "Solid Color 1", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "solidColor": {"niceName": "Solid Color", "containers": {"mediaParameters": {"parameters": [{"value": [0.0, 0.0, 0.0, 1.0], "controlAddress": "/color"}]}}, "type": "Solid Color"}}, "type": "Solid Color"}, {"parameters": [{"value": 236.0999908447266, "controlAddress": "/startTime"}, {"value": 3.8800048828125, "controlAddress": "/length"}, {"value": "/media/perfJar/sequence/layers/manWalking/blocks/solidColor1", "controlAddress": "/clipIn"}, {"value": "/media/perfJar/sequence/layers/manWalking/blocks/picture1", "controlAddress": "/clipOut"}], "niceName": "Transition 1", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "shader": {"parameters": [{"value": 125, "hexMode": false, "controlAddress": "/width"}, {"value": 91, "hexMode": false, "controlAddress": "/height"}, {"value": "ShaderToy File", "controlAddress": "/shaderType"}, {"value": "shaders/transitions/waves.frag", "relative": true, "controlAddress": "/fragmentShader"}, {"value": "tsXBzS", "controlAddress": "/shaderToyID"}, {"value": "Bd8jRr", "controlAddress": "/shaderToyKey"}], "niceName": "Shader", "containers": {"mediaParameters": {}, "sourceMedias": {"parameters": [{"value": "/perfJar/sequence/layers/manWalking/blocks/solidColor1/solidColor", "controlAddress": "/mediaIn", "type": "Target", "niceName": "Media In", "customizable": false, "removable": false, "description": "Media In", "hideInEditor": false, "feedbackOnly": false}, {"value": "/perfJar/sequence/layers/manWalking/blocks/picture1/picture", "controlAddress": "/mediaOut", "type": "Target", "niceName": "Media Out", "customizable": false, "removable": false, "description": "Media Out", "hideInEditor": false, "feedbackOnly": false}]}}, "type": "Shader", "shaderCache": "uniform float progression;\r\n\r\n\r\nvec3 mod289(vec3 x) {\r\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\r\n}\r\n\r\nvec4 mod289(vec4 x) {\r\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\r\n}\r\n\r\nvec4 permute(vec4 x) {\r\n  return mod289(((x*34.0)+1.0)*x);\r\n}\r\n\r\nvec4 taylorInvSqrt(vec4 r){\r\n  return 1.79284291400159 - 0.85373472095314 * r;\r\n}\r\n\r\nfloat snoise(vec3 v) {\r\n\r\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\r\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\r\n\r\n  // First corner\r\n  vec3 i  = floor(v + dot(v, C.yyy) );\r\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\r\n\r\n  // Other corners\r\n  vec3 g = step(x0.yzx, x0.xyz);\r\n  vec3 l = 1.0 - g;\r\n  vec3 i1 = min( g.xyz, l.zxy );\r\n  vec3 i2 = max( g.xyz, l.zxy );\r\n\r\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\r\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\r\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\r\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\r\n  vec3 x1 = x0 - i1 + C.xxx;\r\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\r\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\r\n\r\n  // Permutations\r\n  i = mod289(i);\r\n  vec4 p = permute( permute( permute(\r\n      i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\r\n    + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\r\n    + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\r\n\r\n  // Gradients: 7x7 points over a square, mapped onto an octahedron.\r\n  // The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\r\n  float n_ = 0.142857142857; // 1.0/7.0\r\n  vec3  ns = n_ * D.wyz - D.xzx;\r\n\r\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\r\n\r\n  vec4 x_ = floor(j * ns.z);\r\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\r\n\r\n  vec4 x = x_ *ns.x + ns.yyyy;\r\n  vec4 y = y_ *ns.x + ns.yyyy;\r\n  vec4 h = 1.0 - abs(x) - abs(y);\r\n\r\n  vec4 b0 = vec4( x.xy, y.xy );\r\n  vec4 b1 = vec4( x.zw, y.zw );\r\n\r\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\r\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\r\n  vec4 s0 = floor(b0)*2.0 + 1.0;\r\n  vec4 s1 = floor(b1)*2.0 + 1.0;\r\n  vec4 sh = -step(h, vec4(0.0));\r\n\r\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\r\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\r\n\r\n  vec3 p0 = vec3(a0.xy,h.x);\r\n  vec3 p1 = vec3(a0.zw,h.y);\r\n  vec3 p2 = vec3(a1.xy,h.z);\r\n  vec3 p3 = vec3(a1.zw,h.w);\r\n\r\n  //Normalise gradients\r\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\r\n  p0 *= norm.x;\r\n  p1 *= norm.y;\r\n  p2 *= norm.z;\r\n  p3 *= norm.w;\r\n\r\n  // Mix final noise value\r\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\r\n  m = m * m;\r\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1), dot(p2,x2), dot(p3,x3) ) );\r\n\r\n}\r\n\r\n// via: https://petewerner.blogspot.jp/2015/02/intro-to-curl-noise.html\r\nvec3 curlNoise( vec3 p ){\r\n\r\n  const float e = 0.1;\r\n\r\n  float  n1 = snoise(vec3(p.x, p.y + e, p.z));\r\n  float  n2 = snoise(vec3(p.x, p.y - e, p.z));\r\n  float  n3 = snoise(vec3(p.x, p.y, p.z + e));\r\n  float  n4 = snoise(vec3(p.x, p.y, p.z - e));\r\n  float  n5 = snoise(vec3(p.x + e, p.y, p.z));\r\n  float  n6 = snoise(vec3(p.x - e, p.y, p.z));\r\n\r\n  float x = n2 - n1 - n4 + n3;\r\n  float y = n4 - n3 - n6 + n5;\r\n  float z = n6 - n5 - n2 + n1;\r\n\r\n\r\n  const float divisor = 1.0 / ( 2.0 * e );\r\n  return normalize( vec3( x , y , z ) * divisor );\r\n}\r\n\r\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\r\n{\r\n    // Normalized pixel coordinates (from 0 to 1)\r\n    vec2 uv = fragCoord/iResolution.xy;\r\n\tfloat f = progression;\r\n    vec3 curl = curlNoise(vec3(uv,1.) *5. + iTime) / 1.;\r\n    // curl = curl * curl;\r\n    \r\n    vec4 t0 = texture(iChannel0, vec2(uv.x,uv.y + f * (curl.x) ) );\r\n    vec4 t1 = texture(iChannel1, vec2(uv.x,uv.y + (1.-f) * (curl.x) ));\r\n    // Time varying pixel color\r\n\tuv.x += curl.x;\r\n    // Output to screen\r\n    fragColor = mix(t0,t1,f);\r\n    // Really interesting effect. colors don't overlap\r\n    // fragColor = vec4(vec3(curl.x,curl.y,curl.z),1.0);\r\n}", "sourceMedias": {"parameters": [{"value": "/perfJar/sequence/layers/manWalking/blocks/solidColor1/solidColor", "controlAddress": "/mediaIn", "type": "Target", "niceName": "Media In", "customizable": false, "removable": false, "description": "Media In", "hideInEditor": false, "feedbackOnly": false}, {"value": "/perfJar/sequence/layers/manWalking/blocks/picture1/picture", "controlAddress": "/mediaOut", "type": "Target", "niceName": "Media Out", "customizable": false, "removable": false, "description": "Media Out", "hideInEditor": false, "feedbackOnly": false}]}}}, "type": "Transition"}, {"parameters": [{"value": 236.0999908447266, "controlAddress": "/startTime"}, {"value": 33.86003112792969, "controlAddress": "/length"}, {"value": 0.0, "controlAddress": "/fadeIn", "enabled": false}, {"value": 0.0, "controlAddress": "/fadeOut", "enabled": false}], "niceName": "Picture 1", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Linear", "controlAddress": "/easingType"}], "niceName": "Key 2", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "picture": {"parameters": [{"value": "Image/vlcsnap-2024-05-21-18h46m54s572.png", "relative": true, "controlAddress": "/filePath"}], "niceName": "Picture", "containers": {"mediaParameters": {}}, "type": "Picture"}}, "type": "Picture"}, {"parameters": [{"value": 256.5400085449219, "controlAddress": "/startTime"}, {"value": 13.42001342773438, "controlAddress": "/length"}, {"value": "/media/perfJar/sequence/layers/manWalking/blocks/picture1", "controlAddress": "/clipIn"}, {"value": "/media/perfJar/sequence/layers/manWalking/blocks/solidColor", "controlAddress": "/clipOut"}], "niceName": "Transition", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "shader": {"parameters": [{"value": 125, "hexMode": false, "controlAddress": "/width"}, {"value": 91, "hexMode": false, "controlAddress": "/height"}, {"value": "ShaderToy File", "controlAddress": "/shaderType"}, {"value": "shaders/transitions/burn.frag", "relative": true, "controlAddress": "/fragmentShader"}, {"value": "tsXBzS", "controlAddress": "/shaderToyID"}, {"value": "Bd8jRr", "controlAddress": "/shaderToyKey"}], "niceName": "Shader", "containers": {"mediaParameters": {"parameters": [{"value": [1.0, 1.0, 1.0, 1.0], "controlAddress": "/burnColor", "type": "Color", "niceName": "burnColor", "customizable": true, "removable": true, "description": "", "hideInEditor": false, "feedbackOnly": false}]}, "sourceMedias": {"parameters": [{"value": "/perfJar/sequence/layers/manWalking/blocks/picture1/picture", "controlAddress": "/mediaIn", "type": "Target", "niceName": "Media In", "customizable": false, "removable": false, "description": "Media In", "hideInEditor": false, "feedbackOnly": false}, {"value": "/perfJar/sequence/layers/manWalking/blocks/solidColor/solidColor", "controlAddress": "/mediaOut", "type": "Target", "niceName": "Media Out", "customizable": false, "removable": false, "description": "Media Out", "hideInEditor": false, "feedbackOnly": false}]}}, "type": "Shader", "shaderCache": "uniform float progression;\r\nuniform vec4 burnColor = vec4(1.0,1.0,1.0,1.0);\r\n\r\nfloat Hash( vec2 p)\r\n{\r\n\tvec3 p2 = vec3(p.xy,1.0);\r\n    return fract(sin(dot(p2,vec3(37.1,61.7, 12.4)))*3758.5453123);\r\n}\r\n\r\nfloat noise(in vec2 p)\r\n{\r\n    vec2 i = floor(p);\r\n\tvec2 f = fract(p);\r\n\tf *= f * (3.0-2.0*f);\r\n\r\n    return mix(mix(Hash(i + vec2(0.,0.)), Hash(i + vec2(1.,0.)),f.x),\r\n\t\tmix(Hash(i + vec2(0.,1.)), Hash(i + vec2(1.,1.)),f.x),\r\n\t\tf.y);\r\n}\r\n\r\nfloat fbm(vec2 p) \r\n{\r\n\tfloat v = 0.0;\r\n\tv += noise(p*1.)*.5;\r\n\tv += noise(p*2.)*.25;\r\n\tv += noise(p*4.)*.125;\r\n\treturn v;\r\n}\r\n\r\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\r\n{\r\n\tvec2 uv = fragCoord.xy/iResolution.xy;\r\n\t\r\n\tvec4 src = texture(iChannel0, uv);\r\n\tvec4 tgt = texture(iChannel1, uv);\r\n\tvec4 col = src;\r\n\t\r\n\tuv.x -= 1.5;\r\n\t\r\n    float p = progression*3;\r\n\tif(p < 0.01)\r\n\t{\r\n\t\tfragColor = src;\r\n\t\treturn;\r\n\t}\r\n\t\r\n\tvec4 burn = vec4(burnColor.r, burnColor.g, burnColor.b,burnColor.a*tgt.a);\r\n\t// burn\r\n\tfloat d = uv.x+uv.y*0.5 + 0.5*fbm(uv*15.1) + p*1.3;\r\n\tif (d >0.35) col = clamp(col-(d-0.35)*10.,0.0,1.0);\r\n\tif (d >0.47) {\r\n\t\tif (d < 0.5 ) col += (d-0.4)*33.0*0.5*(0.0+noise(100.*uv+vec2(-p*2.0,0.)))*burn ;\r\n\t\telse col = tgt; }\r\n\t\r\n\tfragColor = col;\r\n}", "sourceMedias": {"parameters": [{"value": "/perfJar/sequence/layers/manWalking/blocks/picture1/picture", "controlAddress": "/mediaIn", "type": "Target", "niceName": "Media In", "customizable": false, "removable": false, "description": "Media In", "hideInEditor": false, "feedbackOnly": false}, {"value": "/perfJar/sequence/layers/manWalking/blocks/solidColor/solidColor", "controlAddress": "/mediaOut", "type": "Target", "niceName": "Media Out", "customizable": false, "removable": false, "description": "Media Out", "hideInEditor": false, "feedbackOnly": false}]}}}, "type": "Transition"}, {"parameters": [{"value": 256.5400085449219, "controlAddress": "/startTime"}, {"value": 14.85998725891113, "controlAddress": "/length"}, {"value": 13.42001342773438, "controlAddress": "/fadeIn", "enabled": false}], "niceName": "Solid Color", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "solidColor": {"niceName": "Solid Color", "containers": {"mediaParameters": {"parameters": [{"value": [0.0, 0.0, 0.0, 1.0], "controlAddress": "/color"}]}}, "type": "Solid Color"}}, "type": "Solid Color"}], "viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Media"}, {"parameters": [{"value": 60.0, "controlAddress": "/listSize"}, {"value": [0.2745098173618317, 0.0784313753247261, 0.2745098173618317, 1.0], "controlAddress": "/color"}, {"value": [0.0, 0.0, 0.0, 1.0], "controlAddress": "/backgroundColor"}, {"value": "Lighten", "controlAddress": "/blendFunction"}], "niceName": "Mariage", "containers": {"positionning": {"parameters": [{"value": true, "controlAddress": "/enabled"}, {"value": 805, "hexMode": false, "controlAddress": "/x"}, {"value": 450, "hexMode": false, "controlAddress": "/y"}, {"value": 142, "hexMode": false, "controlAddress": "/width"}, {"value": 198, "hexMode": false, "controlAddress": "/height"}]}, "blocks": {"hideInEditor": true, "hideInRemoteControl": true, "items": [{"parameters": [{"value": 156.7400054931641, "controlAddress": "/startTime"}, {"value": 39.94002151489258, "controlAddress": "/length"}, {"value": 2.0, "controlAddress": "/fadeIn", "enabled": true}, {"value": 0.9600677490234375, "controlAddress": "/fadeOut", "enabled": false}], "niceName": "Picture", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.2711198329925537, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.2711198329925537, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "picture": {"parameters": [{"value": "D:/Projects/Ultreia/Traces/RuleMapoule/Image/frame still (5).png", "controlAddress": "/filePath"}], "niceName": "Picture", "containers": {"mediaParameters": {}}, "type": "Picture"}}, "type": "Picture"}, {"parameters": [{"value": 195.7199554443359, "controlAddress": "/startTime"}, {"value": 23.92001342773438, "controlAddress": "/length"}, {"value": 0.9600677490234375, "controlAddress": "/fadeIn", "enabled": false}, {"value": 1.761429786682129, "controlAddress": "/fadeOut", "enabled": true}], "niceName": "Video", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.2868369221687317, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.2868369221687317, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "video": {"parameters": [{"value": "Videos/Frames/Mariage_01_v2.mp4", "controlAddress": "/filePath"}], "niceName": "Video", "containers": {"mediaParameters": {}}, "type": "Video"}}, "type": "Video"}, {"parameters": [{"value": 239.6800079345703, "controlAddress": "/startTime"}, {"value": 18.59999084472656, "controlAddress": "/length"}, {"value": 0.0, "controlAddress": "/fadeIn", "enabled": false}, {"value": 0.0, "controlAddress": "/fadeOut", "enabled": false}], "niceName": "Solid Color 1", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "solidColor": {"niceName": "Solid Color", "containers": {"mediaParameters": {"parameters": [{"value": [0.0, 0.0, 0.0, 1.0], "controlAddress": "/color"}]}}, "type": "Solid Color"}}, "type": "Solid Color"}, {"parameters": [{"value": 243.6799774169922, "controlAddress": "/startTime"}, {"value": 14.60002136230469, "controlAddress": "/length"}, {"value": "/media/perfJar/sequence/layers/mariage/blocks/solidColor1", "controlAddress": "/clipIn"}, {"value": "/media/perfJar/sequence/layers/mariage/blocks/picture1", "controlAddress": "/clipOut"}], "niceName": "Transition", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "shader": {"parameters": [{"value": 157, "hexMode": false, "controlAddress": "/width"}, {"value": 201, "hexMode": false, "controlAddress": "/height"}, {"value": "ShaderToy File", "controlAddress": "/shaderType"}, {"value": "D:/Projects/Ultreia/Traces/RuleMapoule/shaders/transitions/waves.frag", "controlAddress": "/fragmentShader"}, {"value": "tsXBzS", "controlAddress": "/shaderToyID"}, {"value": "Bd8jRr", "controlAddress": "/shaderToyKey"}], "niceName": "Shader", "containers": {"mediaParameters": {}, "sourceMedias": {"parameters": [{"value": "/perfJar/sequence/layers/mariage/blocks/solidColor1/solidColor", "controlAddress": "/mediaIn", "type": "Target", "niceName": "Media In", "customizable": false, "removable": false, "description": "Media In", "hideInEditor": false, "feedbackOnly": false}, {"value": "/perfJar/sequence/layers/mariage/blocks/picture1/picture", "controlAddress": "/mediaOut", "type": "Target", "niceName": "Media Out", "customizable": false, "removable": false, "description": "Media Out", "hideInEditor": false, "feedbackOnly": false}]}}, "type": "Shader", "shaderCache": "uniform float progression;\r\n\r\n\r\nvec3 mod289(vec3 x) {\r\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\r\n}\r\n\r\nvec4 mod289(vec4 x) {\r\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\r\n}\r\n\r\nvec4 permute(vec4 x) {\r\n  return mod289(((x*34.0)+1.0)*x);\r\n}\r\n\r\nvec4 taylorInvSqrt(vec4 r){\r\n  return 1.79284291400159 - 0.85373472095314 * r;\r\n}\r\n\r\nfloat snoise(vec3 v) {\r\n\r\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\r\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\r\n\r\n  // First corner\r\n  vec3 i  = floor(v + dot(v, C.yyy) );\r\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\r\n\r\n  // Other corners\r\n  vec3 g = step(x0.yzx, x0.xyz);\r\n  vec3 l = 1.0 - g;\r\n  vec3 i1 = min( g.xyz, l.zxy );\r\n  vec3 i2 = max( g.xyz, l.zxy );\r\n\r\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\r\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\r\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\r\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\r\n  vec3 x1 = x0 - i1 + C.xxx;\r\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\r\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\r\n\r\n  // Permutations\r\n  i = mod289(i);\r\n  vec4 p = permute( permute( permute(\r\n      i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\r\n    + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\r\n    + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\r\n\r\n  // Gradients: 7x7 points over a square, mapped onto an octahedron.\r\n  // The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\r\n  float n_ = 0.142857142857; // 1.0/7.0\r\n  vec3  ns = n_ * D.wyz - D.xzx;\r\n\r\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\r\n\r\n  vec4 x_ = floor(j * ns.z);\r\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\r\n\r\n  vec4 x = x_ *ns.x + ns.yyyy;\r\n  vec4 y = y_ *ns.x + ns.yyyy;\r\n  vec4 h = 1.0 - abs(x) - abs(y);\r\n\r\n  vec4 b0 = vec4( x.xy, y.xy );\r\n  vec4 b1 = vec4( x.zw, y.zw );\r\n\r\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\r\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\r\n  vec4 s0 = floor(b0)*2.0 + 1.0;\r\n  vec4 s1 = floor(b1)*2.0 + 1.0;\r\n  vec4 sh = -step(h, vec4(0.0));\r\n\r\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\r\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\r\n\r\n  vec3 p0 = vec3(a0.xy,h.x);\r\n  vec3 p1 = vec3(a0.zw,h.y);\r\n  vec3 p2 = vec3(a1.xy,h.z);\r\n  vec3 p3 = vec3(a1.zw,h.w);\r\n\r\n  //Normalise gradients\r\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\r\n  p0 *= norm.x;\r\n  p1 *= norm.y;\r\n  p2 *= norm.z;\r\n  p3 *= norm.w;\r\n\r\n  // Mix final noise value\r\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\r\n  m = m * m;\r\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1), dot(p2,x2), dot(p3,x3) ) );\r\n\r\n}\r\n\r\n// via: https://petewerner.blogspot.jp/2015/02/intro-to-curl-noise.html\r\nvec3 curlNoise( vec3 p ){\r\n\r\n  const float e = 0.1;\r\n\r\n  float  n1 = snoise(vec3(p.x, p.y + e, p.z));\r\n  float  n2 = snoise(vec3(p.x, p.y - e, p.z));\r\n  float  n3 = snoise(vec3(p.x, p.y, p.z + e));\r\n  float  n4 = snoise(vec3(p.x, p.y, p.z - e));\r\n  float  n5 = snoise(vec3(p.x + e, p.y, p.z));\r\n  float  n6 = snoise(vec3(p.x - e, p.y, p.z));\r\n\r\n  float x = n2 - n1 - n4 + n3;\r\n  float y = n4 - n3 - n6 + n5;\r\n  float z = n6 - n5 - n2 + n1;\r\n\r\n\r\n  const float divisor = 1.0 / ( 2.0 * e );\r\n  return normalize( vec3( x , y , z ) * divisor );\r\n}\r\n\r\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\r\n{\r\n    // Normalized pixel coordinates (from 0 to 1)\r\n    vec2 uv = fragCoord/iResolution.xy;\r\n\tfloat f = progression;\r\n    vec3 curl = curlNoise(vec3(uv,1.) *5. + iTime) / 1.;\r\n    // curl = curl * curl;\r\n    \r\n    vec4 t0 = texture(iChannel0, vec2(uv.x,uv.y + f * (curl.x) ) );\r\n    vec4 t1 = texture(iChannel1, vec2(uv.x,uv.y + (1.-f) * (curl.x) ));\r\n    // Time varying pixel color\r\n\tuv.x += curl.x;\r\n    // Output to screen\r\n    fragColor = mix(t0,t1,f);\r\n    // Really interesting effect. colors don't overlap\r\n    // fragColor = vec4(vec3(curl.x,curl.y,curl.z),1.0);\r\n}", "sourceMedias": {"parameters": [{"value": "/perfJar/sequence/layers/mariage/blocks/solidColor1/solidColor", "controlAddress": "/mediaIn", "type": "Target", "niceName": "Media In", "customizable": false, "removable": false, "description": "Media In", "hideInEditor": false, "feedbackOnly": false}, {"value": "/perfJar/sequence/layers/mariage/blocks/picture1/picture", "controlAddress": "/mediaOut", "type": "Target", "niceName": "Media Out", "customizable": false, "removable": false, "description": "Media Out", "hideInEditor": false, "feedbackOnly": false}]}}}, "type": "Transition"}, {"parameters": [{"value": 243.6799774169922, "controlAddress": "/startTime"}, {"value": 22.98003387451172, "controlAddress": "/length"}, {"value": 0.0, "controlAddress": "/fadeIn", "enabled": true}, {"value": 0.0, "controlAddress": "/fadeOut", "enabled": true}], "niceName": "Picture 1", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Linear", "controlAddress": "/easingType"}], "niceName": "Key 2", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "picture": {"parameters": [{"value": "Image/vlcsnap-2024-05-21-18h37m02s973.png", "controlAddress": "/filePath"}], "niceName": "Picture", "containers": {"mediaParameters": {}}, "type": "Picture"}}, "type": "Picture"}, {"parameters": [{"value": 259.3999938964844, "controlAddress": "/startTime"}, {"value": 7.260009765625, "controlAddress": "/length"}, {"value": "/media/perfJar/sequence/layers/mariage/blocks/picture1", "controlAddress": "/clipIn"}, {"value": "/media/perfJar/sequence/layers/mariage/blocks/solidColor", "controlAddress": "/clipOut"}], "niceName": "Transition 1", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "shader": {"parameters": [{"value": 157, "hexMode": false, "controlAddress": "/width"}, {"value": 201, "hexMode": false, "controlAddress": "/height"}, {"value": "ShaderToy File", "controlAddress": "/shaderType"}, {"value": "D:/Projects/Ultreia/Traces/RuleMapoule/shaders/transitions/burn.frag", "controlAddress": "/fragmentShader"}, {"value": "tsXBzS", "controlAddress": "/shaderToyID"}, {"value": "Bd8jRr", "controlAddress": "/shaderToyKey"}], "niceName": "Shader", "containers": {"mediaParameters": {}, "sourceMedias": {"parameters": [{"value": "/perfJar/sequence/layers/mariage/blocks/picture1/picture", "controlAddress": "/mediaIn", "type": "Target", "niceName": "Media In", "customizable": false, "removable": false, "description": "Media In", "hideInEditor": false, "feedbackOnly": false}, {"value": "/perfJar/sequence/layers/mariage/blocks/solidColor/solidColor", "controlAddress": "/mediaOut", "type": "Target", "niceName": "Media Out", "customizable": false, "removable": false, "description": "Media Out", "hideInEditor": false, "feedbackOnly": false}]}}, "type": "Shader", "shaderCache": "uniform float progression;\r\nuniform vec4 burnColor = vec4(1.0,1.0,1.0,1.0);\r\n\r\nfloat Hash( vec2 p)\r\n{\r\n\tvec3 p2 = vec3(p.xy,1.0);\r\n    return fract(sin(dot(p2,vec3(37.1,61.7, 12.4)))*3758.5453123);\r\n}\r\n\r\nfloat noise(in vec2 p)\r\n{\r\n    vec2 i = floor(p);\r\n\tvec2 f = fract(p);\r\n\tf *= f * (3.0-2.0*f);\r\n\r\n    return mix(mix(Hash(i + vec2(0.,0.)), Hash(i + vec2(1.,0.)),f.x),\r\n\t\tmix(Hash(i + vec2(0.,1.)), Hash(i + vec2(1.,1.)),f.x),\r\n\t\tf.y);\r\n}\r\n\r\nfloat fbm(vec2 p) \r\n{\r\n\tfloat v = 0.0;\r\n\tv += noise(p*1.)*.5;\r\n\tv += noise(p*2.)*.25;\r\n\tv += noise(p*4.)*.125;\r\n\treturn v;\r\n}\r\n\r\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\r\n{\r\n\tvec2 uv = fragCoord.xy/iResolution.xy;\r\n\t\r\n\tvec4 src = texture(iChannel0, uv);\r\n\tvec4 tgt = texture(iChannel1, uv);\r\n\tvec4 col = src;\r\n\t\r\n\tuv.x -= 1.5;\r\n\t\r\n    float p = progression*3;\r\n\tif(p < 0.01)\r\n\t{\r\n\t\tfragColor = src;\r\n\t\treturn;\r\n\t}\r\n\t\r\n\tvec4 burn = vec4(burnColor.r, burnColor.g, burnColor.b,burnColor.a*tgt.a);\r\n\t// burn\r\n\tfloat d = uv.x+uv.y*0.5 + 0.5*fbm(uv*15.1) + p*1.3;\r\n\tif (d >0.35) col = clamp(col-(d-0.35)*10.,0.0,1.0);\r\n\tif (d >0.47) {\r\n\t\tif (d < 0.5 ) col += (d-0.4)*33.0*0.5*(0.0+noise(100.*uv+vec2(-p*2.0,0.)))*burn ;\r\n\t\telse col = tgt; }\r\n\t\r\n\tfragColor = col;\r\n}", "sourceMedias": {"parameters": [{"value": "/perfJar/sequence/layers/mariage/blocks/picture1/picture", "controlAddress": "/mediaIn", "type": "Target", "niceName": "Media In", "customizable": false, "removable": false, "description": "Media In", "hideInEditor": false, "feedbackOnly": false}, {"value": "/perfJar/sequence/layers/mariage/blocks/solidColor/solidColor", "controlAddress": "/mediaOut", "type": "Target", "niceName": "Media Out", "customizable": false, "removable": false, "description": "Media Out", "hideInEditor": false, "feedbackOnly": false}]}}}, "type": "Transition"}, {"parameters": [{"value": 259.3999938964844, "controlAddress": "/startTime"}, {"value": 11.73999977111816, "controlAddress": "/length"}, {"value": 0.0, "controlAddress": "/fadeIn", "enabled": false}], "niceName": "Solid Color", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "solidColor": {"niceName": "Solid Color", "containers": {"mediaParameters": {"parameters": [{"value": [0.0, 0.0, 0.0, 1.0], "controlAddress": "/color"}]}}, "type": "Solid Color"}}, "type": "Solid Color"}], "viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Media"}, {"parameters": [{"value": 60.0, "controlAddress": "/listSize"}, {"value": [0.5058823823928833, 0.1450980454683304, 0.5058823823928833, 1.0], "controlAddress": "/color"}, {"value": [0.0, 0.0, 0.0, 1.0], "controlAddress": "/backgroundColor"}, {"value": "Lighten", "controlAddress": "/blendFunction"}], "niceName": "Mariage 2", "containers": {"positionning": {"parameters": [{"value": true, "controlAddress": "/enabled"}, {"value": 517, "hexMode": false, "controlAddress": "/x"}, {"value": 415, "hexMode": false, "controlAddress": "/y"}, {"value": 145, "hexMode": false, "controlAddress": "/width"}, {"value": 116, "hexMode": false, "controlAddress": "/height"}]}, "blocks": {"hideInEditor": true, "hideInRemoteControl": true, "items": [{"parameters": [{"value": 156.5800018310547, "controlAddress": "/startTime"}, {"value": 62.79996109008789, "controlAddress": "/length"}, {"value": 2.0, "controlAddress": "/fadeIn", "enabled": true}, {"value": 0.9999847412109375, "controlAddress": "/fadeOut", "enabled": false}], "niceName": "Picture", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "picture": {"parameters": [{"value": "D:/Projects/Ultreia/Traces/RuleMapoule/Image/frame still (2).png", "controlAddress": "/filePath"}], "niceName": "Picture", "containers": {"mediaParameters": {}}, "type": "Picture"}}, "type": "Picture"}, {"parameters": [{"value": 218.3799743652344, "controlAddress": "/startTime"}, {"value": 15.59999656677246, "controlAddress": "/length"}, {"value": 0.9999847412109375, "controlAddress": "/fadeIn", "enabled": false}, {"value": 2.951350688934326, "controlAddress": "/fadeOut", "enabled": true}], "niceName": "Video", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "video": {"parameters": [{"value": "Videos/Frames/Mariage_02_V2.mp4", "controlAddress": "/filePath"}], "niceName": "Video", "containers": {"mediaParameters": {}}, "type": "Video"}}, "type": "Video"}, {"parameters": [{"value": 243.6799926757812, "controlAddress": "/startTime"}, {"value": 14.42000102996826, "controlAddress": "/length"}, {"value": 0.0, "controlAddress": "/fadeOut", "enabled": false}], "niceName": "Solid Color 1", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "solidColor": {"niceName": "Solid Color", "containers": {"mediaParameters": {"parameters": [{"value": [0.0, 0.0, 0.0, 1.0], "controlAddress": "/color"}]}}, "type": "Solid Color"}}, "type": "Solid Color"}, {"parameters": [{"value": 247.2000122070312, "controlAddress": "/startTime"}, {"value": 10.89999389648438, "controlAddress": "/length"}, {"value": "/media/perfJar/sequence/layers/mariage2/blocks/solidColor1", "controlAddress": "/clipIn"}, {"value": "/media/perfJar/sequence/layers/mariage2/blocks/picture1", "controlAddress": "/clipOut"}], "niceName": "Transition", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "shader": {"parameters": [{"value": 146, "hexMode": false, "controlAddress": "/width"}, {"value": 116, "hexMode": false, "controlAddress": "/height"}, {"value": "ShaderToy File", "controlAddress": "/shaderType"}, {"value": "D:/Projects/Ultreia/Traces/RuleMapoule/shaders/transitions/waves.frag", "controlAddress": "/fragmentShader"}, {"value": "tsXBzS", "controlAddress": "/shaderToyID"}, {"value": "Bd8jRr", "controlAddress": "/shaderToyKey"}], "niceName": "Shader", "containers": {"mediaParameters": {}, "sourceMedias": {"parameters": [{"value": "/perfJar/sequence/layers/mariage2/blocks/solidColor1/solidColor", "controlAddress": "/mediaIn", "type": "Target", "niceName": "Media In", "customizable": false, "removable": false, "description": "Media In", "hideInEditor": false, "feedbackOnly": false}, {"value": "/perfJar/sequence/layers/mariage2/blocks/picture1/picture", "controlAddress": "/mediaOut", "type": "Target", "niceName": "Media Out", "customizable": false, "removable": false, "description": "Media Out", "hideInEditor": false, "feedbackOnly": false}]}}, "type": "Shader", "shaderCache": "uniform float progression;\r\n\r\n\r\nvec3 mod289(vec3 x) {\r\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\r\n}\r\n\r\nvec4 mod289(vec4 x) {\r\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\r\n}\r\n\r\nvec4 permute(vec4 x) {\r\n  return mod289(((x*34.0)+1.0)*x);\r\n}\r\n\r\nvec4 taylorInvSqrt(vec4 r){\r\n  return 1.79284291400159 - 0.85373472095314 * r;\r\n}\r\n\r\nfloat snoise(vec3 v) {\r\n\r\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\r\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\r\n\r\n  // First corner\r\n  vec3 i  = floor(v + dot(v, C.yyy) );\r\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\r\n\r\n  // Other corners\r\n  vec3 g = step(x0.yzx, x0.xyz);\r\n  vec3 l = 1.0 - g;\r\n  vec3 i1 = min( g.xyz, l.zxy );\r\n  vec3 i2 = max( g.xyz, l.zxy );\r\n\r\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\r\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\r\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\r\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\r\n  vec3 x1 = x0 - i1 + C.xxx;\r\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\r\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\r\n\r\n  // Permutations\r\n  i = mod289(i);\r\n  vec4 p = permute( permute( permute(\r\n      i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\r\n    + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\r\n    + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\r\n\r\n  // Gradients: 7x7 points over a square, mapped onto an octahedron.\r\n  // The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\r\n  float n_ = 0.142857142857; // 1.0/7.0\r\n  vec3  ns = n_ * D.wyz - D.xzx;\r\n\r\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\r\n\r\n  vec4 x_ = floor(j * ns.z);\r\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\r\n\r\n  vec4 x = x_ *ns.x + ns.yyyy;\r\n  vec4 y = y_ *ns.x + ns.yyyy;\r\n  vec4 h = 1.0 - abs(x) - abs(y);\r\n\r\n  vec4 b0 = vec4( x.xy, y.xy );\r\n  vec4 b1 = vec4( x.zw, y.zw );\r\n\r\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\r\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\r\n  vec4 s0 = floor(b0)*2.0 + 1.0;\r\n  vec4 s1 = floor(b1)*2.0 + 1.0;\r\n  vec4 sh = -step(h, vec4(0.0));\r\n\r\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\r\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\r\n\r\n  vec3 p0 = vec3(a0.xy,h.x);\r\n  vec3 p1 = vec3(a0.zw,h.y);\r\n  vec3 p2 = vec3(a1.xy,h.z);\r\n  vec3 p3 = vec3(a1.zw,h.w);\r\n\r\n  //Normalise gradients\r\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\r\n  p0 *= norm.x;\r\n  p1 *= norm.y;\r\n  p2 *= norm.z;\r\n  p3 *= norm.w;\r\n\r\n  // Mix final noise value\r\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\r\n  m = m * m;\r\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1), dot(p2,x2), dot(p3,x3) ) );\r\n\r\n}\r\n\r\n// via: https://petewerner.blogspot.jp/2015/02/intro-to-curl-noise.html\r\nvec3 curlNoise( vec3 p ){\r\n\r\n  const float e = 0.1;\r\n\r\n  float  n1 = snoise(vec3(p.x, p.y + e, p.z));\r\n  float  n2 = snoise(vec3(p.x, p.y - e, p.z));\r\n  float  n3 = snoise(vec3(p.x, p.y, p.z + e));\r\n  float  n4 = snoise(vec3(p.x, p.y, p.z - e));\r\n  float  n5 = snoise(vec3(p.x + e, p.y, p.z));\r\n  float  n6 = snoise(vec3(p.x - e, p.y, p.z));\r\n\r\n  float x = n2 - n1 - n4 + n3;\r\n  float y = n4 - n3 - n6 + n5;\r\n  float z = n6 - n5 - n2 + n1;\r\n\r\n\r\n  const float divisor = 1.0 / ( 2.0 * e );\r\n  return normalize( vec3( x , y , z ) * divisor );\r\n}\r\n\r\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\r\n{\r\n    // Normalized pixel coordinates (from 0 to 1)\r\n    vec2 uv = fragCoord/iResolution.xy;\r\n\tfloat f = progression;\r\n    vec3 curl = curlNoise(vec3(uv,1.) *5. + iTime) / 1.;\r\n    // curl = curl * curl;\r\n    \r\n    vec4 t0 = texture(iChannel0, vec2(uv.x,uv.y + f * (curl.x) ) );\r\n    vec4 t1 = texture(iChannel1, vec2(uv.x,uv.y + (1.-f) * (curl.x) ));\r\n    // Time varying pixel color\r\n\tuv.x += curl.x;\r\n    // Output to screen\r\n    fragColor = mix(t0,t1,f);\r\n    // Really interesting effect. colors don't overlap\r\n    // fragColor = vec4(vec3(curl.x,curl.y,curl.z),1.0);\r\n}", "sourceMedias": {"parameters": [{"value": "/perfJar/sequence/layers/mariage2/blocks/solidColor1/solidColor", "controlAddress": "/mediaIn", "type": "Target", "niceName": "Media In", "customizable": false, "removable": false, "description": "Media In", "hideInEditor": false, "feedbackOnly": false}, {"value": "/perfJar/sequence/layers/mariage2/blocks/picture1/picture", "controlAddress": "/mediaOut", "type": "Target", "niceName": "Media Out", "customizable": false, "removable": false, "description": "Media Out", "hideInEditor": false, "feedbackOnly": false}]}}}, "type": "Transition"}, {"parameters": [{"value": 247.2000122070312, "controlAddress": "/startTime"}, {"value": 22.98003387451172, "controlAddress": "/length"}, {"value": 0.0, "controlAddress": "/fadeIn", "enabled": true}, {"value": 0.0, "controlAddress": "/fadeOut", "enabled": true}], "niceName": "Picture 1", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Linear", "controlAddress": "/easingType"}], "niceName": "Key 2", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "picture": {"parameters": [{"value": "Image/vlcsnap-2024-05-21-18h24m47s575.png", "controlAddress": "/filePath"}], "niceName": "Picture", "containers": {"mediaParameters": {}}, "type": "Picture"}}, "type": "Picture"}, {"parameters": [{"value": 261.2799987792969, "controlAddress": "/startTime"}, {"value": 8.900054931640625, "controlAddress": "/length"}, {"value": "/media/perfJar/sequence/layers/mariage2/blocks/picture1", "controlAddress": "/clipIn"}, {"value": "/media/perfJar/sequence/layers/mariage2/blocks/solidColor", "controlAddress": "/clipOut"}], "niceName": "Transition 1", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "shader": {"parameters": [{"value": 146, "hexMode": false, "controlAddress": "/width"}, {"value": 116, "hexMode": false, "controlAddress": "/height"}, {"value": "ShaderToy File", "controlAddress": "/shaderType"}, {"value": "D:/Projects/Ultreia/Traces/RuleMapoule/shaders/transitions/burn.frag", "controlAddress": "/fragmentShader"}, {"value": "tsXBzS", "controlAddress": "/shaderToyID"}, {"value": "Bd8jRr", "controlAddress": "/shaderToyKey"}], "niceName": "Shader", "containers": {"mediaParameters": {}, "sourceMedias": {"parameters": [{"value": "/perfJar/sequence/layers/mariage2/blocks/picture1/picture", "controlAddress": "/mediaIn", "type": "Target", "niceName": "Media In", "customizable": false, "removable": false, "description": "Media In", "hideInEditor": false, "feedbackOnly": false}, {"value": "/perfJar/sequence/layers/mariage2/blocks/solidColor/solidColor", "controlAddress": "/mediaOut", "type": "Target", "niceName": "Media Out", "customizable": false, "removable": false, "description": "Media Out", "hideInEditor": false, "feedbackOnly": false}]}}, "type": "Shader", "shaderCache": "uniform float progression;\r\nuniform vec4 burnColor = vec4(1.0,1.0,1.0,1.0);\r\n\r\nfloat Hash( vec2 p)\r\n{\r\n\tvec3 p2 = vec3(p.xy,1.0);\r\n    return fract(sin(dot(p2,vec3(37.1,61.7, 12.4)))*3758.5453123);\r\n}\r\n\r\nfloat noise(in vec2 p)\r\n{\r\n    vec2 i = floor(p);\r\n\tvec2 f = fract(p);\r\n\tf *= f * (3.0-2.0*f);\r\n\r\n    return mix(mix(Hash(i + vec2(0.,0.)), Hash(i + vec2(1.,0.)),f.x),\r\n\t\tmix(Hash(i + vec2(0.,1.)), Hash(i + vec2(1.,1.)),f.x),\r\n\t\tf.y);\r\n}\r\n\r\nfloat fbm(vec2 p) \r\n{\r\n\tfloat v = 0.0;\r\n\tv += noise(p*1.)*.5;\r\n\tv += noise(p*2.)*.25;\r\n\tv += noise(p*4.)*.125;\r\n\treturn v;\r\n}\r\n\r\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\r\n{\r\n\tvec2 uv = fragCoord.xy/iResolution.xy;\r\n\t\r\n\tvec4 src = texture(iChannel0, uv);\r\n\tvec4 tgt = texture(iChannel1, uv);\r\n\tvec4 col = src;\r\n\t\r\n\tuv.x -= 1.5;\r\n\t\r\n    float p = progression*3;\r\n\tif(p < 0.01)\r\n\t{\r\n\t\tfragColor = src;\r\n\t\treturn;\r\n\t}\r\n\t\r\n\tvec4 burn = vec4(burnColor.r, burnColor.g, burnColor.b,burnColor.a*tgt.a);\r\n\t// burn\r\n\tfloat d = uv.x+uv.y*0.5 + 0.5*fbm(uv*15.1) + p*1.3;\r\n\tif (d >0.35) col = clamp(col-(d-0.35)*10.,0.0,1.0);\r\n\tif (d >0.47) {\r\n\t\tif (d < 0.5 ) col += (d-0.4)*33.0*0.5*(0.0+noise(100.*uv+vec2(-p*2.0,0.)))*burn ;\r\n\t\telse col = tgt; }\r\n\t\r\n\tfragColor = col;\r\n}", "sourceMedias": {"parameters": [{"value": "/perfJar/sequence/layers/mariage2/blocks/picture1/picture", "controlAddress": "/mediaIn", "type": "Target", "niceName": "Media In", "customizable": false, "removable": false, "description": "Media In", "hideInEditor": false, "feedbackOnly": false}, {"value": "/perfJar/sequence/layers/mariage2/blocks/solidColor/solidColor", "controlAddress": "/mediaOut", "type": "Target", "niceName": "Media Out", "customizable": false, "removable": false, "description": "Media Out", "hideInEditor": false, "feedbackOnly": false}]}}}, "type": "Transition"}, {"parameters": [{"value": 261.2799987792969, "controlAddress": "/startTime"}, {"value": 13.44000053405762, "controlAddress": "/length"}, {"value": 0.0, "controlAddress": "/fadeIn", "enabled": false}], "niceName": "Solid Color", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "solidColor": {"niceName": "Solid Color", "containers": {"mediaParameters": {"parameters": [{"value": [0.0, 0.0, 0.0, 1.0], "controlAddress": "/color"}]}}, "type": "Solid Color"}}, "type": "Solid Color"}], "viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Media"}, {"parameters": [{"value": 60.0, "controlAddress": "/listSize"}, {"value": [0.2745098173618317, 0.2313725501298904, 0.05490196123719215, 1.0], "controlAddress": "/color"}, {"value": [0.0, 0.0, 0.0, 1.0], "controlAddress": "/backgroundColor"}], "niceName": "Cascade", "containers": {"positionning": {"parameters": [{"value": true, "controlAddress": "/enabled"}, {"value": 574, "hexMode": false, "controlAddress": "/x"}, {"value": 637, "hexMode": false, "controlAddress": "/y"}, {"value": 159, "hexMode": false, "controlAddress": "/width"}, {"value": 123, "hexMode": false, "controlAddress": "/height"}]}, "blocks": {"hideInEditor": true, "hideInRemoteControl": true, "items": [{"parameters": [{"value": 156.7599945068359, "controlAddress": "/startTime"}, {"value": 31.73999786376953, "controlAddress": "/length"}, {"value": 2.0, "controlAddress": "/fadeIn", "enabled": true}, {"value": 2.279922485351562, "controlAddress": "/fadeOut", "enabled": false}], "niceName": "Picture", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "picture": {"parameters": [{"value": "D:/Projects/Ultreia/Traces/RuleMapoule/Image/frame still (3).png", "controlAddress": "/filePath"}], "niceName": "Picture", "containers": {"mediaParameters": {}}, "type": "Picture"}}, "type": "Picture"}, {"parameters": [{"value": 186.2200775146484, "controlAddress": "/startTime"}, {"value": 15.21999359130859, "controlAddress": "/length"}, {"value": 2.279922485351562, "controlAddress": "/fadeIn", "enabled": false}, {"value": 1.789304256439209, "controlAddress": "/fadeOut", "enabled": true}], "niceName": "Video", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.2003929316997528, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.2003929316997528, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "video": {"parameters": [{"value": "Videos/Frames/Album de famille_01_V2.mp4", "controlAddress": "/filePath"}], "niceName": "Video", "containers": {"mediaParameters": {}}, "type": "Video"}}, "type": "Video"}, {"parameters": [{"value": 228.7199859619141, "controlAddress": "/startTime"}, {"value": 21.3800048828125, "controlAddress": "/length"}, {"value": 0.0, "controlAddress": "/fadeOut", "enabled": false}], "niceName": "Solid Color 1", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "solidColor": {"niceName": "Solid Color", "containers": {"mediaParameters": {"parameters": [{"value": [0.0, 0.0, 0.0, 1.0], "controlAddress": "/color"}]}}, "type": "Solid Color"}}, "type": "Solid Color"}, {"parameters": [{"value": 231.0800170898438, "controlAddress": "/startTime"}, {"value": 19.01997375488281, "controlAddress": "/length"}, {"value": "/media/perfJar/sequence/layers/cascade/blocks/solidColor1", "controlAddress": "/clipIn"}, {"value": "/media/perfJar/sequence/layers/cascade/blocks/picture1", "controlAddress": "/clipOut"}], "niceName": "Transition 1", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "shader": {"parameters": [{"value": 151, "hexMode": false, "controlAddress": "/width"}, {"value": 123, "hexMode": false, "controlAddress": "/height"}, {"value": "ShaderToy File", "controlAddress": "/shaderType"}, {"value": "D:/Projects/Ultreia/Traces/RuleMapoule/shaders/transitions/waves.frag", "controlAddress": "/fragmentShader"}, {"value": "tsXBzS", "controlAddress": "/shaderToyID"}, {"value": "Bd8jRr", "controlAddress": "/shaderToyKey"}], "niceName": "Shader", "containers": {"mediaParameters": {}, "sourceMedias": {"parameters": [{"value": "/perfJar/sequence/layers/cascade/blocks/solidColor1/solidColor", "controlAddress": "/mediaIn", "type": "Target", "niceName": "Media In", "customizable": false, "removable": false, "description": "Media In", "hideInEditor": false, "feedbackOnly": false}, {"value": "/perfJar/sequence/layers/cascade/blocks/picture1/picture", "controlAddress": "/mediaOut", "type": "Target", "niceName": "Media Out", "customizable": false, "removable": false, "description": "Media Out", "hideInEditor": false, "feedbackOnly": false}]}}, "type": "Shader", "shaderCache": "uniform float progression;\r\n\r\n\r\nvec3 mod289(vec3 x) {\r\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\r\n}\r\n\r\nvec4 mod289(vec4 x) {\r\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\r\n}\r\n\r\nvec4 permute(vec4 x) {\r\n  return mod289(((x*34.0)+1.0)*x);\r\n}\r\n\r\nvec4 taylorInvSqrt(vec4 r){\r\n  return 1.79284291400159 - 0.85373472095314 * r;\r\n}\r\n\r\nfloat snoise(vec3 v) {\r\n\r\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\r\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\r\n\r\n  // First corner\r\n  vec3 i  = floor(v + dot(v, C.yyy) );\r\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\r\n\r\n  // Other corners\r\n  vec3 g = step(x0.yzx, x0.xyz);\r\n  vec3 l = 1.0 - g;\r\n  vec3 i1 = min( g.xyz, l.zxy );\r\n  vec3 i2 = max( g.xyz, l.zxy );\r\n\r\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\r\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\r\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\r\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\r\n  vec3 x1 = x0 - i1 + C.xxx;\r\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\r\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\r\n\r\n  // Permutations\r\n  i = mod289(i);\r\n  vec4 p = permute( permute( permute(\r\n      i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\r\n    + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\r\n    + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\r\n\r\n  // Gradients: 7x7 points over a square, mapped onto an octahedron.\r\n  // The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\r\n  float n_ = 0.142857142857; // 1.0/7.0\r\n  vec3  ns = n_ * D.wyz - D.xzx;\r\n\r\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\r\n\r\n  vec4 x_ = floor(j * ns.z);\r\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\r\n\r\n  vec4 x = x_ *ns.x + ns.yyyy;\r\n  vec4 y = y_ *ns.x + ns.yyyy;\r\n  vec4 h = 1.0 - abs(x) - abs(y);\r\n\r\n  vec4 b0 = vec4( x.xy, y.xy );\r\n  vec4 b1 = vec4( x.zw, y.zw );\r\n\r\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\r\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\r\n  vec4 s0 = floor(b0)*2.0 + 1.0;\r\n  vec4 s1 = floor(b1)*2.0 + 1.0;\r\n  vec4 sh = -step(h, vec4(0.0));\r\n\r\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\r\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\r\n\r\n  vec3 p0 = vec3(a0.xy,h.x);\r\n  vec3 p1 = vec3(a0.zw,h.y);\r\n  vec3 p2 = vec3(a1.xy,h.z);\r\n  vec3 p3 = vec3(a1.zw,h.w);\r\n\r\n  //Normalise gradients\r\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\r\n  p0 *= norm.x;\r\n  p1 *= norm.y;\r\n  p2 *= norm.z;\r\n  p3 *= norm.w;\r\n\r\n  // Mix final noise value\r\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\r\n  m = m * m;\r\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1), dot(p2,x2), dot(p3,x3) ) );\r\n\r\n}\r\n\r\n// via: https://petewerner.blogspot.jp/2015/02/intro-to-curl-noise.html\r\nvec3 curlNoise( vec3 p ){\r\n\r\n  const float e = 0.1;\r\n\r\n  float  n1 = snoise(vec3(p.x, p.y + e, p.z));\r\n  float  n2 = snoise(vec3(p.x, p.y - e, p.z));\r\n  float  n3 = snoise(vec3(p.x, p.y, p.z + e));\r\n  float  n4 = snoise(vec3(p.x, p.y, p.z - e));\r\n  float  n5 = snoise(vec3(p.x + e, p.y, p.z));\r\n  float  n6 = snoise(vec3(p.x - e, p.y, p.z));\r\n\r\n  float x = n2 - n1 - n4 + n3;\r\n  float y = n4 - n3 - n6 + n5;\r\n  float z = n6 - n5 - n2 + n1;\r\n\r\n\r\n  const float divisor = 1.0 / ( 2.0 * e );\r\n  return normalize( vec3( x , y , z ) * divisor );\r\n}\r\n\r\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\r\n{\r\n    // Normalized pixel coordinates (from 0 to 1)\r\n    vec2 uv = fragCoord/iResolution.xy;\r\n\tfloat f = progression;\r\n    vec3 curl = curlNoise(vec3(uv,1.) *5. + iTime) / 1.;\r\n    // curl = curl * curl;\r\n    \r\n    vec4 t0 = texture(iChannel0, vec2(uv.x,uv.y + f * (curl.x) ) );\r\n    vec4 t1 = texture(iChannel1, vec2(uv.x,uv.y + (1.-f) * (curl.x) ));\r\n    // Time varying pixel color\r\n\tuv.x += curl.x;\r\n    // Output to screen\r\n    fragColor = mix(t0,t1,f);\r\n    // Really interesting effect. colors don't overlap\r\n    // fragColor = vec4(vec3(curl.x,curl.y,curl.z),1.0);\r\n}", "sourceMedias": {"parameters": [{"value": "/perfJar/sequence/layers/cascade/blocks/solidColor1/solidColor", "controlAddress": "/mediaIn", "type": "Target", "niceName": "Media In", "customizable": false, "removable": false, "description": "Media In", "hideInEditor": false, "feedbackOnly": false}, {"value": "/perfJar/sequence/layers/cascade/blocks/picture1/picture", "controlAddress": "/mediaOut", "type": "Target", "niceName": "Media Out", "customizable": false, "removable": false, "description": "Media Out", "hideInEditor": false, "feedbackOnly": false}]}}}, "type": "Transition"}, {"parameters": [{"value": 231.0800170898438, "controlAddress": "/startTime"}, {"value": 38.66003036499023, "controlAddress": "/length"}, {"value": 0.0, "controlAddress": "/fadeIn", "enabled": false}, {"value": 0.0, "controlAddress": "/fadeOut", "enabled": false}], "niceName": "Picture 1", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Linear", "controlAddress": "/easingType"}], "niceName": "Key 2", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "picture": {"parameters": [{"value": "Image/vlcsnap-2024-05-21-18h20m57s443.png", "controlAddress": "/filePath"}], "niceName": "Picture", "containers": {"mediaParameters": {}}, "type": "Picture"}}, "type": "Picture"}, {"parameters": [{"value": 259.6399841308594, "controlAddress": "/startTime"}, {"value": 10.10006713867188, "controlAddress": "/length"}, {"value": "/media/perfJar/sequence/layers/cascade/blocks/picture1", "controlAddress": "/clipIn"}, {"value": "/media/perfJar/sequence/layers/cascade/blocks/solidColor", "controlAddress": "/clipOut"}], "niceName": "Transition 2", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "shader": {"parameters": [{"value": 151, "hexMode": false, "controlAddress": "/width"}, {"value": 123, "hexMode": false, "controlAddress": "/height"}, {"value": "ShaderToy File", "controlAddress": "/shaderType"}, {"value": "D:/Projects/Ultreia/Traces/RuleMapoule/shaders/transitions/burn.frag", "controlAddress": "/fragmentShader"}, {"value": "tsXBzS", "controlAddress": "/shaderToyID"}, {"value": "Bd8jRr", "controlAddress": "/shaderToyKey"}], "niceName": "Shader", "containers": {"mediaParameters": {}, "sourceMedias": {"parameters": [{"value": "/perfJar/sequence/layers/cascade/blocks/picture1/picture", "controlAddress": "/mediaIn", "type": "Target", "niceName": "Media In", "customizable": false, "removable": false, "description": "Media In", "hideInEditor": false, "feedbackOnly": false}, {"value": "/perfJar/sequence/layers/cascade/blocks/solidColor/solidColor", "controlAddress": "/mediaOut", "type": "Target", "niceName": "Media Out", "customizable": false, "removable": false, "description": "Media Out", "hideInEditor": false, "feedbackOnly": false}]}}, "type": "Shader", "shaderCache": "uniform float progression;\r\nuniform vec4 burnColor = vec4(1.0,1.0,1.0,1.0);\r\n\r\nfloat Hash( vec2 p)\r\n{\r\n\tvec3 p2 = vec3(p.xy,1.0);\r\n    return fract(sin(dot(p2,vec3(37.1,61.7, 12.4)))*3758.5453123);\r\n}\r\n\r\nfloat noise(in vec2 p)\r\n{\r\n    vec2 i = floor(p);\r\n\tvec2 f = fract(p);\r\n\tf *= f * (3.0-2.0*f);\r\n\r\n    return mix(mix(Hash(i + vec2(0.,0.)), Hash(i + vec2(1.,0.)),f.x),\r\n\t\tmix(Hash(i + vec2(0.,1.)), Hash(i + vec2(1.,1.)),f.x),\r\n\t\tf.y);\r\n}\r\n\r\nfloat fbm(vec2 p) \r\n{\r\n\tfloat v = 0.0;\r\n\tv += noise(p*1.)*.5;\r\n\tv += noise(p*2.)*.25;\r\n\tv += noise(p*4.)*.125;\r\n\treturn v;\r\n}\r\n\r\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\r\n{\r\n\tvec2 uv = fragCoord.xy/iResolution.xy;\r\n\t\r\n\tvec4 src = texture(iChannel0, uv);\r\n\tvec4 tgt = texture(iChannel1, uv);\r\n\tvec4 col = src;\r\n\t\r\n\tuv.x -= 1.5;\r\n\t\r\n    float p = progression*3;\r\n\tif(p < 0.01)\r\n\t{\r\n\t\tfragColor = src;\r\n\t\treturn;\r\n\t}\r\n\t\r\n\tvec4 burn = vec4(burnColor.r, burnColor.g, burnColor.b,burnColor.a*tgt.a);\r\n\t// burn\r\n\tfloat d = uv.x+uv.y*0.5 + 0.5*fbm(uv*15.1) + p*1.3;\r\n\tif (d >0.35) col = clamp(col-(d-0.35)*10.,0.0,1.0);\r\n\tif (d >0.47) {\r\n\t\tif (d < 0.5 ) col += (d-0.4)*33.0*0.5*(0.0+noise(100.*uv+vec2(-p*2.0,0.)))*burn ;\r\n\t\telse col = tgt; }\r\n\t\r\n\tfragColor = col;\r\n}", "sourceMedias": {"parameters": [{"value": "/perfJar/sequence/layers/cascade/blocks/picture1/picture", "controlAddress": "/mediaIn", "type": "Target", "niceName": "Media In", "customizable": false, "removable": false, "description": "Media In", "hideInEditor": false, "feedbackOnly": false}, {"value": "/perfJar/sequence/layers/cascade/blocks/solidColor/solidColor", "controlAddress": "/mediaOut", "type": "Target", "niceName": "Media Out", "customizable": false, "removable": false, "description": "Media Out", "hideInEditor": false, "feedbackOnly": false}]}}}, "type": "Transition"}, {"parameters": [{"value": 259.6399841308594, "controlAddress": "/startTime"}, {"value": 11.50000381469727, "controlAddress": "/length"}, {"value": 0.0, "controlAddress": "/fadeIn", "enabled": false}, {"value": 0.0, "controlAddress": "/fadeOut", "enabled": false}], "niceName": "Solid Color", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "solidColor": {"niceName": "Solid Color", "containers": {"mediaParameters": {"parameters": [{"value": [0.0, 0.0, 0.0, 1.0], "controlAddress": "/color"}]}}, "type": "Solid Color"}}, "type": "Solid Color"}], "viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Media"}, {"parameters": [{"value": 60.0, "controlAddress": "/listSize"}], "niceName": "Repas de famille", "containers": {"positionning": {"parameters": [{"value": true, "controlAddress": "/enabled"}, {"value": 1448, "hexMode": false, "controlAddress": "/x"}, {"value": 572, "hexMode": false, "controlAddress": "/y"}, {"value": 570, "hexMode": false, "controlAddress": "/width"}, {"value": 320, "hexMode": false, "controlAddress": "/height"}]}, "blocks": {"hideInEditor": true, "items": [{"parameters": [{"value": 423.760009765625, "controlAddress": "/startTime"}, {"value": 2.700000047683716, "controlAddress": "/fadeIn", "enabled": true}, {"value": 2.299999952316284, "controlAddress": "/fadeOut", "enabled": true}], "niceName": "Repas", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "video": {"parameters": [{"value": "Videos/Repas de famille_02_V3.mp4", "controlAddress": "/filePath"}], "niceName": "Video", "containers": {"mediaParameters": {}}, "type": "Video"}}, "type": "Video"}], "viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Media"}, {"parameters": [{"value": 60.0, "controlAddress": "/listSize"}, {"value": "Addition", "controlAddress": "/blendFunction"}], "niceName": "Oxipital", "containers": {"positionning": {"parameters": [{"value": false, "controlAddress": "/enabled"}]}, "blocks": {"hideInEditor": true, "items": [{"parameters": [{"value": 504.4800109863281, "controlAddress": "/startTime"}, {"value": 104.4199981689453, "controlAddress": "/length"}, {"value": 2.999999523162842, "controlAddress": "/fadeIn", "enabled": true}, {"value": 14.59999847412109, "controlAddress": "/fadeOut", "enabled": true}], "niceName": "Oxipital", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "video": {"parameters": [{"value": "Videos/Oxipital/Oxipital_Final_Jar.mp4", "relative": true, "controlAddress": "/filePath"}], "niceName": "Video", "containers": {"mediaParameters": {}}, "type": "Video"}}, "type": "Video"}], "viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Media"}, {"parameters": [{"value": true, "controlAddress": "/miniMode"}, {"value": 60.0, "controlAddress": "/listSize"}, {"value": 22, "hexMode": false, "controlAddress": "/uiHeight"}, {"value": [0.2745098173618317, 0.08627451211214066, 0.0117647061124444, 1.0], "controlAddress": "/color"}, {"value": [0.0, 0.0, 0.0, 1.0], "controlAddress": "/backgroundColor"}, {"value": "Multiplication", "controlAddress": "/blendFunction"}], "niceName": "Ovale Mask", "containers": {"positionning": {"parameters": [{"value": true, "controlAddress": "/enabled"}, {"value": 263, "hexMode": false, "controlAddress": "/x"}, {"value": 442, "hexMode": false, "controlAddress": "/y"}, {"value": 167, "hexMode": false, "controlAddress": "/width"}, {"value": 242, "hexMode": false, "controlAddress": "/height"}]}, "blocks": {"hideInEditor": true, "hideInRemoteControl": true, "items": [{"parameters": [{"value": 513.5599975585938, "controlAddress": "/length"}], "niceName": "Mask", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "picture": {"parameters": [{"value": "Image/Mire_Jar_Frame_mask.png", "controlAddress": "/filePath"}], "niceName": "Picture", "containers": {"mediaParameters": {}}, "type": "Picture"}}, "type": "Picture"}], "viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Media"}, {"parameters": [{"value": 60.0, "controlAddress": "/listSize"}, {"value": [0.0, 0.0, 0.0, 1.0], "controlAddress": "/backgroundColor"}, {"value": "Lighten", "controlAddress": "/blendFunction"}], "niceName": "Ovale", "containers": {"positionning": {"parameters": [{"value": true, "controlAddress": "/enabled"}, {"value": 288, "hexMode": false, "controlAddress": "/x"}, {"value": 483, "hexMode": false, "controlAddress": "/y"}, {"value": 127, "hexMode": false, "controlAddress": "/width"}, {"value": 175, "hexMode": false, "controlAddress": "/height"}]}, "blocks": {"hideInEditor": true, "hideInRemoteControl": true, "items": [{"parameters": [{"value": 156.8200073242188, "controlAddress": "/startTime"}, {"value": 18.74001693725586, "controlAddress": "/length"}, {"value": 2.0, "controlAddress": "/fadeIn", "enabled": true}, {"value": 1.000030517578125, "controlAddress": "/fadeOut", "enabled": false}], "niceName": "Ovale picture", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "picture": {"parameters": [{"value": "D:/Projects/Ultreia/Traces/RuleMapoule/Image/frame still (1).png", "controlAddress": "/filePath"}], "niceName": "Picture", "containers": {"mediaParameters": {}}, "type": "Picture"}}, "type": "Picture"}, {"parameters": [{"value": 174.5599975585938, "controlAddress": "/startTime"}, {"value": 22.18001747131348, "controlAddress": "/length"}, {"value": 1.000030517578125, "controlAddress": "/fadeIn", "enabled": false}, {"value": 2.456124305725098, "controlAddress": "/fadeOut", "enabled": true}], "niceName": "Video", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.2023575603961945, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.2023575603961945, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "video": {"parameters": [{"value": "Videos/Frames/Repas de famille_01_v3.mp4", "controlAddress": "/filePath"}], "niceName": "Video", "containers": {"mediaParameters": {}}, "type": "Video"}}, "type": "Video"}, {"parameters": [{"value": 234.8600006103516, "controlAddress": "/startTime"}, {"value": 21.3800048828125, "controlAddress": "/length"}, {"value": 0.0, "controlAddress": "/fadeIn", "enabled": false}, {"value": 0.0, "controlAddress": "/fadeOut", "enabled": false}], "niceName": "Solid Color 1", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "solidColor": {"niceName": "Solid Color", "containers": {"mediaParameters": {"parameters": [{"value": [0.0, 0.0, 0.0, 1.0], "controlAddress": "/color"}]}}, "type": "Solid Color"}}, "type": "Solid Color"}, {"parameters": [{"value": 236.3800506591797, "controlAddress": "/startTime"}, {"value": 19.85993957519531, "controlAddress": "/length"}, {"value": "/media/perfJar/sequence/layers/ovale/blocks/solidColor1", "controlAddress": "/clipIn"}, {"value": "/media/perfJar/sequence/layers/ovale/blocks/picture1", "controlAddress": "/clipOut"}], "niceName": "Transition", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "shader": {"parameters": [{"value": 127, "hexMode": false, "controlAddress": "/width"}, {"value": 175, "hexMode": false, "controlAddress": "/height"}, {"value": "ShaderToy File", "controlAddress": "/shaderType"}, {"value": "D:/Projects/Ultreia/Traces/RuleMapoule/shaders/transitions/waves.frag", "controlAddress": "/fragmentShader"}, {"value": "tsXBzS", "controlAddress": "/shaderToyID"}, {"value": "Bd8jRr", "controlAddress": "/shaderToyKey"}], "niceName": "Shader", "containers": {"mediaParameters": {}, "sourceMedias": {"parameters": [{"value": "/perfJar/sequence/layers/ovale/blocks/solidColor1/solidColor", "controlAddress": "/mediaIn", "type": "Target", "niceName": "Media In", "customizable": false, "removable": false, "description": "Media In", "hideInEditor": false, "feedbackOnly": false}, {"value": "/perfJar/sequence/layers/ovale/blocks/picture1/picture", "controlAddress": "/mediaOut", "type": "Target", "niceName": "Media Out", "customizable": false, "removable": false, "description": "Media Out", "hideInEditor": false, "feedbackOnly": false}]}}, "type": "Shader", "shaderCache": "uniform float progression;\r\n\r\n\r\nvec3 mod289(vec3 x) {\r\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\r\n}\r\n\r\nvec4 mod289(vec4 x) {\r\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\r\n}\r\n\r\nvec4 permute(vec4 x) {\r\n  return mod289(((x*34.0)+1.0)*x);\r\n}\r\n\r\nvec4 taylorInvSqrt(vec4 r){\r\n  return 1.79284291400159 - 0.85373472095314 * r;\r\n}\r\n\r\nfloat snoise(vec3 v) {\r\n\r\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\r\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\r\n\r\n  // First corner\r\n  vec3 i  = floor(v + dot(v, C.yyy) );\r\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\r\n\r\n  // Other corners\r\n  vec3 g = step(x0.yzx, x0.xyz);\r\n  vec3 l = 1.0 - g;\r\n  vec3 i1 = min( g.xyz, l.zxy );\r\n  vec3 i2 = max( g.xyz, l.zxy );\r\n\r\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\r\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\r\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\r\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\r\n  vec3 x1 = x0 - i1 + C.xxx;\r\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\r\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\r\n\r\n  // Permutations\r\n  i = mod289(i);\r\n  vec4 p = permute( permute( permute(\r\n      i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\r\n    + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\r\n    + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\r\n\r\n  // Gradients: 7x7 points over a square, mapped onto an octahedron.\r\n  // The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\r\n  float n_ = 0.142857142857; // 1.0/7.0\r\n  vec3  ns = n_ * D.wyz - D.xzx;\r\n\r\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\r\n\r\n  vec4 x_ = floor(j * ns.z);\r\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\r\n\r\n  vec4 x = x_ *ns.x + ns.yyyy;\r\n  vec4 y = y_ *ns.x + ns.yyyy;\r\n  vec4 h = 1.0 - abs(x) - abs(y);\r\n\r\n  vec4 b0 = vec4( x.xy, y.xy );\r\n  vec4 b1 = vec4( x.zw, y.zw );\r\n\r\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\r\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\r\n  vec4 s0 = floor(b0)*2.0 + 1.0;\r\n  vec4 s1 = floor(b1)*2.0 + 1.0;\r\n  vec4 sh = -step(h, vec4(0.0));\r\n\r\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\r\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\r\n\r\n  vec3 p0 = vec3(a0.xy,h.x);\r\n  vec3 p1 = vec3(a0.zw,h.y);\r\n  vec3 p2 = vec3(a1.xy,h.z);\r\n  vec3 p3 = vec3(a1.zw,h.w);\r\n\r\n  //Normalise gradients\r\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\r\n  p0 *= norm.x;\r\n  p1 *= norm.y;\r\n  p2 *= norm.z;\r\n  p3 *= norm.w;\r\n\r\n  // Mix final noise value\r\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\r\n  m = m * m;\r\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1), dot(p2,x2), dot(p3,x3) ) );\r\n\r\n}\r\n\r\n// via: https://petewerner.blogspot.jp/2015/02/intro-to-curl-noise.html\r\nvec3 curlNoise( vec3 p ){\r\n\r\n  const float e = 0.1;\r\n\r\n  float  n1 = snoise(vec3(p.x, p.y + e, p.z));\r\n  float  n2 = snoise(vec3(p.x, p.y - e, p.z));\r\n  float  n3 = snoise(vec3(p.x, p.y, p.z + e));\r\n  float  n4 = snoise(vec3(p.x, p.y, p.z - e));\r\n  float  n5 = snoise(vec3(p.x + e, p.y, p.z));\r\n  float  n6 = snoise(vec3(p.x - e, p.y, p.z));\r\n\r\n  float x = n2 - n1 - n4 + n3;\r\n  float y = n4 - n3 - n6 + n5;\r\n  float z = n6 - n5 - n2 + n1;\r\n\r\n\r\n  const float divisor = 1.0 / ( 2.0 * e );\r\n  return normalize( vec3( x , y , z ) * divisor );\r\n}\r\n\r\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\r\n{\r\n    // Normalized pixel coordinates (from 0 to 1)\r\n    vec2 uv = fragCoord/iResolution.xy;\r\n\tfloat f = progression;\r\n    vec3 curl = curlNoise(vec3(uv,1.) *5. + iTime) / 1.;\r\n    // curl = curl * curl;\r\n    \r\n    vec4 t0 = texture(iChannel0, vec2(uv.x,uv.y + f * (curl.x) ) );\r\n    vec4 t1 = texture(iChannel1, vec2(uv.x,uv.y + (1.-f) * (curl.x) ));\r\n    // Time varying pixel color\r\n\tuv.x += curl.x;\r\n    // Output to screen\r\n    fragColor = mix(t0,t1,f);\r\n    // Really interesting effect. colors don't overlap\r\n    // fragColor = vec4(vec3(curl.x,curl.y,curl.z),1.0);\r\n}", "sourceMedias": {"parameters": [{"value": "/perfJar/sequence/layers/ovale/blocks/solidColor1/solidColor", "controlAddress": "/mediaIn", "type": "Target", "niceName": "Media In", "customizable": false, "removable": false, "description": "Media In", "hideInEditor": false, "feedbackOnly": false}, {"value": "/perfJar/sequence/layers/ovale/blocks/picture1/picture", "controlAddress": "/mediaOut", "type": "Target", "niceName": "Media Out", "customizable": false, "removable": false, "description": "Media Out", "hideInEditor": false, "feedbackOnly": false}]}}}, "type": "Transition"}, {"parameters": [{"value": 236.3800506591797, "controlAddress": "/startTime"}, {"value": 38.66003036499023, "controlAddress": "/length"}, {"value": 0.0, "controlAddress": "/fadeIn", "enabled": false}, {"value": 0.0, "controlAddress": "/fadeOut", "enabled": false}], "niceName": "Picture 1", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Linear", "controlAddress": "/easingType"}], "niceName": "Key 2", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "picture": {"parameters": [{"value": "D:/Projects/Ultreia/Traces/RuleMapoule/Image/Frame_Portrait_2.png", "controlAddress": "/filePath"}], "niceName": "Picture", "containers": {"mediaParameters": {}}, "type": "Picture"}}, "type": "Picture"}, {"parameters": [{"value": 260.0599975585938, "controlAddress": "/startTime"}, {"value": 14.98007202148438, "controlAddress": "/length"}, {"value": "/media/perfJar/sequence/layers/ovale/blocks/picture1", "controlAddress": "/clipIn"}, {"value": "/media/perfJar/sequence/layers/ovale/blocks/solidColor", "controlAddress": "/clipOut"}], "niceName": "Transition 1", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "shader": {"parameters": [{"value": 127, "hexMode": false, "controlAddress": "/width"}, {"value": 175, "hexMode": false, "controlAddress": "/height"}, {"value": "ShaderToy File", "controlAddress": "/shaderType"}, {"value": "D:/Projects/Ultreia/Traces/RuleMapoule/shaders/transitions/burn.frag", "controlAddress": "/fragmentShader"}, {"value": "tsXBzS", "controlAddress": "/shaderToyID"}, {"value": "Bd8jRr", "controlAddress": "/shaderToyKey"}], "niceName": "Shader", "containers": {"mediaParameters": {}, "sourceMedias": {"parameters": [{"value": "/perfJar/sequence/layers/ovale/blocks/picture1/picture", "controlAddress": "/mediaIn", "type": "Target", "niceName": "Media In", "customizable": false, "removable": false, "description": "Media In", "hideInEditor": false, "feedbackOnly": false}, {"value": "/perfJar/sequence/layers/ovale/blocks/solidColor/solidColor", "controlAddress": "/mediaOut", "type": "Target", "niceName": "Media Out", "customizable": false, "removable": false, "description": "Media Out", "hideInEditor": false, "feedbackOnly": false}]}}, "type": "Shader", "shaderCache": "uniform float progression;\r\nuniform vec4 burnColor = vec4(1.0,1.0,1.0,1.0);\r\n\r\nfloat Hash( vec2 p)\r\n{\r\n\tvec3 p2 = vec3(p.xy,1.0);\r\n    return fract(sin(dot(p2,vec3(37.1,61.7, 12.4)))*3758.5453123);\r\n}\r\n\r\nfloat noise(in vec2 p)\r\n{\r\n    vec2 i = floor(p);\r\n\tvec2 f = fract(p);\r\n\tf *= f * (3.0-2.0*f);\r\n\r\n    return mix(mix(Hash(i + vec2(0.,0.)), Hash(i + vec2(1.,0.)),f.x),\r\n\t\tmix(Hash(i + vec2(0.,1.)), Hash(i + vec2(1.,1.)),f.x),\r\n\t\tf.y);\r\n}\r\n\r\nfloat fbm(vec2 p) \r\n{\r\n\tfloat v = 0.0;\r\n\tv += noise(p*1.)*.5;\r\n\tv += noise(p*2.)*.25;\r\n\tv += noise(p*4.)*.125;\r\n\treturn v;\r\n}\r\n\r\nvoid mainImage( out vec4 fragColor, in vec2 fragCoord )\r\n{\r\n\tvec2 uv = fragCoord.xy/iResolution.xy;\r\n\t\r\n\tvec4 src = texture(iChannel0, uv);\r\n\tvec4 tgt = texture(iChannel1, uv);\r\n\tvec4 col = src;\r\n\t\r\n\tuv.x -= 1.5;\r\n\t\r\n    float p = progression*3;\r\n\tif(p < 0.01)\r\n\t{\r\n\t\tfragColor = src;\r\n\t\treturn;\r\n\t}\r\n\t\r\n\tvec4 burn = vec4(burnColor.r, burnColor.g, burnColor.b,burnColor.a*tgt.a);\r\n\t// burn\r\n\tfloat d = uv.x+uv.y*0.5 + 0.5*fbm(uv*15.1) + p*1.3;\r\n\tif (d >0.35) col = clamp(col-(d-0.35)*10.,0.0,1.0);\r\n\tif (d >0.47) {\r\n\t\tif (d < 0.5 ) col += (d-0.4)*33.0*0.5*(0.0+noise(100.*uv+vec2(-p*2.0,0.)))*burn ;\r\n\t\telse col = tgt; }\r\n\t\r\n\tfragColor = col;\r\n}", "sourceMedias": {"parameters": [{"value": "/perfJar/sequence/layers/ovale/blocks/picture1/picture", "controlAddress": "/mediaIn", "type": "Target", "niceName": "Media In", "customizable": false, "removable": false, "description": "Media In", "hideInEditor": false, "feedbackOnly": false}, {"value": "/perfJar/sequence/layers/ovale/blocks/solidColor/solidColor", "controlAddress": "/mediaOut", "type": "Target", "niceName": "Media Out", "customizable": false, "removable": false, "description": "Media Out", "hideInEditor": false, "feedbackOnly": false}]}}}, "type": "Transition"}, {"parameters": [{"value": 260.0599975585938, "controlAddress": "/startTime"}, {"value": 23.72000312805176, "controlAddress": "/length"}, {"value": 0.0, "controlAddress": "/fadeIn", "enabled": false}, {"value": 0.0, "controlAddress": "/fadeOut", "enabled": false}], "niceName": "Solid Color", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "solidColor": {"niceName": "Solid Color", "containers": {"mediaParameters": {"parameters": [{"value": [0.0, 0.0, 0.0, 1.0], "controlAddress": "/color"}]}}, "type": "Solid Color"}}, "type": "Solid Color"}], "viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Media"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "cues": {"hideInEditor": true, "items": [{"parameters": [{"value": 29.8799991607666, "controlAddress": "/time"}, {"value": "", "controlAddress": "/loopJumpCue"}], "niceName": "Photo On", "type": "BaseItem"}, {"parameters": [{"value": 270.4400024414062, "controlAddress": "/time"}, {"value": "", "controlAddress": "/loopJumpCue"}], "niceName": "Fin cadre", "type": "BaseItem"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "editing": true}}, "type": "Sequence"}, {"parameters": [{"value": 1350, "hexMode": false, "controlAddress": "/width"}, {"value": 954, "hexMode": false, "controlAddress": "/height"}], "niceName": "Perf Back", "containers": {"mediaParameters": {}, "sequence": {"parameters": [{"value": 1800.0, "controlAddress": "/totalTime"}, {"value": 310.2936096191406, "controlAddress": "/viewStartTime"}, {"value": 703.5333862304688, "controlAddress": "/viewEndTime"}], "niceName": "Sequence", "type": "Sequence", "layers": {"hideInEditor": true, "items": [{"parameters": [{"value": false, "controlAddress": "/enabled"}, {"value": 59.0, "controlAddress": "/listSize"}, {"value": 59, "hexMode": false, "controlAddress": "/uiHeight"}], "niceName": "Debug Back", "editorIsCollapsed": true, "containers": {"positionning": {"parameters": [{"value": false, "controlAddress": "/enabled"}]}, "blocks": {"hideInEditor": true, "hideInRemoteControl": true, "items": [{"parameters": [{"value": 701.7999877929688, "controlAddress": "/length"}], "niceName": "Picture", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "picture": {"parameters": [{"value": "Image/Mire_Fonddesc\u00e8ne.png", "controlAddress": "/filePath"}], "niceName": "Picture", "containers": {"mediaParameters": {}}, "type": "Picture"}}, "type": "Picture"}], "viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Media"}, {"parameters": [{"value": 60.0, "controlAddress": "/listSize"}, {"value": "Addition", "controlAddress": "/blendFunction"}], "niceName": "Oxipital", "containers": {"positionning": {"parameters": [{"value": true, "controlAddress": "/enabled"}, {"value": -149, "hexMode": false, "controlAddress": "/y"}, {"value": 1350, "hexMode": false, "controlAddress": "/width"}, {"value": 1149, "hexMode": false, "controlAddress": "/height"}]}, "blocks": {"hideInEditor": true, "items": [{"parameters": [{"value": 501.2799987792969, "controlAddress": "/startTime"}, {"value": 105.3200149536133, "controlAddress": "/length"}, {"value": 2.399999856948853, "controlAddress": "/fadeIn", "enabled": true}, {"value": 17.59999465942383, "controlAddress": "/fadeOut", "enabled": true}], "niceName": "Oxipital", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "video": {"parameters": [{"value": "Videos/Oxipital/Oxipital_final_back.mp4", "controlAddress": "/filePath"}], "niceName": "Video", "containers": {"mediaParameters": {}}, "type": "Video"}}, "type": "Video"}], "viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Media"}, {"parameters": [{"value": 60.0, "controlAddress": "/listSize"}], "niceName": "Media", "containers": {"positionning": {"parameters": [{"value": false, "controlAddress": "/enabled"}]}, "blocks": {"hideInEditor": true, "hideInRemoteControl": true, "items": [{"parameters": [{"value": 344.0, "controlAddress": "/startTime"}, {"value": 72.02000427246094, "controlAddress": "/length"}, {"value": 10.0, "controlAddress": "/fadeOut", "enabled": true}], "niceName": "Bal", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "video": {"parameters": [{"value": "Videos/Bal/Bal_Back_03.mp4", "controlAddress": "/filePath"}, {"value": true, "controlAddress": "/usePreroll"}], "niceName": "Video", "containers": {"mediaParameters": {}}, "type": "Video"}}, "type": "Video"}, {"parameters": [{"value": 458.0, "controlAddress": "/startTime"}, {"value": 52.26000595092773, "controlAddress": "/length"}, {"value": 6.204384326934814, "controlAddress": "/fadeIn", "enabled": true}, {"value": 2.899999618530273, "controlAddress": "/fadeOut", "enabled": true}], "niceName": "Video", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "video": {"parameters": [{"value": "Videos/Paysages Particules/Paysage Mur Fond.mp4", "controlAddress": "/filePath"}], "niceName": "Video", "containers": {"mediaParameters": {}}, "type": "Video"}}, "type": "Video"}], "viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Media"}, {"parameters": [{"value": false, "controlAddress": "/enabled"}, {"value": 60.0, "controlAddress": "/listSize"}], "niceName": "Media 1", "containers": {"positionning": {"parameters": [{"value": false, "controlAddress": "/enabled"}]}, "blocks": {"hideInEditor": true, "items": [{"parameters": [{"value": 705.5400390625, "controlAddress": "/length"}], "niceName": "Shared Texture", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "sharedTexture": {"parameters": [{"value": "back", "controlAddress": "/sharingName"}], "niceName": "Shared Texture", "containers": {"mediaParameters": {}}, "type": "Shared Texture"}}, "type": "Shared Texture"}], "viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Media"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "cues": {"hideInEditor": true, "viewOffset": [0, 0], "viewZoom": 1.0}}}, "type": "Sequence"}, {"niceName": "Perf TV", "containers": {"mediaParameters": {}, "sequence": {"parameters": [{"value": 1800.0, "controlAddress": "/totalTime"}, {"value": 55.88000106811523, "controlAddress": "/viewStartTime"}, {"value": 213.2799987792969, "controlAddress": "/viewEndTime"}], "niceName": "Sequence", "type": "Sequence", "layers": {"hideInEditor": true, "items": [{"parameters": [{"value": false, "controlAddress": "/enabled"}, {"value": 60.0, "controlAddress": "/listSize"}], "niceName": "Debug", "containers": {"positionning": {"parameters": [{"value": false, "controlAddress": "/enabled"}]}, "blocks": {"hideInEditor": true, "hideInRemoteControl": true, "items": [{"parameters": [{"value": 710.0400390625, "controlAddress": "/length"}], "niceName": "Picture", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "picture": {"parameters": [{"value": "Image/Golden Gang Ultreia_1920x1080.png", "controlAddress": "/filePath"}], "niceName": "Picture", "containers": {"mediaParameters": {}}, "type": "Picture"}}, "type": "Picture"}], "viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Media"}, {"parameters": [{"value": 60.0, "controlAddress": "/listSize"}], "niceName": "Media 1", "containers": {"positionning": {"parameters": [{"value": false, "controlAddress": "/enabled"}]}, "blocks": {"hideInEditor": true, "items": [{"parameters": [{"value": 92.35999298095703, "controlAddress": "/startTime"}, {"value": 69.52000427246094, "controlAddress": "/length"}], "niceName": "Solid Color", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "solidColor": {"niceName": "Solid Color", "containers": {"mediaParameters": {"parameters": [{"value": [0.0, 0.0, 0.0, 0.3882353007793427], "controlAddress": "/color"}]}}, "type": "Solid Color"}}, "type": "Solid Color"}], "viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Media"}, {"parameters": [{"value": 60.0, "controlAddress": "/listSize"}], "niceName": "Media", "containers": {"positionning": {"parameters": [{"value": false, "controlAddress": "/enabled"}, {"value": 1920, "hexMode": false, "controlAddress": "/width"}]}, "blocks": {"hideInEditor": true, "hideInRemoteControl": true, "items": [{"parameters": [{"value": 92.31999969482422, "controlAddress": "/startTime"}, {"value": 69.34000396728516, "controlAddress": "/length"}, {"value": 3.0, "controlAddress": "/fadeIn", "enabled": true}, {"value": 6.499997138977051, "controlAddress": "/fadeOut", "enabled": true}], "niceName": "Ruine 03", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "video": {"parameters": [{"value": "Videos/Ruine et deuil_03.mp4", "controlAddress": "/filePath"}], "niceName": "Video", "containers": {"mediaParameters": {}}, "type": "Video"}}, "type": "Video"}, {"parameters": [{"value": 668.0, "controlAddress": "/startTime"}, {"value": 1203.0, "controlAddress": "/length"}], "niceName": "Video", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "video": {"parameters": [{"value": "Videos/MEDIA_PUB interperf/Montage pub interperf V1.mov", "controlAddress": "/filePath"}], "niceName": "Video", "containers": {"mediaParameters": {}}, "type": "Video"}}, "type": "Video"}], "viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Media"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "cues": {"hideInEditor": true, "items": [{"parameters": [{"value": 92.83999633789062, "controlAddress": "/time"}, {"value": "", "controlAddress": "/loopJumpCue"}], "niceName": "Debut Guerre", "type": "BaseItem"}, {"parameters": [{"value": 162.5200042724609, "controlAddress": "/time"}, {"value": "", "controlAddress": "/loopJumpCue"}], "niceName": "Fin guerre", "type": "BaseItem"}], "viewOffset": [0, 0], "viewZoom": 1.0}}}, "type": "Sequence"}, {"niceName": "Perf Retro Projection", "containers": {"mediaParameters": {}, "sequence": {"parameters": [{"value": 1800.0, "controlAddress": "/totalTime"}, {"value": 35.69935607910156, "controlAddress": "/viewStartTime"}, {"value": 1151.699340820312, "controlAddress": "/viewEndTime"}], "niceName": "Sequence", "type": "Sequence", "layers": {"hideInEditor": true, "items": [{"parameters": [{"value": false, "controlAddress": "/enabled"}, {"value": 60.0, "controlAddress": "/listSize"}], "niceName": "Debug", "editorIsCollapsed": true, "containers": {"positionning": {"parameters": [{"value": false, "controlAddress": "/enabled"}]}, "blocks": {"hideInEditor": true, "hideInRemoteControl": true, "items": [{"parameters": [{"value": 659.3800048828125, "controlAddress": "/length"}], "niceName": "Picture", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "picture": {"parameters": [{"value": "Image/Golden Gang Ultreia_1080x1920.png", "controlAddress": "/filePath"}], "niceName": "Picture", "containers": {"mediaParameters": {}}, "type": "Picture"}}, "type": "Picture"}], "viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Media"}, {"parameters": [{"value": true, "controlAddress": "/enabled"}, {"value": 60.0, "controlAddress": "/listSize"}, {"value": [1.0, 1.0, 1.0, 0.0], "controlAddress": "/backgroundColor"}, {"value": "Lighten", "controlAddress": "/blendFunction"}], "niceName": "Media", "containers": {"positionning": {"parameters": [{"value": true, "controlAddress": "/enabled"}, {"value": 80, "hexMode": false, "controlAddress": "/x"}, {"value": -225, "hexMode": false, "controlAddress": "/y"}, {"value": 1593, "hexMode": false, "controlAddress": "/width"}, {"value": 1366, "hexMode": false, "controlAddress": "/height"}]}, "blocks": {"hideInEditor": true, "hideInRemoteControl": true, "items": [{"parameters": [{"value": 407.0, "controlAddress": "/startTime"}, {"value": 102.9199829101562, "controlAddress": "/length"}, {"value": 11.50000190734863, "controlAddress": "/fadeIn", "enabled": true}, {"value": 14.19999980926514, "controlAddress": "/fadeOut", "enabled": true}], "niceName": "Video", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "video": {"parameters": [{"value": "D:/Projects/Ultreia/Traces/RuleMapoule/Videos/Paysages Particules/Paysage Derriere.mp4", "controlAddress": "/filePath"}, {"value": true, "controlAddress": "/loop"}], "niceName": "Video", "containers": {"mediaParameters": {}}, "type": "Video"}}, "type": "Video"}], "viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Media"}, {"parameters": [{"value": 60.0, "controlAddress": "/listSize"}, {"value": 60, "hexMode": false, "controlAddress": "/uiHeight"}, {"value": [0.06666667014360428, 0.06666667014360428, 0.06666667014360428, 0.0], "controlAddress": "/backgroundColor"}, {"value": "Screen", "controlAddress": "/blendFunction"}], "niceName": "Media 1", "containers": {"positionning": {"parameters": [{"value": false, "controlAddress": "/enabled"}, {"value": 281, "hexMode": false, "controlAddress": "/x"}, {"value": 2, "hexMode": false, "controlAddress": "/y"}, {"value": 1344, "hexMode": false, "controlAddress": "/width"}, {"value": 867, "hexMode": false, "controlAddress": "/height"}], "editorIsCollapsed": true}, "blocks": {"hideInEditor": true, "hideInRemoteControl": true, "items": [{"parameters": [{"value": 112.2200012207031, "controlAddress": "/startTime"}, {"value": 47.74000549316406, "controlAddress": "/length"}, {"value": 8.037836074829102, "controlAddress": "/fadeIn", "enabled": true}, {"value": 7.199997425079346, "controlAddress": "/fadeOut", "enabled": true}], "niceName": "War", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "video": {"parameters": [{"value": "Videos/Ruine et deuil_landscape_02.mp4", "controlAddress": "/filePath"}, {"value": true, "controlAddress": "/loop"}], "niceName": "Video", "containers": {"mediaParameters": {}}, "type": "Video"}}, "type": "Video"}], "viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Media"}, {"parameters": [{"value": 60.0, "controlAddress": "/listSize"}, {"value": 60, "hexMode": false, "controlAddress": "/uiHeight"}], "niceName": "Media 2", "containers": {"positionning": {"parameters": [{"value": true, "controlAddress": "/enabled"}, {"value": 247, "hexMode": false, "controlAddress": "/x"}, {"value": 0, "hexMode": false, "controlAddress": "/y"}, {"value": 3201, "hexMode": false, "controlAddress": "/width"}, {"value": 926, "hexMode": false, "controlAddress": "/height"}]}, "blocks": {"hideInEditor": true, "items": [{"parameters": [{"value": 273.6600036621094, "controlAddress": "/startTime"}, {"value": 72.02000427246094, "controlAddress": "/length"}, {"value": 10.0, "controlAddress": "/fadeOut", "enabled": true}], "niceName": "Bal", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "video": {"parameters": [{"value": "Videos/Bal/Bal_Back_03.mp4", "controlAddress": "/filePath"}, {"value": true, "controlAddress": "/usePreroll"}], "niceName": "Video", "containers": {"mediaParameters": {}}, "type": "Video"}}, "type": "Video"}], "viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Media"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "cues": {"hideInEditor": true, "items": [{"parameters": [{"value": 395.6000061035156, "controlAddress": "/time"}, {"value": "", "controlAddress": "/loopJumpCue"}], "niceName": "Arriv\u00e9e paysage", "type": "BaseItem"}, {"parameters": [{"value": 436.4200134277344, "controlAddress": "/time"}, {"value": "", "controlAddress": "/loopJumpCue"}], "niceName": "Cue", "type": "BaseItem"}], "viewOffset": [0, 0], "viewZoom": 1.0}}}, "type": "Sequence"}, {"parameters": [{"value": 650, "hexMode": false, "controlAddress": "/width"}, {"value": 186, "hexMode": false, "controlAddress": "/height"}], "niceName": "Perf Furniture", "containers": {"mediaParameters": {}, "sequence": {"parameters": [{"value": 1800.0, "controlAddress": "/totalTime"}, {"value": 573.7227783203125, "controlAddress": "/viewStartTime"}, {"value": 673.041015625, "controlAddress": "/viewEndTime"}], "niceName": "Sequence", "type": "Sequence", "layers": {"hideInEditor": true, "items": [{"parameters": [{"value": 60.0, "controlAddress": "/listSize"}], "niceName": "Right", "containers": {"positionning": {"parameters": [{"value": true, "controlAddress": "/enabled"}, {"value": 323, "hexMode": false, "controlAddress": "/x"}, {"value": -1, "hexMode": false, "controlAddress": "/y"}, {"value": 331, "hexMode": false, "controlAddress": "/width"}]}, "blocks": {"hideInEditor": true, "hideInRemoteControl": true, "items": [{"parameters": [{"value": 315.1400146484375, "controlAddress": "/startTime"}, {"value": 20.54000091552734, "controlAddress": "/length"}, {"value": 1.928638696670532, "controlAddress": "/fadeIn", "enabled": true}, {"value": 2.299999952316284, "controlAddress": "/fadeOut", "enabled": true}], "niceName": "Video", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "video": {"parameters": [{"value": "Videos/Mariage_04.mp4", "controlAddress": "/filePath"}], "niceName": "Video", "containers": {"mediaParameters": {}}, "type": "Video"}}, "type": "Video"}], "viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Media"}, {"parameters": [{"value": 60.0, "controlAddress": "/listSize"}], "niceName": "Left", "containers": {"positionning": {"parameters": [{"value": true, "controlAddress": "/enabled"}, {"value": 2, "hexMode": false, "controlAddress": "/x"}, {"value": -2, "hexMode": false, "controlAddress": "/y"}, {"value": 324, "hexMode": false, "controlAddress": "/width"}, {"value": 197, "hexMode": false, "controlAddress": "/height"}]}, "blocks": {"hideInEditor": true, "hideInRemoteControl": true, "items": [{"parameters": [{"value": 294.1600341796875, "controlAddress": "/startTime"}, {"value": 24.3799991607666, "controlAddress": "/length"}, {"value": 3.399999618530273, "controlAddress": "/fadeIn", "enabled": true}, {"value": 2.799999475479126, "controlAddress": "/fadeOut", "enabled": true}], "niceName": "Video", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "video": {"parameters": [{"value": "Videos/Mariage_03.mp4", "controlAddress": "/filePath"}], "niceName": "Video", "containers": {"mediaParameters": {}}, "type": "Video"}}, "type": "Video"}], "viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Media"}, {"parameters": [{"value": false, "controlAddress": "/enabled"}, {"value": 60.0, "controlAddress": "/listSize"}], "niceName": "Debug ", "containers": {"positionning": {"parameters": [{"value": false, "controlAddress": "/enabled"}]}, "blocks": {"hideInEditor": true, "hideInRemoteControl": true, "items": [{"parameters": [{"value": 651.02001953125, "controlAddress": "/length"}], "niceName": "Picture", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "picture": {"parameters": [{"value": "Image/_650x186.png", "controlAddress": "/filePath"}], "niceName": "Picture", "containers": {"mediaParameters": {}}, "type": "Picture"}}, "type": "Picture"}], "viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Media"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "cues": {"hideInEditor": true, "viewOffset": [0, 0], "viewZoom": 1.0}}}, "type": "Sequence"}, {"niceName": "Perf Xiaomi", "containers": {"mediaParameters": {}, "sequence": {"parameters": [{"value": 1800.0, "controlAddress": "/totalTime"}, {"value": 0.0, "controlAddress": "/viewStartTime"}, {"value": 1418.183471679688, "controlAddress": "/viewEndTime"}], "niceName": "Sequence", "type": "Sequence", "layers": {"hideInEditor": true, "items": [{"parameters": [{"value": false, "controlAddress": "/enabled"}, {"value": 60.0, "controlAddress": "/listSize"}], "niceName": "Debug", "containers": {"positionning": {"parameters": [{"value": false, "controlAddress": "/enabled"}]}, "blocks": {"hideInEditor": true, "hideInRemoteControl": true, "items": [{"parameters": [{"value": 629.3999633789062, "controlAddress": "/length"}], "niceName": "Picture", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "picture": {"parameters": [{"value": "Image/Mire_Cour.png", "relative": true, "controlAddress": "/filePath"}], "niceName": "Picture", "containers": {"mediaParameters": {}}, "type": "Picture"}}, "type": "Picture"}], "viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Media"}, {"parameters": [{"value": 92.0, "controlAddress": "/listSize"}, {"value": 92, "hexMode": false, "controlAddress": "/uiHeight"}, {"value": "Addition", "controlAddress": "/blendFunction"}], "niceName": "Oxipital", "containers": {"positionning": {"parameters": [{"value": false, "controlAddress": "/enabled"}]}, "blocks": {"hideInEditor": true, "items": [{"parameters": [{"value": 505.0, "controlAddress": "/startTime"}, {"value": 104.8000030517578, "controlAddress": "/length"}, {"value": 5.699998378753662, "controlAddress": "/fadeIn", "enabled": true}, {"value": 16.23661994934082, "controlAddress": "/fadeOut", "enabled": true}], "niceName": "Oxipital", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "video": {"parameters": [{"value": "Videos/Oxipital/Oxipital_final_cour.mp4", "controlAddress": "/filePath"}], "niceName": "Video", "containers": {"mediaParameters": {}}, "type": "Video"}}, "type": "Video"}], "viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Media"}, {"parameters": [{"value": 60.0, "controlAddress": "/listSize"}], "niceName": "Bal", "containers": {"positionning": {"parameters": [{"value": false, "controlAddress": "/enabled"}]}, "blocks": {"hideInEditor": true, "hideInRemoteControl": true, "items": [{"parameters": [{"value": 342.6000061035156, "controlAddress": "/startTime"}, {"value": 73.43999481201172, "controlAddress": "/length"}, {"value": 1.200000166893005, "controlAddress": "/fadeIn", "enabled": true}, {"value": 7.799995899200439, "controlAddress": "/fadeOut", "enabled": true}], "niceName": "Bal Cour", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "video": {"parameters": [{"value": "Videos/Bal/Bal_Cour_03.mp4", "controlAddress": "/filePath"}], "niceName": "Video", "containers": {"mediaParameters": {}}, "type": "Video"}}, "type": "Video"}, {"parameters": [{"value": 458.0, "controlAddress": "/startTime"}, {"value": 61.91999816894531, "controlAddress": "/length"}, {"value": 0.0, "controlAddress": "/fadeIn", "enabled": false}, {"value": 2.299999952316284, "controlAddress": "/fadeOut", "enabled": true}], "niceName": "Video", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "video": {"parameters": [{"value": "D:/Projects/Ultreia/Traces/RuleMapoule/Videos/Paysages Particules/Paysage Cour.mp4", "controlAddress": "/filePath"}], "niceName": "Video", "containers": {"mediaParameters": {}}, "type": "Video"}}, "type": "Video"}], "viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Media"}, {"parameters": [{"value": false, "controlAddress": "/enabled"}, {"value": 60.0, "controlAddress": "/listSize"}], "niceName": "Media", "containers": {"positionning": {"parameters": [{"value": false, "controlAddress": "/enabled"}]}, "blocks": {"hideInEditor": true, "items": [{"parameters": [{"value": 606.8800048828125, "controlAddress": "/length"}], "niceName": "Shared Texture", "editorIsCollapsed": true, "containers": {"fadeCurve": {"parameters": [{"value": 1.0, "controlAddress": "/length"}, {"value": [0.0, 1.0], "controlAddress": "/viewValueRange"}, {"value": [0.0, 1.0], "controlAddress": "/range", "enabled": true}], "hideInRemoteControl": false, "items": [{"parameters": [{"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key", "containers": {"easing": {"parameters": [{"value": [0.300000011920929, 0.0], "controlAddress": "/anchor1"}, {"value": [-0.300000011920929, 0.0], "controlAddress": "/anchor2"}]}}, "type": "Key"}, {"parameters": [{"value": 1.0, "controlAddress": "/position"}, {"value": 1.0, "controlAddress": "/value"}, {"value": "Bezier", "controlAddress": "/easingType"}], "niceName": "Key 1", "containers": {"easing": {}}, "type": "Key"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "sharedTexture": {"parameters": [{"value": "cour", "controlAddress": "/sharingName"}], "niceName": "Shared Texture", "containers": {"mediaParameters": {}}, "type": "Shared Texture"}}, "type": "Shared Texture"}], "viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Media"}], "viewOffset": [0, 0], "viewZoom": 1.0}, "cues": {"hideInEditor": true, "viewOffset": [0, 0], "viewZoom": 1.0}}}, "type": "Sequence"}, {"parameters": [{"value": "Videos/Bal/Bal_Jar_04r.mp4", "controlAddress": "/filePath"}], "niceName": "Video", "containers": {"mediaParameters": {}}, "type": "Video"}, {"parameters": [{"value": "GAMGIE-LAPTOP (Adobe After Effects)", "controlAddress": "/sharingName"}], "niceName": "Shared Texture", "containers": {"mediaParameters": {}}, "type": "Shared Texture"}], "viewOffset": [0, 0], "viewZoom": 1.0, "editingSequenceMedia": "/media/perfJar"}, "screen": {"hideInRemoteControl": true, "items": [{"parameters": [{"value": 3, "hexMode": false, "controlAddress": "/screenNumber"}], "niceName": "1-Retro Projection", "containers": {"positionning": {"parameters": [{"value": false, "controlAddress": "/enabled"}], "editorIsCollapsed": true}, "surface": {"items": [{"parameters": [{"value": "/perfRetroProjection", "controlAddress": "/media"}], "niceName": "Surface", "containers": {"positionning": {"parameters": [{"value": [0.8956747055053711, 0.8916847109794617], "controlAddress": "/topLeft"}, {"value": [0.8590705394744873, 0.05300358310341835], "controlAddress": "/topRight"}, {"value": [0.1190812289714813, 0.9626332521438599], "controlAddress": "/bottomLeft"}, {"value": [0.1248041167855263, 0.05547044426202774], "controlAddress": "/bottomRight"}], "editorIsCollapsed": true, "containers": {"bezier": {"editorIsCollapsed": true}}}, "adjustments": {"parameters": [{"value": "", "controlAddress": "/mask"}], "editorIsCollapsed": true}, "aspectRatio": {}, "pins": {"viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Surface"}], "viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Screen"}, {"niceName": "2-TV", "containers": {"positionning": {"parameters": [{"value": false, "controlAddress": "/enabled"}], "editorIsCollapsed": true}, "surface": {"items": [{"parameters": [{"value": "/perfTV", "controlAddress": "/media"}], "niceName": "Surface", "containers": {"positionning": {"parameters": [{"value": [0.05726169049739838, 0.9642550349235535], "controlAddress": "/topLeft"}, {"value": [0.9798809885978699, 0.9587557911872864], "controlAddress": "/topRight"}, {"value": [0.01702374592423439, 0.02474651858210564], "controlAddress": "/bottomLeft"}, {"value": [0.9845238924026489, 0.03849458694458008], "controlAddress": "/bottomRight"}], "editorIsCollapsed": true, "containers": {"bezier": {"editorIsCollapsed": true}}}, "adjustments": {"parameters": [{"value": 0.08144796639680862, "controlAddress": "/cropRight"}, {"value": 0.085972860455513, "controlAddress": "/cropLeft"}, {"value": "", "controlAddress": "/mask"}], "editorIsCollapsed": true}, "aspectRatio": {}, "pins": {"viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Surface"}], "viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Screen"}, {"parameters": [{"value": 5, "hexMode": false, "controlAddress": "/screenNumber"}], "niceName": "3-Fond De sc\u00e8ne", "containers": {"positionning": {"parameters": [{"value": false, "controlAddress": "/enabled"}], "editorIsCollapsed": true}, "surface": {"items": [{"parameters": [{"value": true, "controlAddress": "/enabled"}, {"value": "/perfFurniture", "controlAddress": "/media"}], "niceName": "Furniture Back", "editorIsCollapsed": true, "containers": {"positionning": {"parameters": [{"value": [0.2910806238651276, 0.6236246824264526], "controlAddress": "/topLeft"}, {"value": [0.3332671225070953, 0.6306689977645874], "controlAddress": "/topRight"}, {"value": [0.3267126679420471, 0.6765148639678955], "controlAddress": "/bottomLeft"}, {"value": [0.3311155140399933, 0.504447340965271], "controlAddress": "/bottomRight"}], "editorIsCollapsed": true, "containers": {"bezier": {"parameters": [{"value": [0.41132852435112, 0.997209906578064], "controlAddress": "/handleTopLeft"}, {"value": [0.744661808013916, 0.997209906578064], "controlAddress": "/handleTopRight"}, {"value": [0.41132852435112, -0.002790048718452454], "controlAddress": "/handleBottomLeft"}, {"value": [0.744661808013916, -0.002790048718452454], "controlAddress": "/handleBottomRight"}, {"value": [0.07799515873193741, 0.6638766527175903], "controlAddress": "/handleLeftTop"}, {"value": [0.07799515873193741, 0.3305433094501495], "controlAddress": "/handleLeftBottom"}, {"value": [1.077995181083679, 0.6638766527175903], "controlAddress": "/handleRightTop"}, {"value": [1.077995181083679, 0.3305433094501495], "controlAddress": "/handleRightBottom"}], "editorIsCollapsed": true}}}, "adjustments": {"parameters": [{"value": 0.1901023238897324, "controlAddress": "/softEdgeLeft"}, {"value": 0.7500000596046448, "controlAddress": "/cropLeft"}, {"value": false, "controlAddress": "/showTestPattern"}, {"value": "", "controlAddress": "/mask"}]}, "aspectRatio": {}, "pins": {"viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Surface"}, {"parameters": [{"value": true, "controlAddress": "/enabled"}, {"value": "/black", "controlAddress": "/media"}], "niceName": "Mask", "editorIsCollapsed": true, "containers": {"positionning": {"parameters": [{"value": [0.3443911969661713, 0.3803600966930389], "controlAddress": "/topLeft"}, {"value": [0.4224332273006439, 0.3886092901229858], "controlAddress": "/topRight"}, {"value": [0.341544508934021, 0.1974038034677505], "controlAddress": "/bottomLeft"}, {"value": [0.4222587645053864, 0.180019810795784], "controlAddress": "/bottomRight"}], "editorIsCollapsed": true, "containers": {"bezier": {"parameters": [{"value": [0.4458766877651215, 0.7674959301948547], "controlAddress": "/handleTopLeft"}, {"value": [0.7792100310325623, 0.7674959301948547], "controlAddress": "/handleTopRight"}, {"value": [0.4458766877651215, -0.2325040698051453], "controlAddress": "/handleBottomLeft"}, {"value": [0.7792100310325623, -0.2325040698051453], "controlAddress": "/handleBottomRight"}, {"value": [0.1125433519482613, 0.4341626167297363], "controlAddress": "/handleLeftTop"}, {"value": [0.1125433519482613, 0.1008292734622955], "controlAddress": "/handleLeftBottom"}, {"value": [1.112543344497681, 0.4341626167297363], "controlAddress": "/handleRightTop"}, {"value": [1.112543344497681, 0.1008292734622955], "controlAddress": "/handleRightBottom"}], "editorIsCollapsed": true}}}, "adjustments": {"parameters": [{"value": "", "controlAddress": "/mask"}], "editorIsCollapsed": true}, "aspectRatio": {}, "pins": {"viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Surface"}, {"parameters": [{"value": false, "controlAddress": "/enabled"}, {"value": "/black", "controlAddress": "/media"}], "niceName": "Mask 1", "editorIsCollapsed": true, "containers": {"positionning": {"parameters": [{"value": [0.2340241372585297, 0.6031929850578308], "controlAddress": "/topLeft"}, {"value": [0.2915636301040649, 0.6164918541908264], "controlAddress": "/topRight"}, {"value": [0.2380157113075256, 0.4736582040786743], "controlAddress": "/bottomLeft"}, {"value": [0.2986754477024078, 0.4776250123977661], "controlAddress": "/bottomRight"}], "editorIsCollapsed": true, "containers": {"bezier": {"editorIsCollapsed": true}}}, "adjustments": {"parameters": [{"value": "", "controlAddress": "/mask"}], "editorIsCollapsed": true}, "aspectRatio": {}, "pins": {"viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Surface"}, {"parameters": [{"value": "/black", "controlAddress": "/media"}], "niceName": "Mask Window", "editorIsCollapsed": true, "containers": {"positionning": {"parameters": [{"value": [0.5231261253356934, 0.7231557369232178], "controlAddress": "/topLeft"}, {"value": [0.6346095204353333, 0.7166286706924438], "controlAddress": "/topRight"}, {"value": [0.5192441344261169, 0.3809007108211517], "controlAddress": "/bottomLeft"}, {"value": [0.6264530420303345, 0.3463768362998962], "controlAddress": "/bottomRight"}], "editorIsCollapsed": true, "containers": {"bezier": {"editorIsCollapsed": true}}}, "adjustments": {"parameters": [{"value": "", "controlAddress": "/mask"}], "editorIsCollapsed": true}, "aspectRatio": {}, "pins": {"viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Surface"}, {"parameters": [{"value": "/perfJar", "controlAddress": "/media"}], "niceName": "Jardin", "editorIsCollapsed": true, "containers": {"positionning": {"parameters": [{"value": [0.176922470331192, 0.9964526891708374], "controlAddress": "/topLeft"}, {"value": [0.3583046197891235, 0.924444854259491], "controlAddress": "/topRight"}, {"value": [0.1676095724105835, 0.03441065922379494], "controlAddress": "/bottomLeft"}, {"value": [0.3561871945858002, 0.218479111790657], "controlAddress": "/bottomRight"}], "editorIsCollapsed": true, "containers": {"bezier": {"parameters": [{"value": [0.4134223461151123, 0.9940711259841919], "controlAddress": "/handleTopLeft"}, {"value": [0.7467556595802307, 0.9940711259841919], "controlAddress": "/handleTopRight"}, {"value": [0.4134223461151123, -0.005928853526711464], "controlAddress": "/handleBottomLeft"}, {"value": [0.7467556595802307, -0.005928853526711464], "controlAddress": "/handleBottomRight"}, {"value": [0.08008898794651031, 0.6607378125190735], "controlAddress": "/handleLeftTop"}, {"value": [0.08008898794651031, 0.3274044990539551], "controlAddress": "/handleLeftBottom"}, {"value": [1.080088973045349, 0.6607378125190735], "controlAddress": "/handleRightTop"}, {"value": [1.080088973045349, 0.3274044990539551], "controlAddress": "/handleRightBottom"}], "editorIsCollapsed": true}}}, "adjustments": {"parameters": [{"value": 0.1376146674156189, "controlAddress": "/softEdgeLeft"}, {"value": 0.1112546101212502, "controlAddress": "/cropBottom"}, {"value": 0.7164425849914551, "controlAddress": "/cropLeft"}, {"value": false, "controlAddress": "/showTestPattern"}, {"value": "", "controlAddress": "/mask"}]}, "aspectRatio": {"parameters": [{"value": 1.777777791023254, "controlAddress": "/ratioValue"}]}, "pins": {"viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Surface"}, {"parameters": [{"value": true, "controlAddress": "/locked"}, {"value": "/perfBack", "controlAddress": "/media"}], "niceName": "FDS", "containers": {"positionning": {"parameters": [{"value": [0.3658132255077362, 0.8905966281890869], "controlAddress": "/topLeft"}, {"value": [0.9317642450332642, 0.8638942241668701], "controlAddress": "/topRight"}, {"value": [0.3588589429855347, 0.2073765993118286], "controlAddress": "/bottomLeft"}, {"value": [0.9087198376655579, 0.1860212683677673], "controlAddress": "/bottomRight"}], "editorIsCollapsed": true, "containers": {"bezier": {"parameters": [{"value": [0.4089729487895966, 0.9940711259841919], "controlAddress": "/handleTopLeft"}, {"value": [0.7423062920570374, 0.9940711259841919], "controlAddress": "/handleTopRight"}, {"value": [0.4089729487895966, -0.005928853526711464], "controlAddress": "/handleBottomLeft"}, {"value": [0.7423062920570374, -0.005928853526711464], "controlAddress": "/handleBottomRight"}, {"value": [0.07563959807157516, 0.6607378125190735], "controlAddress": "/handleLeftTop"}, {"value": [0.07563959807157516, 0.3274044990539551], "controlAddress": "/handleLeftBottom"}, {"value": [1.075639605522156, 0.6607378125190735], "controlAddress": "/handleRightTop"}, {"value": [1.075639605522156, 0.3274044990539551], "controlAddress": "/handleRightBottom"}], "editorIsCollapsed": true}}}, "adjustments": {"parameters": [{"value": 0.0, "controlAddress": "/softEdgeTop"}, {"value": 0.0, "controlAddress": "/softEdgeRight"}, {"value": 0.0, "controlAddress": "/softEdgeBottom"}, {"value": 0.0, "controlAddress": "/softEdgeLeft"}, {"value": 0.0, "controlAddress": "/cropTop"}, {"value": 0.0, "controlAddress": "/cropRight"}, {"value": 0.0, "controlAddress": "/cropBottom"}, {"value": 0.0, "controlAddress": "/cropLeft"}, {"value": "", "controlAddress": "/mask"}], "editorIsCollapsed": true}, "aspectRatio": {"parameters": [{"value": 1.777777791023254, "controlAddress": "/ratioValue"}]}, "pins": {"viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Surface"}], "viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Screen"}, {"parameters": [{"value": 2, "hexMode": false, "controlAddress": "/screenNumber"}, {"value": true, "controlAddress": "/showTestPattern"}], "niceName": "4-Jar", "containers": {"positionning": {"parameters": [{"value": false, "controlAddress": "/enabled"}], "editorIsCollapsed": true}, "surface": {"items": [{"parameters": [{"value": "/perfFurniture", "controlAddress": "/media"}], "niceName": "Furniture", "editorIsCollapsed": true, "containers": {"positionning": {"parameters": [{"value": [0.6457359790802002, 0.5019802451133728], "controlAddress": "/topLeft"}, {"value": [1.012905597686768, 0.6115055084228516], "controlAddress": "/topRight"}, {"value": [0.6468995213508606, 0.3380317389965057], "controlAddress": "/bottomLeft"}, {"value": [0.9984084367752075, 0.2923078238964081], "controlAddress": "/bottomRight"}], "containers": {"bezier": {"parameters": [{"value": [0.3339864611625671, 1.006962299346924], "controlAddress": "/handleTopLeft"}, {"value": [0.6673198342323303, 1.006962299346924], "controlAddress": "/handleTopRight"}, {"value": [0.3339864611625671, 0.006962323561310768], "controlAddress": "/handleBottomLeft"}, {"value": [0.6673198342323303, 0.006962323561310768], "controlAddress": "/handleBottomRight"}, {"value": [0.0006531211547553539, 0.6736289858818054], "controlAddress": "/handleLeftTop"}, {"value": [0.0006531211547553539, 0.340295672416687], "controlAddress": "/handleLeftBottom"}, {"value": [1.000653147697449, 0.6736289858818054], "controlAddress": "/handleRightTop"}, {"value": [1.000653147697449, 0.340295672416687], "controlAddress": "/handleRightBottom"}], "editorIsCollapsed": true}}}, "adjustments": {"parameters": [{"value": 0.1538461446762085, "controlAddress": "/softEdgeRight"}, {"value": 0.1177884638309479, "controlAddress": "/cropRight"}, {"value": false, "controlAddress": "/showTestPattern"}, {"value": "", "controlAddress": "/mask"}]}, "aspectRatio": {}, "pins": {"viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Surface"}, {"parameters": [{"value": "/perfJar", "controlAddress": "/media"}], "niceName": "Devant Scene", "containers": {"positionning": {"parameters": [{"value": [0.01735618710517883, 0.8472830057144165], "controlAddress": "/topLeft"}, {"value": [0.6740541458129883, 0.928659200668335], "controlAddress": "/topRight"}, {"value": [0.02172661013901234, 0.1399902403354645], "controlAddress": "/bottomLeft"}, {"value": [0.6645187139511108, -0.05158890038728714], "controlAddress": "/bottomRight"}], "editorIsCollapsed": true, "containers": {"bezier": {"parameters": [{"value": [0.3333333432674408, 1.015810251235962], "controlAddress": "/handleTopLeft"}, {"value": [0.6666666865348816, 1.015810251235962], "controlAddress": "/handleTopRight"}, {"value": [0.3333333432674408, 0.015810277312994], "controlAddress": "/handleBottomLeft"}, {"value": [0.6666666865348816, 0.015810277312994], "controlAddress": "/handleBottomRight"}, {"value": [0.0, 0.6824769377708435], "controlAddress": "/handleLeftTop"}, {"value": [0.0, 0.3491436243057251], "controlAddress": "/handleLeftBottom"}, {"value": [1.0, 0.6824769377708435], "controlAddress": "/handleRightTop"}, {"value": [1.0, 0.3491436243057251], "controlAddress": "/handleRightBottom"}], "editorIsCollapsed": true}}}, "adjustments": {"parameters": [{"value": 0.4071955680847168, "controlAddress": "/cropRight"}, {"value": "", "controlAddress": "/mask"}], "editorIsCollapsed": true}, "aspectRatio": {}, "pins": {"viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Surface"}, {"parameters": [{"value": "/perfJar", "controlAddress": "/media"}], "niceName": "Fond de scene", "containers": {"positionning": {"parameters": [{"value": [0.6737592220306396, 0.9300048351287842], "controlAddress": "/topLeft"}, {"value": [1.001750588417053, 0.9890413880348206], "controlAddress": "/topRight"}, {"value": [0.6611673831939697, -0.1168531849980354], "controlAddress": "/bottomLeft"}, {"value": [0.9942810535430908, -0.3363370895385742], "controlAddress": "/bottomRight"}], "editorIsCollapsed": true, "containers": {"bezier": {"parameters": [{"value": [0.3333333432674408, 1.015810251235962], "controlAddress": "/handleTopLeft"}, {"value": [0.6666666865348816, 1.015810251235962], "controlAddress": "/handleTopRight"}, {"value": [0.3333333432674408, 0.015810277312994], "controlAddress": "/handleBottomLeft"}, {"value": [0.6666666865348816, 0.015810277312994], "controlAddress": "/handleBottomRight"}, {"value": [0.0, 0.6824769377708435], "controlAddress": "/handleLeftTop"}, {"value": [0.0, 0.3491436243057251], "controlAddress": "/handleLeftBottom"}, {"value": [1.0, 0.6824769377708435], "controlAddress": "/handleRightTop"}, {"value": [1.0, 0.3491436243057251], "controlAddress": "/handleRightBottom"}], "editorIsCollapsed": true}}}, "adjustments": {"parameters": [{"value": 0.3669724464416504, "controlAddress": "/softEdgeRight"}, {"value": 0.1988743841648102, "controlAddress": "/cropRight"}, {"value": 0.1114391162991524, "controlAddress": "/cropBottom"}, {"value": 0.5926994681358337, "controlAddress": "/cropLeft"}, {"value": false, "controlAddress": "/showTestPattern"}, {"value": "", "controlAddress": "/mask"}]}, "aspectRatio": {}, "pins": {"viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Surface"}], "viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Screen"}, {"parameters": [{"value": 6, "hexMode": false, "controlAddress": "/screenNumber"}], "niceName": "5-Cour", "containers": {"positionning": {"parameters": [{"value": false, "controlAddress": "/enabled"}, {"value": 720, "hexMode": false, "controlAddress": "/screenHeight"}], "editorIsCollapsed": true}, "surface": {"items": [{"parameters": [{"value": "/perfXiaomi", "controlAddress": "/media"}], "niceName": "Surface", "containers": {"positionning": {"parameters": [{"value": [0.09420434385538101, 0.9797760248184204], "controlAddress": "/topLeft"}, {"value": [1.003779888153076, 0.9284019470214844], "controlAddress": "/topRight"}, {"value": [0.2626107037067413, 0.003596022259443998], "controlAddress": "/bottomLeft"}, {"value": [0.802294909954071, 0.001198674435727298], "controlAddress": "/bottomRight"}], "editorIsCollapsed": true, "containers": {"bezier": {"editorIsCollapsed": true}}}, "adjustments": {"parameters": [{"value": false, "controlAddress": "/showTestPattern"}, {"value": "", "controlAddress": "/mask"}]}, "aspectRatio": {}, "pins": {"viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Surface"}], "viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Screen"}, {"parameters": [{"value": 4, "hexMode": false, "controlAddress": "/screenNumber"}], "niceName": "Ceiling", "containers": {"positionning": {"parameters": [{"value": false, "controlAddress": "/enabled"}], "editorIsCollapsed": true}, "surface": {"items": [{"parameters": [{"value": "", "ghostValue": "/sharedTexture", "controlAddress": "/media"}], "niceName": "Surface", "containers": {"positionning": {"editorIsCollapsed": true, "containers": {"bezier": {"editorIsCollapsed": true}}}, "adjustments": {"parameters": [{"value": "", "controlAddress": "/mask"}], "editorIsCollapsed": true}, "aspectRatio": {}, "pins": {"viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Surface"}], "viewOffset": [0, 0], "viewZoom": 1.0}}, "type": "Screen"}], "viewOffset": [0, 0], "viewZoom": 1.0, "editingScreen": "5_Cour"}}